// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageModule.proto

#ifndef PROTOBUF_MessageModule_2eproto__INCLUDED
#define PROTOBUF_MessageModule_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "FriendModule.pb.h"
// @@protoc_insertion_point(includes)

namespace main {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MessageModule_2eproto();
void protobuf_AssignDesc_MessageModule_2eproto();
void protobuf_ShutdownFile_MessageModule_2eproto();

class SendMessageRequest;
class SendMessageResponse;
class ShowMessageRequest;
class ShowMessageResponse;
class ChatProto;
class NewComerRecordRequest;
class NewComerRecordResponse;
class ViewSpectacularItemRequest;
class ViewSpectacularItemResponse;

// ===================================================================

class SendMessageRequest : public ::google::protobuf::MessageLite {
 public:
  SendMessageRequest();
  virtual ~SendMessageRequest();

  SendMessageRequest(const SendMessageRequest& from);

  inline SendMessageRequest& operator=(const SendMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SendMessageRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SendMessageRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SendMessageRequest* other);

  // implements Message ----------------------------------------------

  SendMessageRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SendMessageRequest& from);
  void MergeFrom(const SendMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chId = 1;
  inline bool has_chid() const;
  inline void clear_chid();
  static const int kChIdFieldNumber = 1;
  inline ::google::protobuf::int32 chid() const;
  inline void set_chid(::google::protobuf::int32 value);

  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:main.SendMessageRequest)
 private:
  inline void set_has_chid();
  inline void clear_has_chid();
  inline void set_has_content();
  inline void clear_has_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* content_;
  ::google::protobuf::int32 chid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageModule_2eproto();
  friend void protobuf_ShutdownFile_MessageModule_2eproto();

  void InitAsDefaultInstance();
  static SendMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class SendMessageResponse : public ::google::protobuf::MessageLite {
 public:
  SendMessageResponse();
  virtual ~SendMessageResponse();

  SendMessageResponse(const SendMessageResponse& from);

  inline SendMessageResponse& operator=(const SendMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SendMessageResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SendMessageResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SendMessageResponse* other);

  // implements Message ----------------------------------------------

  SendMessageResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SendMessageResponse& from);
  void MergeFrom(const SendMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint32 sendChatState = 1;
  inline bool has_sendchatstate() const;
  inline void clear_sendchatstate();
  static const int kSendChatStateFieldNumber = 1;
  inline ::google::protobuf::int32 sendchatstate() const;
  inline void set_sendchatstate(::google::protobuf::int32 value);

  // optional .main.ChatProto chat = 2;
  inline bool has_chat() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 2;
  inline const ::main::ChatProto& chat() const;
  inline ::main::ChatProto* mutable_chat();
  inline ::main::ChatProto* release_chat();
  inline void set_allocated_chat(::main::ChatProto* chat);

  // @@protoc_insertion_point(class_scope:main.SendMessageResponse)
 private:
  inline void set_has_sendchatstate();
  inline void clear_has_sendchatstate();
  inline void set_has_chat();
  inline void clear_has_chat();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::ChatProto* chat_;
  ::google::protobuf::int32 sendchatstate_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageModule_2eproto();
  friend void protobuf_ShutdownFile_MessageModule_2eproto();

  void InitAsDefaultInstance();
  static SendMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class ShowMessageRequest : public ::google::protobuf::MessageLite {
 public:
  ShowMessageRequest();
  virtual ~ShowMessageRequest();

  ShowMessageRequest(const ShowMessageRequest& from);

  inline ShowMessageRequest& operator=(const ShowMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ShowMessageRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ShowMessageRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ShowMessageRequest* other);

  // implements Message ----------------------------------------------

  ShowMessageRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ShowMessageRequest& from);
  void MergeFrom(const ShowMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chId = 1;
  inline bool has_chid() const;
  inline void clear_chid();
  static const int kChIdFieldNumber = 1;
  inline ::google::protobuf::int32 chid() const;
  inline void set_chid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ShowMessageRequest)
 private:
  inline void set_has_chid();
  inline void clear_has_chid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 chid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageModule_2eproto();
  friend void protobuf_ShutdownFile_MessageModule_2eproto();

  void InitAsDefaultInstance();
  static ShowMessageRequest* default_instance_;
};
// -------------------------------------------------------------------

class ShowMessageResponse : public ::google::protobuf::MessageLite {
 public:
  ShowMessageResponse();
  virtual ~ShowMessageResponse();

  ShowMessageResponse(const ShowMessageResponse& from);

  inline ShowMessageResponse& operator=(const ShowMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ShowMessageResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ShowMessageResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ShowMessageResponse* other);

  // implements Message ----------------------------------------------

  ShowMessageResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ShowMessageResponse& from);
  void MergeFrom(const ShowMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.ChatProto chat = 1;
  inline int chat_size() const;
  inline void clear_chat();
  static const int kChatFieldNumber = 1;
  inline const ::main::ChatProto& chat(int index) const;
  inline ::main::ChatProto* mutable_chat(int index);
  inline ::main::ChatProto* add_chat();
  inline const ::google::protobuf::RepeatedPtrField< ::main::ChatProto >&
      chat() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::ChatProto >*
      mutable_chat();

  // @@protoc_insertion_point(class_scope:main.ShowMessageResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::ChatProto > chat_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageModule_2eproto();
  friend void protobuf_ShutdownFile_MessageModule_2eproto();

  void InitAsDefaultInstance();
  static ShowMessageResponse* default_instance_;
};
// -------------------------------------------------------------------

class ChatProto : public ::google::protobuf::MessageLite {
 public:
  ChatProto();
  virtual ~ChatProto();

  ChatProto(const ChatProto& from);

  inline ChatProto& operator=(const ChatProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ChatProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ChatProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ChatProto* other);

  // implements Message ----------------------------------------------

  ChatProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ChatProto& from);
  void MergeFrom(const ChatProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 chId = 1;
  inline bool has_chid() const;
  inline void clear_chid();
  static const int kChIdFieldNumber = 1;
  inline ::google::protobuf::int32 chid() const;
  inline void set_chid(::google::protobuf::int32 value);

  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional int32 roleId = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 image = 4;
  inline bool has_image() const;
  inline void clear_image();
  static const int kImageFieldNumber = 4;
  inline ::google::protobuf::int32 image() const;
  inline void set_image(::google::protobuf::int32 value);

  // optional string roleNickName = 5;
  inline bool has_rolenickname() const;
  inline void clear_rolenickname();
  static const int kRoleNickNameFieldNumber = 5;
  inline const ::std::string& rolenickname() const;
  inline void set_rolenickname(const ::std::string& value);
  inline void set_rolenickname(const char* value);
  inline void set_rolenickname(const char* value, size_t size);
  inline ::std::string* mutable_rolenickname();
  inline ::std::string* release_rolenickname();
  inline void set_allocated_rolenickname(::std::string* rolenickname);

  // optional string timeStr = 6;
  inline bool has_timestr() const;
  inline void clear_timestr();
  static const int kTimeStrFieldNumber = 6;
  inline const ::std::string& timestr() const;
  inline void set_timestr(const ::std::string& value);
  inline void set_timestr(const char* value);
  inline void set_timestr(const char* value, size_t size);
  inline ::std::string* mutable_timestr();
  inline ::std::string* release_timestr();
  inline void set_allocated_timestr(::std::string* timestr);

  // optional int32 lordItemId = 7;
  inline bool has_lorditemid() const;
  inline void clear_lorditemid();
  static const int kLordItemIdFieldNumber = 7;
  inline ::google::protobuf::int32 lorditemid() const;
  inline void set_lorditemid(::google::protobuf::int32 value);

  // optional string pvpRankName = 8;
  inline bool has_pvprankname() const;
  inline void clear_pvprankname();
  static const int kPvpRankNameFieldNumber = 8;
  inline const ::std::string& pvprankname() const;
  inline void set_pvprankname(const ::std::string& value);
  inline void set_pvprankname(const char* value);
  inline void set_pvprankname(const char* value, size_t size);
  inline ::std::string* mutable_pvprankname();
  inline ::std::string* release_pvprankname();
  inline void set_allocated_pvprankname(::std::string* pvprankname);

  // optional int32 vipLevel = 9;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 9;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // optional int32 combatValue = 10;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatValueFieldNumber = 10;
  inline ::google::protobuf::int32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ChatProto)
 private:
  inline void set_has_chid();
  inline void clear_has_chid();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_image();
  inline void clear_has_image();
  inline void set_has_rolenickname();
  inline void clear_has_rolenickname();
  inline void set_has_timestr();
  inline void clear_has_timestr();
  inline void set_has_lorditemid();
  inline void clear_has_lorditemid();
  inline void set_has_pvprankname();
  inline void clear_has_pvprankname();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_combatvalue();
  inline void clear_has_combatvalue();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* content_;
  ::google::protobuf::int32 chid_;
  ::google::protobuf::int32 roleid_;
  ::std::string* rolenickname_;
  ::google::protobuf::int32 image_;
  ::google::protobuf::int32 lorditemid_;
  ::std::string* timestr_;
  ::std::string* pvprankname_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 combatvalue_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageModule_2eproto();
  friend void protobuf_ShutdownFile_MessageModule_2eproto();

  void InitAsDefaultInstance();
  static ChatProto* default_instance_;
};
// -------------------------------------------------------------------

class NewComerRecordRequest : public ::google::protobuf::MessageLite {
 public:
  NewComerRecordRequest();
  virtual ~NewComerRecordRequest();

  NewComerRecordRequest(const NewComerRecordRequest& from);

  inline NewComerRecordRequest& operator=(const NewComerRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const NewComerRecordRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NewComerRecordRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NewComerRecordRequest* other);

  // implements Message ----------------------------------------------

  NewComerRecordRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NewComerRecordRequest& from);
  void MergeFrom(const NewComerRecordRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 recordTypeId = 1;
  inline bool has_recordtypeid() const;
  inline void clear_recordtypeid();
  static const int kRecordTypeIdFieldNumber = 1;
  inline ::google::protobuf::int32 recordtypeid() const;
  inline void set_recordtypeid(::google::protobuf::int32 value);

  // optional string mac = 2;
  inline bool has_mac() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 2;
  inline const ::std::string& mac() const;
  inline void set_mac(const ::std::string& value);
  inline void set_mac(const char* value);
  inline void set_mac(const char* value, size_t size);
  inline ::std::string* mutable_mac();
  inline ::std::string* release_mac();
  inline void set_allocated_mac(::std::string* mac);

  // @@protoc_insertion_point(class_scope:main.NewComerRecordRequest)
 private:
  inline void set_has_recordtypeid();
  inline void clear_has_recordtypeid();
  inline void set_has_mac();
  inline void clear_has_mac();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* mac_;
  ::google::protobuf::int32 recordtypeid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageModule_2eproto();
  friend void protobuf_ShutdownFile_MessageModule_2eproto();

  void InitAsDefaultInstance();
  static NewComerRecordRequest* default_instance_;
};
// -------------------------------------------------------------------

class NewComerRecordResponse : public ::google::protobuf::MessageLite {
 public:
  NewComerRecordResponse();
  virtual ~NewComerRecordResponse();

  NewComerRecordResponse(const NewComerRecordResponse& from);

  inline NewComerRecordResponse& operator=(const NewComerRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const NewComerRecordResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const NewComerRecordResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(NewComerRecordResponse* other);

  // implements Message ----------------------------------------------

  NewComerRecordResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const NewComerRecordResponse& from);
  void MergeFrom(const NewComerRecordResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:main.NewComerRecordResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageModule_2eproto();
  friend void protobuf_ShutdownFile_MessageModule_2eproto();

  void InitAsDefaultInstance();
  static NewComerRecordResponse* default_instance_;
};
// -------------------------------------------------------------------

class ViewSpectacularItemRequest : public ::google::protobuf::MessageLite {
 public:
  ViewSpectacularItemRequest();
  virtual ~ViewSpectacularItemRequest();

  ViewSpectacularItemRequest(const ViewSpectacularItemRequest& from);

  inline ViewSpectacularItemRequest& operator=(const ViewSpectacularItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ViewSpectacularItemRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ViewSpectacularItemRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ViewSpectacularItemRequest* other);

  // implements Message ----------------------------------------------

  ViewSpectacularItemRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ViewSpectacularItemRequest& from);
  void MergeFrom(const ViewSpectacularItemRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ssid = 1;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 1;
  inline ::google::protobuf::int32 ssid() const;
  inline void set_ssid(::google::protobuf::int32 value);

  // optional int32 roleId = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ViewSpectacularItemRequest)
 private:
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_type();
  inline void clear_has_type();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ssid_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageModule_2eproto();
  friend void protobuf_ShutdownFile_MessageModule_2eproto();

  void InitAsDefaultInstance();
  static ViewSpectacularItemRequest* default_instance_;
};
// -------------------------------------------------------------------

class ViewSpectacularItemResponse : public ::google::protobuf::MessageLite {
 public:
  ViewSpectacularItemResponse();
  virtual ~ViewSpectacularItemResponse();

  ViewSpectacularItemResponse(const ViewSpectacularItemResponse& from);

  inline ViewSpectacularItemResponse& operator=(const ViewSpectacularItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ViewSpectacularItemResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ViewSpectacularItemResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ViewSpectacularItemResponse* other);

  // implements Message ----------------------------------------------

  ViewSpectacularItemResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ViewSpectacularItemResponse& from);
  void MergeFrom(const ViewSpectacularItemResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 currStar = 3;
  inline bool has_currstar() const;
  inline void clear_currstar();
  static const int kCurrStarFieldNumber = 3;
  inline ::google::protobuf::int32 currstar() const;
  inline void set_currstar(::google::protobuf::int32 value);

  // optional int32 smileStar = 4;
  inline bool has_smilestar() const;
  inline void clear_smilestar();
  static const int kSmileStarFieldNumber = 4;
  inline ::google::protobuf::int32 smilestar() const;
  inline void set_smilestar(::google::protobuf::int32 value);

  // optional int32 currLevel = 5;
  inline bool has_currlevel() const;
  inline void clear_currlevel();
  static const int kCurrLevelFieldNumber = 5;
  inline ::google::protobuf::int32 currlevel() const;
  inline void set_currlevel(::google::protobuf::int32 value);

  // optional int32 currExp = 6;
  inline bool has_currexp() const;
  inline void clear_currexp();
  static const int kCurrExpFieldNumber = 6;
  inline ::google::protobuf::int32 currexp() const;
  inline void set_currexp(::google::protobuf::int32 value);

  // optional int32 effective = 7;
  inline bool has_effective() const;
  inline void clear_effective();
  static const int kEffectiveFieldNumber = 7;
  inline ::google::protobuf::int32 effective() const;
  inline void set_effective(::google::protobuf::int32 value);

  // optional int32 atk = 8;
  inline bool has_atk() const;
  inline void clear_atk();
  static const int kAtkFieldNumber = 8;
  inline ::google::protobuf::int32 atk() const;
  inline void set_atk(::google::protobuf::int32 value);

  // optional int32 def = 9;
  inline bool has_def() const;
  inline void clear_def();
  static const int kDefFieldNumber = 9;
  inline ::google::protobuf::int32 def() const;
  inline void set_def(::google::protobuf::int32 value);

  // optional int32 speed = 10;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 10;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // optional int32 hp = 11;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 11;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // optional int32 lordSkillId = 12;
  inline bool has_lordskillid() const;
  inline void clear_lordskillid();
  static const int kLordSkillIdFieldNumber = 12;
  inline ::google::protobuf::int32 lordskillid() const;
  inline void set_lordskillid(::google::protobuf::int32 value);

  // optional int32 lordSkillExp = 13;
  inline bool has_lordskillexp() const;
  inline void clear_lordskillexp();
  static const int kLordSkillExpFieldNumber = 13;
  inline ::google::protobuf::int32 lordskillexp() const;
  inline void set_lordskillexp(::google::protobuf::int32 value);

  // optional int32 geneSkillId = 14;
  inline bool has_geneskillid() const;
  inline void clear_geneskillid();
  static const int kGeneSkillIdFieldNumber = 14;
  inline ::google::protobuf::int32 geneskillid() const;
  inline void set_geneskillid(::google::protobuf::int32 value);

  // optional int32 geneSkillExp = 15;
  inline bool has_geneskillexp() const;
  inline void clear_geneskillexp();
  static const int kGeneSkillExpFieldNumber = 15;
  inline ::google::protobuf::int32 geneskillexp() const;
  inline void set_geneskillexp(::google::protobuf::int32 value);

  // repeated int32 equipId = 16;
  inline int equipid_size() const;
  inline void clear_equipid();
  static const int kEquipIdFieldNumber = 16;
  inline ::google::protobuf::int32 equipid(int index) const;
  inline void set_equipid(int index, ::google::protobuf::int32 value);
  inline void add_equipid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      equipid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_equipid();

  // repeated .main.ReasonInfo reasonInfo = 17;
  inline int reasoninfo_size() const;
  inline void clear_reasoninfo();
  static const int kReasonInfoFieldNumber = 17;
  inline const ::main::ReasonInfo& reasoninfo(int index) const;
  inline ::main::ReasonInfo* mutable_reasoninfo(int index);
  inline ::main::ReasonInfo* add_reasoninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::main::ReasonInfo >&
      reasoninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::ReasonInfo >*
      mutable_reasoninfo();

  // optional int32 governing = 18;
  inline bool has_governing() const;
  inline void clear_governing();
  static const int kGoverningFieldNumber = 18;
  inline ::google::protobuf::int32 governing() const;
  inline void set_governing(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ViewSpectacularItemResponse)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_currstar();
  inline void clear_has_currstar();
  inline void set_has_smilestar();
  inline void clear_has_smilestar();
  inline void set_has_currlevel();
  inline void clear_has_currlevel();
  inline void set_has_currexp();
  inline void clear_has_currexp();
  inline void set_has_effective();
  inline void clear_has_effective();
  inline void set_has_atk();
  inline void clear_has_atk();
  inline void set_has_def();
  inline void clear_has_def();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_lordskillid();
  inline void clear_has_lordskillid();
  inline void set_has_lordskillexp();
  inline void clear_has_lordskillexp();
  inline void set_has_geneskillid();
  inline void clear_has_geneskillid();
  inline void set_has_geneskillexp();
  inline void clear_has_geneskillexp();
  inline void set_has_governing();
  inline void clear_has_governing();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 currstar_;
  ::google::protobuf::int32 smilestar_;
  ::google::protobuf::int32 currlevel_;
  ::google::protobuf::int32 currexp_;
  ::google::protobuf::int32 effective_;
  ::google::protobuf::int32 atk_;
  ::google::protobuf::int32 def_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 lordskillid_;
  ::google::protobuf::int32 lordskillexp_;
  ::google::protobuf::int32 geneskillid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > equipid_;
  ::google::protobuf::int32 geneskillexp_;
  ::google::protobuf::int32 governing_;
  ::google::protobuf::RepeatedPtrField< ::main::ReasonInfo > reasoninfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MessageModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MessageModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MessageModule_2eproto();
  friend void protobuf_ShutdownFile_MessageModule_2eproto();

  void InitAsDefaultInstance();
  static ViewSpectacularItemResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// SendMessageRequest

// optional int32 chId = 1;
inline bool SendMessageRequest::has_chid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMessageRequest::set_has_chid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMessageRequest::clear_has_chid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMessageRequest::clear_chid() {
  chid_ = 0;
  clear_has_chid();
}
inline ::google::protobuf::int32 SendMessageRequest::chid() const {
  // @@protoc_insertion_point(field_get:main.SendMessageRequest.chId)
  return chid_;
}
inline void SendMessageRequest::set_chid(::google::protobuf::int32 value) {
  set_has_chid();
  chid_ = value;
  // @@protoc_insertion_point(field_set:main.SendMessageRequest.chId)
}

// optional string content = 2;
inline bool SendMessageRequest::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMessageRequest::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMessageRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMessageRequest::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& SendMessageRequest::content() const {
  // @@protoc_insertion_point(field_get:main.SendMessageRequest.content)
  return *content_;
}
inline void SendMessageRequest::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:main.SendMessageRequest.content)
}
inline void SendMessageRequest::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SendMessageRequest.content)
}
inline void SendMessageRequest::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SendMessageRequest.content)
}
inline ::std::string* SendMessageRequest::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SendMessageRequest.content)
  return content_;
}
inline ::std::string* SendMessageRequest::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SendMessageRequest::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SendMessageRequest.content)
}

// -------------------------------------------------------------------

// SendMessageResponse

// optional sint32 sendChatState = 1;
inline bool SendMessageResponse::has_sendchatstate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMessageResponse::set_has_sendchatstate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMessageResponse::clear_has_sendchatstate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMessageResponse::clear_sendchatstate() {
  sendchatstate_ = 0;
  clear_has_sendchatstate();
}
inline ::google::protobuf::int32 SendMessageResponse::sendchatstate() const {
  // @@protoc_insertion_point(field_get:main.SendMessageResponse.sendChatState)
  return sendchatstate_;
}
inline void SendMessageResponse::set_sendchatstate(::google::protobuf::int32 value) {
  set_has_sendchatstate();
  sendchatstate_ = value;
  // @@protoc_insertion_point(field_set:main.SendMessageResponse.sendChatState)
}

// optional .main.ChatProto chat = 2;
inline bool SendMessageResponse::has_chat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMessageResponse::set_has_chat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMessageResponse::clear_has_chat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMessageResponse::clear_chat() {
  if (chat_ != NULL) chat_->::main::ChatProto::Clear();
  clear_has_chat();
}
inline const ::main::ChatProto& SendMessageResponse::chat() const {
  // @@protoc_insertion_point(field_get:main.SendMessageResponse.chat)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return chat_ != NULL ? *chat_ : *default_instance().chat_;
#else
  return chat_ != NULL ? *chat_ : *default_instance_->chat_;
#endif
}
inline ::main::ChatProto* SendMessageResponse::mutable_chat() {
  set_has_chat();
  if (chat_ == NULL) chat_ = new ::main::ChatProto;
  // @@protoc_insertion_point(field_mutable:main.SendMessageResponse.chat)
  return chat_;
}
inline ::main::ChatProto* SendMessageResponse::release_chat() {
  clear_has_chat();
  ::main::ChatProto* temp = chat_;
  chat_ = NULL;
  return temp;
}
inline void SendMessageResponse::set_allocated_chat(::main::ChatProto* chat) {
  delete chat_;
  chat_ = chat;
  if (chat) {
    set_has_chat();
  } else {
    clear_has_chat();
  }
  // @@protoc_insertion_point(field_set_allocated:main.SendMessageResponse.chat)
}

// -------------------------------------------------------------------

// ShowMessageRequest

// optional int32 chId = 1;
inline bool ShowMessageRequest::has_chid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowMessageRequest::set_has_chid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowMessageRequest::clear_has_chid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowMessageRequest::clear_chid() {
  chid_ = 0;
  clear_has_chid();
}
inline ::google::protobuf::int32 ShowMessageRequest::chid() const {
  // @@protoc_insertion_point(field_get:main.ShowMessageRequest.chId)
  return chid_;
}
inline void ShowMessageRequest::set_chid(::google::protobuf::int32 value) {
  set_has_chid();
  chid_ = value;
  // @@protoc_insertion_point(field_set:main.ShowMessageRequest.chId)
}

// -------------------------------------------------------------------

// ShowMessageResponse

// repeated .main.ChatProto chat = 1;
inline int ShowMessageResponse::chat_size() const {
  return chat_.size();
}
inline void ShowMessageResponse::clear_chat() {
  chat_.Clear();
}
inline const ::main::ChatProto& ShowMessageResponse::chat(int index) const {
  // @@protoc_insertion_point(field_get:main.ShowMessageResponse.chat)
  return chat_.Get(index);
}
inline ::main::ChatProto* ShowMessageResponse::mutable_chat(int index) {
  // @@protoc_insertion_point(field_mutable:main.ShowMessageResponse.chat)
  return chat_.Mutable(index);
}
inline ::main::ChatProto* ShowMessageResponse::add_chat() {
  // @@protoc_insertion_point(field_add:main.ShowMessageResponse.chat)
  return chat_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::ChatProto >&
ShowMessageResponse::chat() const {
  // @@protoc_insertion_point(field_list:main.ShowMessageResponse.chat)
  return chat_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::ChatProto >*
ShowMessageResponse::mutable_chat() {
  // @@protoc_insertion_point(field_mutable_list:main.ShowMessageResponse.chat)
  return &chat_;
}

// -------------------------------------------------------------------

// ChatProto

// optional int32 chId = 1;
inline bool ChatProto::has_chid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChatProto::set_has_chid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChatProto::clear_has_chid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChatProto::clear_chid() {
  chid_ = 0;
  clear_has_chid();
}
inline ::google::protobuf::int32 ChatProto::chid() const {
  // @@protoc_insertion_point(field_get:main.ChatProto.chId)
  return chid_;
}
inline void ChatProto::set_chid(::google::protobuf::int32 value) {
  set_has_chid();
  chid_ = value;
  // @@protoc_insertion_point(field_set:main.ChatProto.chId)
}

// optional string content = 2;
inline bool ChatProto::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChatProto::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChatProto::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChatProto::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ChatProto::content() const {
  // @@protoc_insertion_point(field_get:main.ChatProto.content)
  return *content_;
}
inline void ChatProto::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:main.ChatProto.content)
}
inline void ChatProto::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.ChatProto.content)
}
inline void ChatProto::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.ChatProto.content)
}
inline ::std::string* ChatProto::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.ChatProto.content)
  return content_;
}
inline ::std::string* ChatProto::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChatProto::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.ChatProto.content)
}

// optional int32 roleId = 3;
inline bool ChatProto::has_roleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChatProto::set_has_roleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChatProto::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChatProto::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 ChatProto::roleid() const {
  // @@protoc_insertion_point(field_get:main.ChatProto.roleId)
  return roleid_;
}
inline void ChatProto::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:main.ChatProto.roleId)
}

// optional int32 image = 4;
inline bool ChatProto::has_image() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChatProto::set_has_image() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChatProto::clear_has_image() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChatProto::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 ChatProto::image() const {
  // @@protoc_insertion_point(field_get:main.ChatProto.image)
  return image_;
}
inline void ChatProto::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
  // @@protoc_insertion_point(field_set:main.ChatProto.image)
}

// optional string roleNickName = 5;
inline bool ChatProto::has_rolenickname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChatProto::set_has_rolenickname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChatProto::clear_has_rolenickname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChatProto::clear_rolenickname() {
  if (rolenickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolenickname_->clear();
  }
  clear_has_rolenickname();
}
inline const ::std::string& ChatProto::rolenickname() const {
  // @@protoc_insertion_point(field_get:main.ChatProto.roleNickName)
  return *rolenickname_;
}
inline void ChatProto::set_rolenickname(const ::std::string& value) {
  set_has_rolenickname();
  if (rolenickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolenickname_ = new ::std::string;
  }
  rolenickname_->assign(value);
  // @@protoc_insertion_point(field_set:main.ChatProto.roleNickName)
}
inline void ChatProto::set_rolenickname(const char* value) {
  set_has_rolenickname();
  if (rolenickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolenickname_ = new ::std::string;
  }
  rolenickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.ChatProto.roleNickName)
}
inline void ChatProto::set_rolenickname(const char* value, size_t size) {
  set_has_rolenickname();
  if (rolenickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolenickname_ = new ::std::string;
  }
  rolenickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.ChatProto.roleNickName)
}
inline ::std::string* ChatProto::mutable_rolenickname() {
  set_has_rolenickname();
  if (rolenickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rolenickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.ChatProto.roleNickName)
  return rolenickname_;
}
inline ::std::string* ChatProto::release_rolenickname() {
  clear_has_rolenickname();
  if (rolenickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rolenickname_;
    rolenickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChatProto::set_allocated_rolenickname(::std::string* rolenickname) {
  if (rolenickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rolenickname_;
  }
  if (rolenickname) {
    set_has_rolenickname();
    rolenickname_ = rolenickname;
  } else {
    clear_has_rolenickname();
    rolenickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.ChatProto.roleNickName)
}

// optional string timeStr = 6;
inline bool ChatProto::has_timestr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChatProto::set_has_timestr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChatProto::clear_has_timestr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChatProto::clear_timestr() {
  if (timestr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timestr_->clear();
  }
  clear_has_timestr();
}
inline const ::std::string& ChatProto::timestr() const {
  // @@protoc_insertion_point(field_get:main.ChatProto.timeStr)
  return *timestr_;
}
inline void ChatProto::set_timestr(const ::std::string& value) {
  set_has_timestr();
  if (timestr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timestr_ = new ::std::string;
  }
  timestr_->assign(value);
  // @@protoc_insertion_point(field_set:main.ChatProto.timeStr)
}
inline void ChatProto::set_timestr(const char* value) {
  set_has_timestr();
  if (timestr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timestr_ = new ::std::string;
  }
  timestr_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.ChatProto.timeStr)
}
inline void ChatProto::set_timestr(const char* value, size_t size) {
  set_has_timestr();
  if (timestr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timestr_ = new ::std::string;
  }
  timestr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.ChatProto.timeStr)
}
inline ::std::string* ChatProto::mutable_timestr() {
  set_has_timestr();
  if (timestr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    timestr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.ChatProto.timeStr)
  return timestr_;
}
inline ::std::string* ChatProto::release_timestr() {
  clear_has_timestr();
  if (timestr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = timestr_;
    timestr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChatProto::set_allocated_timestr(::std::string* timestr) {
  if (timestr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete timestr_;
  }
  if (timestr) {
    set_has_timestr();
    timestr_ = timestr;
  } else {
    clear_has_timestr();
    timestr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.ChatProto.timeStr)
}

// optional int32 lordItemId = 7;
inline bool ChatProto::has_lorditemid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ChatProto::set_has_lorditemid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ChatProto::clear_has_lorditemid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ChatProto::clear_lorditemid() {
  lorditemid_ = 0;
  clear_has_lorditemid();
}
inline ::google::protobuf::int32 ChatProto::lorditemid() const {
  // @@protoc_insertion_point(field_get:main.ChatProto.lordItemId)
  return lorditemid_;
}
inline void ChatProto::set_lorditemid(::google::protobuf::int32 value) {
  set_has_lorditemid();
  lorditemid_ = value;
  // @@protoc_insertion_point(field_set:main.ChatProto.lordItemId)
}

// optional string pvpRankName = 8;
inline bool ChatProto::has_pvprankname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ChatProto::set_has_pvprankname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ChatProto::clear_has_pvprankname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ChatProto::clear_pvprankname() {
  if (pvprankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvprankname_->clear();
  }
  clear_has_pvprankname();
}
inline const ::std::string& ChatProto::pvprankname() const {
  // @@protoc_insertion_point(field_get:main.ChatProto.pvpRankName)
  return *pvprankname_;
}
inline void ChatProto::set_pvprankname(const ::std::string& value) {
  set_has_pvprankname();
  if (pvprankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvprankname_ = new ::std::string;
  }
  pvprankname_->assign(value);
  // @@protoc_insertion_point(field_set:main.ChatProto.pvpRankName)
}
inline void ChatProto::set_pvprankname(const char* value) {
  set_has_pvprankname();
  if (pvprankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvprankname_ = new ::std::string;
  }
  pvprankname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.ChatProto.pvpRankName)
}
inline void ChatProto::set_pvprankname(const char* value, size_t size) {
  set_has_pvprankname();
  if (pvprankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvprankname_ = new ::std::string;
  }
  pvprankname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.ChatProto.pvpRankName)
}
inline ::std::string* ChatProto::mutable_pvprankname() {
  set_has_pvprankname();
  if (pvprankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvprankname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.ChatProto.pvpRankName)
  return pvprankname_;
}
inline ::std::string* ChatProto::release_pvprankname() {
  clear_has_pvprankname();
  if (pvprankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pvprankname_;
    pvprankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ChatProto::set_allocated_pvprankname(::std::string* pvprankname) {
  if (pvprankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pvprankname_;
  }
  if (pvprankname) {
    set_has_pvprankname();
    pvprankname_ = pvprankname;
  } else {
    clear_has_pvprankname();
    pvprankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.ChatProto.pvpRankName)
}

// optional int32 vipLevel = 9;
inline bool ChatProto::has_viplevel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ChatProto::set_has_viplevel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ChatProto::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ChatProto::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 ChatProto::viplevel() const {
  // @@protoc_insertion_point(field_get:main.ChatProto.vipLevel)
  return viplevel_;
}
inline void ChatProto::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:main.ChatProto.vipLevel)
}

// optional int32 combatValue = 10;
inline bool ChatProto::has_combatvalue() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ChatProto::set_has_combatvalue() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ChatProto::clear_has_combatvalue() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ChatProto::clear_combatvalue() {
  combatvalue_ = 0;
  clear_has_combatvalue();
}
inline ::google::protobuf::int32 ChatProto::combatvalue() const {
  // @@protoc_insertion_point(field_get:main.ChatProto.combatValue)
  return combatvalue_;
}
inline void ChatProto::set_combatvalue(::google::protobuf::int32 value) {
  set_has_combatvalue();
  combatvalue_ = value;
  // @@protoc_insertion_point(field_set:main.ChatProto.combatValue)
}

// -------------------------------------------------------------------

// NewComerRecordRequest

// optional int32 recordTypeId = 1;
inline bool NewComerRecordRequest::has_recordtypeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewComerRecordRequest::set_has_recordtypeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewComerRecordRequest::clear_has_recordtypeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewComerRecordRequest::clear_recordtypeid() {
  recordtypeid_ = 0;
  clear_has_recordtypeid();
}
inline ::google::protobuf::int32 NewComerRecordRequest::recordtypeid() const {
  // @@protoc_insertion_point(field_get:main.NewComerRecordRequest.recordTypeId)
  return recordtypeid_;
}
inline void NewComerRecordRequest::set_recordtypeid(::google::protobuf::int32 value) {
  set_has_recordtypeid();
  recordtypeid_ = value;
  // @@protoc_insertion_point(field_set:main.NewComerRecordRequest.recordTypeId)
}

// optional string mac = 2;
inline bool NewComerRecordRequest::has_mac() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewComerRecordRequest::set_has_mac() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewComerRecordRequest::clear_has_mac() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewComerRecordRequest::clear_mac() {
  if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_->clear();
  }
  clear_has_mac();
}
inline const ::std::string& NewComerRecordRequest::mac() const {
  // @@protoc_insertion_point(field_get:main.NewComerRecordRequest.mac)
  return *mac_;
}
inline void NewComerRecordRequest::set_mac(const ::std::string& value) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
  // @@protoc_insertion_point(field_set:main.NewComerRecordRequest.mac)
}
inline void NewComerRecordRequest::set_mac(const char* value) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.NewComerRecordRequest.mac)
}
inline void NewComerRecordRequest::set_mac(const char* value, size_t size) {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  mac_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.NewComerRecordRequest.mac)
}
inline ::std::string* NewComerRecordRequest::mutable_mac() {
  set_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mac_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.NewComerRecordRequest.mac)
  return mac_;
}
inline ::std::string* NewComerRecordRequest::release_mac() {
  clear_has_mac();
  if (mac_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mac_;
    mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NewComerRecordRequest::set_allocated_mac(::std::string* mac) {
  if (mac_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mac_;
  }
  if (mac) {
    set_has_mac();
    mac_ = mac;
  } else {
    clear_has_mac();
    mac_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.NewComerRecordRequest.mac)
}

// -------------------------------------------------------------------

// NewComerRecordResponse

// -------------------------------------------------------------------

// ViewSpectacularItemRequest

// optional int32 ssid = 1;
inline bool ViewSpectacularItemRequest::has_ssid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ViewSpectacularItemRequest::set_has_ssid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ViewSpectacularItemRequest::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ViewSpectacularItemRequest::clear_ssid() {
  ssid_ = 0;
  clear_has_ssid();
}
inline ::google::protobuf::int32 ViewSpectacularItemRequest::ssid() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemRequest.ssid)
  return ssid_;
}
inline void ViewSpectacularItemRequest::set_ssid(::google::protobuf::int32 value) {
  set_has_ssid();
  ssid_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemRequest.ssid)
}

// optional int32 roleId = 2;
inline bool ViewSpectacularItemRequest::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ViewSpectacularItemRequest::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ViewSpectacularItemRequest::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ViewSpectacularItemRequest::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 ViewSpectacularItemRequest::roleid() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemRequest.roleId)
  return roleid_;
}
inline void ViewSpectacularItemRequest::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemRequest.roleId)
}

// optional int32 type = 3;
inline bool ViewSpectacularItemRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ViewSpectacularItemRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ViewSpectacularItemRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ViewSpectacularItemRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ViewSpectacularItemRequest::type() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemRequest.type)
  return type_;
}
inline void ViewSpectacularItemRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemRequest.type)
}

// -------------------------------------------------------------------

// ViewSpectacularItemResponse

// optional int32 type = 1;
inline bool ViewSpectacularItemResponse::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ViewSpectacularItemResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ViewSpectacularItemResponse::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::type() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.type)
  return type_;
}
inline void ViewSpectacularItemResponse::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.type)
}

// optional int32 itemId = 2;
inline bool ViewSpectacularItemResponse::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ViewSpectacularItemResponse::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ViewSpectacularItemResponse::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::itemid() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.itemId)
  return itemid_;
}
inline void ViewSpectacularItemResponse::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.itemId)
}

// optional int32 currStar = 3;
inline bool ViewSpectacularItemResponse::has_currstar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_currstar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ViewSpectacularItemResponse::clear_has_currstar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ViewSpectacularItemResponse::clear_currstar() {
  currstar_ = 0;
  clear_has_currstar();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::currstar() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.currStar)
  return currstar_;
}
inline void ViewSpectacularItemResponse::set_currstar(::google::protobuf::int32 value) {
  set_has_currstar();
  currstar_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.currStar)
}

// optional int32 smileStar = 4;
inline bool ViewSpectacularItemResponse::has_smilestar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_smilestar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ViewSpectacularItemResponse::clear_has_smilestar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ViewSpectacularItemResponse::clear_smilestar() {
  smilestar_ = 0;
  clear_has_smilestar();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::smilestar() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.smileStar)
  return smilestar_;
}
inline void ViewSpectacularItemResponse::set_smilestar(::google::protobuf::int32 value) {
  set_has_smilestar();
  smilestar_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.smileStar)
}

// optional int32 currLevel = 5;
inline bool ViewSpectacularItemResponse::has_currlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_currlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ViewSpectacularItemResponse::clear_has_currlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ViewSpectacularItemResponse::clear_currlevel() {
  currlevel_ = 0;
  clear_has_currlevel();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::currlevel() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.currLevel)
  return currlevel_;
}
inline void ViewSpectacularItemResponse::set_currlevel(::google::protobuf::int32 value) {
  set_has_currlevel();
  currlevel_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.currLevel)
}

// optional int32 currExp = 6;
inline bool ViewSpectacularItemResponse::has_currexp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_currexp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ViewSpectacularItemResponse::clear_has_currexp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ViewSpectacularItemResponse::clear_currexp() {
  currexp_ = 0;
  clear_has_currexp();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::currexp() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.currExp)
  return currexp_;
}
inline void ViewSpectacularItemResponse::set_currexp(::google::protobuf::int32 value) {
  set_has_currexp();
  currexp_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.currExp)
}

// optional int32 effective = 7;
inline bool ViewSpectacularItemResponse::has_effective() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_effective() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ViewSpectacularItemResponse::clear_has_effective() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ViewSpectacularItemResponse::clear_effective() {
  effective_ = 0;
  clear_has_effective();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::effective() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.effective)
  return effective_;
}
inline void ViewSpectacularItemResponse::set_effective(::google::protobuf::int32 value) {
  set_has_effective();
  effective_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.effective)
}

// optional int32 atk = 8;
inline bool ViewSpectacularItemResponse::has_atk() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_atk() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ViewSpectacularItemResponse::clear_has_atk() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ViewSpectacularItemResponse::clear_atk() {
  atk_ = 0;
  clear_has_atk();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::atk() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.atk)
  return atk_;
}
inline void ViewSpectacularItemResponse::set_atk(::google::protobuf::int32 value) {
  set_has_atk();
  atk_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.atk)
}

// optional int32 def = 9;
inline bool ViewSpectacularItemResponse::has_def() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_def() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ViewSpectacularItemResponse::clear_has_def() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ViewSpectacularItemResponse::clear_def() {
  def_ = 0;
  clear_has_def();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::def() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.def)
  return def_;
}
inline void ViewSpectacularItemResponse::set_def(::google::protobuf::int32 value) {
  set_has_def();
  def_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.def)
}

// optional int32 speed = 10;
inline bool ViewSpectacularItemResponse::has_speed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_speed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ViewSpectacularItemResponse::clear_has_speed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ViewSpectacularItemResponse::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::speed() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.speed)
  return speed_;
}
inline void ViewSpectacularItemResponse::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.speed)
}

// optional int32 hp = 11;
inline bool ViewSpectacularItemResponse::has_hp() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_hp() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ViewSpectacularItemResponse::clear_has_hp() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ViewSpectacularItemResponse::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::hp() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.hp)
  return hp_;
}
inline void ViewSpectacularItemResponse::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.hp)
}

// optional int32 lordSkillId = 12;
inline bool ViewSpectacularItemResponse::has_lordskillid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_lordskillid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ViewSpectacularItemResponse::clear_has_lordskillid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ViewSpectacularItemResponse::clear_lordskillid() {
  lordskillid_ = 0;
  clear_has_lordskillid();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::lordskillid() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.lordSkillId)
  return lordskillid_;
}
inline void ViewSpectacularItemResponse::set_lordskillid(::google::protobuf::int32 value) {
  set_has_lordskillid();
  lordskillid_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.lordSkillId)
}

// optional int32 lordSkillExp = 13;
inline bool ViewSpectacularItemResponse::has_lordskillexp() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_lordskillexp() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ViewSpectacularItemResponse::clear_has_lordskillexp() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ViewSpectacularItemResponse::clear_lordskillexp() {
  lordskillexp_ = 0;
  clear_has_lordskillexp();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::lordskillexp() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.lordSkillExp)
  return lordskillexp_;
}
inline void ViewSpectacularItemResponse::set_lordskillexp(::google::protobuf::int32 value) {
  set_has_lordskillexp();
  lordskillexp_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.lordSkillExp)
}

// optional int32 geneSkillId = 14;
inline bool ViewSpectacularItemResponse::has_geneskillid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_geneskillid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ViewSpectacularItemResponse::clear_has_geneskillid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ViewSpectacularItemResponse::clear_geneskillid() {
  geneskillid_ = 0;
  clear_has_geneskillid();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::geneskillid() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.geneSkillId)
  return geneskillid_;
}
inline void ViewSpectacularItemResponse::set_geneskillid(::google::protobuf::int32 value) {
  set_has_geneskillid();
  geneskillid_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.geneSkillId)
}

// optional int32 geneSkillExp = 15;
inline bool ViewSpectacularItemResponse::has_geneskillexp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_geneskillexp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ViewSpectacularItemResponse::clear_has_geneskillexp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ViewSpectacularItemResponse::clear_geneskillexp() {
  geneskillexp_ = 0;
  clear_has_geneskillexp();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::geneskillexp() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.geneSkillExp)
  return geneskillexp_;
}
inline void ViewSpectacularItemResponse::set_geneskillexp(::google::protobuf::int32 value) {
  set_has_geneskillexp();
  geneskillexp_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.geneSkillExp)
}

// repeated int32 equipId = 16;
inline int ViewSpectacularItemResponse::equipid_size() const {
  return equipid_.size();
}
inline void ViewSpectacularItemResponse::clear_equipid() {
  equipid_.Clear();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::equipid(int index) const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.equipId)
  return equipid_.Get(index);
}
inline void ViewSpectacularItemResponse::set_equipid(int index, ::google::protobuf::int32 value) {
  equipid_.Set(index, value);
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.equipId)
}
inline void ViewSpectacularItemResponse::add_equipid(::google::protobuf::int32 value) {
  equipid_.Add(value);
  // @@protoc_insertion_point(field_add:main.ViewSpectacularItemResponse.equipId)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ViewSpectacularItemResponse::equipid() const {
  // @@protoc_insertion_point(field_list:main.ViewSpectacularItemResponse.equipId)
  return equipid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ViewSpectacularItemResponse::mutable_equipid() {
  // @@protoc_insertion_point(field_mutable_list:main.ViewSpectacularItemResponse.equipId)
  return &equipid_;
}

// repeated .main.ReasonInfo reasonInfo = 17;
inline int ViewSpectacularItemResponse::reasoninfo_size() const {
  return reasoninfo_.size();
}
inline void ViewSpectacularItemResponse::clear_reasoninfo() {
  reasoninfo_.Clear();
}
inline const ::main::ReasonInfo& ViewSpectacularItemResponse::reasoninfo(int index) const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.reasonInfo)
  return reasoninfo_.Get(index);
}
inline ::main::ReasonInfo* ViewSpectacularItemResponse::mutable_reasoninfo(int index) {
  // @@protoc_insertion_point(field_mutable:main.ViewSpectacularItemResponse.reasonInfo)
  return reasoninfo_.Mutable(index);
}
inline ::main::ReasonInfo* ViewSpectacularItemResponse::add_reasoninfo() {
  // @@protoc_insertion_point(field_add:main.ViewSpectacularItemResponse.reasonInfo)
  return reasoninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::ReasonInfo >&
ViewSpectacularItemResponse::reasoninfo() const {
  // @@protoc_insertion_point(field_list:main.ViewSpectacularItemResponse.reasonInfo)
  return reasoninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::ReasonInfo >*
ViewSpectacularItemResponse::mutable_reasoninfo() {
  // @@protoc_insertion_point(field_mutable_list:main.ViewSpectacularItemResponse.reasonInfo)
  return &reasoninfo_;
}

// optional int32 governing = 18;
inline bool ViewSpectacularItemResponse::has_governing() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ViewSpectacularItemResponse::set_has_governing() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ViewSpectacularItemResponse::clear_has_governing() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ViewSpectacularItemResponse::clear_governing() {
  governing_ = 0;
  clear_has_governing();
}
inline ::google::protobuf::int32 ViewSpectacularItemResponse::governing() const {
  // @@protoc_insertion_point(field_get:main.ViewSpectacularItemResponse.governing)
  return governing_;
}
inline void ViewSpectacularItemResponse::set_governing(::google::protobuf::int32 value) {
  set_has_governing();
  governing_ = value;
  // @@protoc_insertion_point(field_set:main.ViewSpectacularItemResponse.governing)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MessageModule_2eproto__INCLUDED
