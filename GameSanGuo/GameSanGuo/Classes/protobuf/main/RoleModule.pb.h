// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoleModule.proto

#ifndef PROTOBUF_RoleModule_2eproto__INCLUDED
#define PROTOBUF_RoleModule_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "ItemModule.pb.h"
#include "FriendModule.pb.h"
#include "MailModule.pb.h"
#include "LotteryModule.pb.h"
#include "GMQAModule.pb.h"
#include "RewardModule.pb.h"
// @@protoc_insertion_point(includes)

namespace main {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_RoleModule_2eproto();
void protobuf_AssignDesc_RoleModule_2eproto();
void protobuf_ShutdownFile_RoleModule_2eproto();

class CreateRoleRequest;
class CreateRoleResponse;
class RoleResponse;
class updateRoleResponse;
class TriggerInfo;
class updateRolePowerRequest;
class updateRolePowerResponse;
class BaseBagInfo;
class TeamInfo;
class TeamInfoItem;
class BeginnersGuideRequest;
class BeginnersGuideResponse;
class LoginAwardListRequest;
class LoginAwardListResponse;
class LoginAwardModel;
class LoginAwardItemModel;
class RewardLoginAwardRequest;
class RewardLoginAwardResponse;
class LoginAwardItemInfo;
class RewardLoginAwardGoldResponse;
class RewardLoginAwardGoldRequest;
class UpdateRoleQuest;
class RoleQuestProto;
class ReceiveQuestRewardRequest;
class ReceiveQuestRewardResponse;
class BossStartSateResponse;
class BossPlotCountProto;

// ===================================================================

class CreateRoleRequest : public ::google::protobuf::MessageLite {
 public:
  CreateRoleRequest();
  virtual ~CreateRoleRequest();

  CreateRoleRequest(const CreateRoleRequest& from);

  inline CreateRoleRequest& operator=(const CreateRoleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CreateRoleRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CreateRoleRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CreateRoleRequest* other);

  // implements Message ----------------------------------------------

  CreateRoleRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CreateRoleRequest& from);
  void MergeFrom(const CreateRoleRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string nickName = 1;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNickNameFieldNumber = 1;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // required int32 country = 2;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 2;
  inline ::google::protobuf::int32 country() const;
  inline void set_country(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.CreateRoleRequest)
 private:
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_country();
  inline void clear_has_country();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  ::google::protobuf::int32 country_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static CreateRoleRequest* default_instance_;
};
// -------------------------------------------------------------------

class CreateRoleResponse : public ::google::protobuf::MessageLite {
 public:
  CreateRoleResponse();
  virtual ~CreateRoleResponse();

  CreateRoleResponse(const CreateRoleResponse& from);

  inline CreateRoleResponse& operator=(const CreateRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const CreateRoleResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const CreateRoleResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(CreateRoleResponse* other);

  // implements Message ----------------------------------------------

  CreateRoleResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const CreateRoleResponse& from);
  void MergeFrom(const CreateRoleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional string errorStr = 2;
  inline bool has_errorstr() const;
  inline void clear_errorstr();
  static const int kErrorStrFieldNumber = 2;
  inline const ::std::string& errorstr() const;
  inline void set_errorstr(const ::std::string& value);
  inline void set_errorstr(const char* value);
  inline void set_errorstr(const char* value, size_t size);
  inline ::std::string* mutable_errorstr();
  inline ::std::string* release_errorstr();
  inline void set_allocated_errorstr(::std::string* errorstr);

  // optional .main.RoleResponse roleResponse = 3;
  inline bool has_roleresponse() const;
  inline void clear_roleresponse();
  static const int kRoleResponseFieldNumber = 3;
  inline const ::main::RoleResponse& roleresponse() const;
  inline ::main::RoleResponse* mutable_roleresponse();
  inline ::main::RoleResponse* release_roleresponse();
  inline void set_allocated_roleresponse(::main::RoleResponse* roleresponse);

  // @@protoc_insertion_point(class_scope:main.CreateRoleResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_errorstr();
  inline void clear_has_errorstr();
  inline void set_has_roleresponse();
  inline void clear_has_roleresponse();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* errorstr_;
  ::main::RoleResponse* roleresponse_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static CreateRoleResponse* default_instance_;
};
// -------------------------------------------------------------------

class RoleResponse : public ::google::protobuf::MessageLite {
 public:
  RoleResponse();
  virtual ~RoleResponse();

  RoleResponse(const RoleResponse& from);

  inline RoleResponse& operator=(const RoleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RoleResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RoleResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RoleResponse* other);

  // implements Message ----------------------------------------------

  RoleResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RoleResponse& from);
  void MergeFrom(const RoleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string nickname = 3;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional string ssid = 4;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 4;
  inline const ::std::string& ssid() const;
  inline void set_ssid(const ::std::string& value);
  inline void set_ssid(const char* value);
  inline void set_ssid(const char* value, size_t size);
  inline ::std::string* mutable_ssid();
  inline ::std::string* release_ssid();
  inline void set_allocated_ssid(::std::string* ssid);

  // optional int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 coins = 7;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 7;
  inline ::google::protobuf::int32 coins() const;
  inline void set_coins(::google::protobuf::int32 value);

  // optional int32 gold = 8;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 8;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 country = 9;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 9;
  inline ::google::protobuf::int32 country() const;
  inline void set_country(::google::protobuf::int32 value);

  // optional int32 image = 10;
  inline bool has_image() const;
  inline void clear_image();
  static const int kImageFieldNumber = 10;
  inline ::google::protobuf::int32 image() const;
  inline void set_image(::google::protobuf::int32 value);

  // optional int32 power = 11;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 11;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);

  // optional int32 bagSize = 12;
  inline bool has_bagsize() const;
  inline void clear_bagsize();
  static const int kBagSizeFieldNumber = 12;
  inline ::google::protobuf::int32 bagsize() const;
  inline void set_bagsize(::google::protobuf::int32 value);

  // optional int32 modifyNickNameCount = 13;
  inline bool has_modifynicknamecount() const;
  inline void clear_modifynicknamecount();
  static const int kModifyNickNameCountFieldNumber = 13;
  inline ::google::protobuf::int32 modifynicknamecount() const;
  inline void set_modifynicknamecount(::google::protobuf::int32 value);

  // optional .main.BaseBagInfo baseBagInfo = 14;
  inline bool has_basebaginfo() const;
  inline void clear_basebaginfo();
  static const int kBaseBagInfoFieldNumber = 14;
  inline const ::main::BaseBagInfo& basebaginfo() const;
  inline ::main::BaseBagInfo* mutable_basebaginfo();
  inline ::main::BaseBagInfo* release_basebaginfo();
  inline void set_allocated_basebaginfo(::main::BaseBagInfo* basebaginfo);

  // repeated .main.FriendProto friendList = 15;
  inline int friendlist_size() const;
  inline void clear_friendlist();
  static const int kFriendListFieldNumber = 15;
  inline const ::main::FriendProto& friendlist(int index) const;
  inline ::main::FriendProto* mutable_friendlist(int index);
  inline ::main::FriendProto* add_friendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::main::FriendProto >&
      friendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::FriendProto >*
      mutable_friendlist();

  // repeated .main.FriendProto blockList = 16;
  inline int blocklist_size() const;
  inline void clear_blocklist();
  static const int kBlockListFieldNumber = 16;
  inline const ::main::FriendProto& blocklist(int index) const;
  inline ::main::FriendProto* mutable_blocklist(int index);
  inline ::main::FriendProto* add_blocklist();
  inline const ::google::protobuf::RepeatedPtrField< ::main::FriendProto >&
      blocklist() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::FriendProto >*
      mutable_blocklist();

  // repeated .main.FriendProto applyList = 17;
  inline int applylist_size() const;
  inline void clear_applylist();
  static const int kApplyListFieldNumber = 17;
  inline const ::main::FriendProto& applylist(int index) const;
  inline ::main::FriendProto* mutable_applylist(int index);
  inline ::main::FriendProto* add_applylist();
  inline const ::google::protobuf::RepeatedPtrField< ::main::FriendProto >&
      applylist() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::FriendProto >*
      mutable_applylist();

  // optional int32 friendSize = 18;
  inline bool has_friendsize() const;
  inline void clear_friendsize();
  static const int kFriendSizeFieldNumber = 18;
  inline ::google::protobuf::int32 friendsize() const;
  inline void set_friendsize(::google::protobuf::int32 value);

  // optional int32 expandCount = 19;
  inline bool has_expandcount() const;
  inline void clear_expandcount();
  static const int kExpandCountFieldNumber = 19;
  inline ::google::protobuf::int32 expandcount() const;
  inline void set_expandcount(::google::protobuf::int32 value);

  // repeated .main.MailProto mainMails = 20;
  inline int mainmails_size() const;
  inline void clear_mainmails();
  static const int kMainMailsFieldNumber = 20;
  inline const ::main::MailProto& mainmails(int index) const;
  inline ::main::MailProto* mutable_mainmails(int index);
  inline ::main::MailProto* add_mainmails();
  inline const ::google::protobuf::RepeatedPtrField< ::main::MailProto >&
      mainmails() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::MailProto >*
      mutable_mainmails();

  // repeated .main.SystemMailProto systemMails = 21;
  inline int systemmails_size() const;
  inline void clear_systemmails();
  static const int kSystemMailsFieldNumber = 21;
  inline const ::main::SystemMailProto& systemmails(int index) const;
  inline ::main::SystemMailProto* mutable_systemmails(int index);
  inline ::main::SystemMailProto* add_systemmails();
  inline const ::google::protobuf::RepeatedPtrField< ::main::SystemMailProto >&
      systemmails() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::SystemMailProto >*
      mutable_systemmails();

  // repeated .main.MailProto gmMails = 22;
  inline int gmmails_size() const;
  inline void clear_gmmails();
  static const int kGmMailsFieldNumber = 22;
  inline const ::main::MailProto& gmmails(int index) const;
  inline ::main::MailProto* mutable_gmmails(int index);
  inline ::main::MailProto* add_gmmails();
  inline const ::google::protobuf::RepeatedPtrField< ::main::MailProto >&
      gmmails() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::MailProto >*
      mutable_gmmails();

  // optional int32 pvpPower = 23;
  inline bool has_pvppower() const;
  inline void clear_pvppower();
  static const int kPvpPowerFieldNumber = 23;
  inline ::google::protobuf::int32 pvppower() const;
  inline void set_pvppower(::google::protobuf::int32 value);

  // optional int32 pveLeftTime = 24;
  inline bool has_pvelefttime() const;
  inline void clear_pvelefttime();
  static const int kPveLeftTimeFieldNumber = 24;
  inline ::google::protobuf::int32 pvelefttime() const;
  inline void set_pvelefttime(::google::protobuf::int32 value);

  // optional int32 pveCircleTime = 25;
  inline bool has_pvecircletime() const;
  inline void clear_pvecircletime();
  static const int kPveCircleTimeFieldNumber = 25;
  inline ::google::protobuf::int32 pvecircletime() const;
  inline void set_pvecircletime(::google::protobuf::int32 value);

  // optional int32 pveRecoverLeftCounter = 26;
  inline bool has_pverecoverleftcounter() const;
  inline void clear_pverecoverleftcounter();
  static const int kPveRecoverLeftCounterFieldNumber = 26;
  inline ::google::protobuf::int32 pverecoverleftcounter() const;
  inline void set_pverecoverleftcounter(::google::protobuf::int32 value);

  // optional int32 pvpLeftTime = 27;
  inline bool has_pvplefttime() const;
  inline void clear_pvplefttime();
  static const int kPvpLeftTimeFieldNumber = 27;
  inline ::google::protobuf::int32 pvplefttime() const;
  inline void set_pvplefttime(::google::protobuf::int32 value);

  // optional int32 pvpCircleTime = 28;
  inline bool has_pvpcircletime() const;
  inline void clear_pvpcircletime();
  static const int kPvpCircleTimeFieldNumber = 28;
  inline ::google::protobuf::int32 pvpcircletime() const;
  inline void set_pvpcircletime(::google::protobuf::int32 value);

  // optional int32 pvpRecoverLeftCounter = 29;
  inline bool has_pvprecoverleftcounter() const;
  inline void clear_pvprecoverleftcounter();
  static const int kPvpRecoverLeftCounterFieldNumber = 29;
  inline ::google::protobuf::int32 pvprecoverleftcounter() const;
  inline void set_pvprecoverleftcounter(::google::protobuf::int32 value);

  // optional int32 hasLottery9 = 30;
  inline bool has_haslottery9() const;
  inline void clear_haslottery9();
  static const int kHasLottery9FieldNumber = 30;
  inline ::google::protobuf::int32 haslottery9() const;
  inline void set_haslottery9(::google::protobuf::int32 value);

  // repeated .main.Lottery9ViewItem lotteryItems = 31;
  inline int lotteryitems_size() const;
  inline void clear_lotteryitems();
  static const int kLotteryItemsFieldNumber = 31;
  inline const ::main::Lottery9ViewItem& lotteryitems(int index) const;
  inline ::main::Lottery9ViewItem* mutable_lotteryitems(int index);
  inline ::main::Lottery9ViewItem* add_lotteryitems();
  inline const ::google::protobuf::RepeatedPtrField< ::main::Lottery9ViewItem >&
      lotteryitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::Lottery9ViewItem >*
      mutable_lotteryitems();

  // optional int32 loginDay = 32;
  inline bool has_loginday() const;
  inline void clear_loginday();
  static const int kLoginDayFieldNumber = 32;
  inline ::google::protobuf::int32 loginday() const;
  inline void set_loginday(::google::protobuf::int32 value);

  // optional int32 lottery9Chance = 33;
  inline bool has_lottery9chance() const;
  inline void clear_lottery9chance();
  static const int kLottery9ChanceFieldNumber = 33;
  inline ::google::protobuf::int32 lottery9chance() const;
  inline void set_lottery9chance(::google::protobuf::int32 value);

  // repeated .main.RewardTypeState rewardNotice = 34;
  inline int rewardnotice_size() const;
  inline void clear_rewardnotice();
  static const int kRewardNoticeFieldNumber = 34;
  inline const ::main::RewardTypeState& rewardnotice(int index) const;
  inline ::main::RewardTypeState* mutable_rewardnotice(int index);
  inline ::main::RewardTypeState* add_rewardnotice();
  inline const ::google::protobuf::RepeatedPtrField< ::main::RewardTypeState >&
      rewardnotice() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::RewardTypeState >*
      mutable_rewardnotice();

  // optional int32 beginnersGuideId = 35;
  inline bool has_beginnersguideid() const;
  inline void clear_beginnersguideid();
  static const int kBeginnersGuideIdFieldNumber = 35;
  inline ::google::protobuf::int32 beginnersguideid() const;
  inline void set_beginnersguideid(::google::protobuf::int32 value);

  // optional int32 hasFreeLottery = 36;
  inline bool has_hasfreelottery() const;
  inline void clear_hasfreelottery();
  static const int kHasFreeLotteryFieldNumber = 36;
  inline ::google::protobuf::int32 hasfreelottery() const;
  inline void set_hasfreelottery(::google::protobuf::int32 value);

  // optional int32 newHandPross = 37;
  inline bool has_newhandpross() const;
  inline void clear_newhandpross();
  static const int kNewHandProssFieldNumber = 37;
  inline ::google::protobuf::int32 newhandpross() const;
  inline void set_newhandpross(::google::protobuf::int32 value);

  // optional int32 vipLevel = 38;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 38;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // optional int32 pvpTopLevel = 39;
  inline bool has_pvptoplevel() const;
  inline void clear_pvptoplevel();
  static const int kPvpTopLevelFieldNumber = 39;
  inline ::google::protobuf::int32 pvptoplevel() const;
  inline void set_pvptoplevel(::google::protobuf::int32 value);

  // optional int32 pvpTopScore = 40;
  inline bool has_pvptopscore() const;
  inline void clear_pvptopscore();
  static const int kPvpTopScoreFieldNumber = 40;
  inline ::google::protobuf::int32 pvptopscore() const;
  inline void set_pvptopscore(::google::protobuf::int32 value);

  // optional bool hasPveFight = 41;
  inline bool has_haspvefight() const;
  inline void clear_haspvefight();
  static const int kHasPveFightFieldNumber = 41;
  inline bool haspvefight() const;
  inline void set_haspvefight(bool value);

  // optional bool hasPvpFight = 42;
  inline bool has_haspvpfight() const;
  inline void clear_haspvpfight();
  static const int kHasPvpFightFieldNumber = 42;
  inline bool haspvpfight() const;
  inline void set_haspvpfight(bool value);

  // optional string lastPvpIp = 43;
  inline bool has_lastpvpip() const;
  inline void clear_lastpvpip();
  static const int kLastPvpIpFieldNumber = 43;
  inline const ::std::string& lastpvpip() const;
  inline void set_lastpvpip(const ::std::string& value);
  inline void set_lastpvpip(const char* value);
  inline void set_lastpvpip(const char* value, size_t size);
  inline ::std::string* mutable_lastpvpip();
  inline ::std::string* release_lastpvpip();
  inline void set_allocated_lastpvpip(::std::string* lastpvpip);

  // optional int32 lastPvpPort = 44;
  inline bool has_lastpvpport() const;
  inline void clear_lastpvpport();
  static const int kLastPvpPortFieldNumber = 44;
  inline ::google::protobuf::int32 lastpvpport() const;
  inline void set_lastpvpport(::google::protobuf::int32 value);

  // optional int32 pvpRank = 45;
  inline bool has_pvprank() const;
  inline void clear_pvprank();
  static const int kPvpRankFieldNumber = 45;
  inline ::google::protobuf::int32 pvprank() const;
  inline void set_pvprank(::google::protobuf::int32 value);

  // optional string rankName = 46;
  inline bool has_rankname() const;
  inline void clear_rankname();
  static const int kRankNameFieldNumber = 46;
  inline const ::std::string& rankname() const;
  inline void set_rankname(const ::std::string& value);
  inline void set_rankname(const char* value);
  inline void set_rankname(const char* value, size_t size);
  inline ::std::string* mutable_rankname();
  inline ::std::string* release_rankname();
  inline void set_allocated_rankname(::std::string* rankname);

  // optional int32 pvpWinPvp = 47;
  inline bool has_pvpwinpvp() const;
  inline void clear_pvpwinpvp();
  static const int kPvpWinPvpFieldNumber = 47;
  inline ::google::protobuf::int32 pvpwinpvp() const;
  inline void set_pvpwinpvp(::google::protobuf::int32 value);

  // optional int32 combatValue = 48;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatValueFieldNumber = 48;
  inline ::google::protobuf::int32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::int32 value);

  // optional .main.TeamInfo teamInfo = 49;
  inline bool has_teaminfo() const;
  inline void clear_teaminfo();
  static const int kTeamInfoFieldNumber = 49;
  inline const ::main::TeamInfo& teaminfo() const;
  inline ::main::TeamInfo* mutable_teaminfo();
  inline ::main::TeamInfo* release_teaminfo();
  inline void set_allocated_teaminfo(::main::TeamInfo* teaminfo);

  // optional bool LoginAwardGold = 50;
  inline bool has_loginawardgold() const;
  inline void clear_loginawardgold();
  static const int kLoginAwardGoldFieldNumber = 50;
  inline bool loginawardgold() const;
  inline void set_loginawardgold(bool value);

  // optional bool canRewardDayTask = 51;
  inline bool has_canrewarddaytask() const;
  inline void clear_canrewarddaytask();
  static const int kCanRewardDayTaskFieldNumber = 51;
  inline bool canrewarddaytask() const;
  inline void set_canrewarddaytask(bool value);

  // optional string inviteCode = 52;
  inline bool has_invitecode() const;
  inline void clear_invitecode();
  static const int kInviteCodeFieldNumber = 52;
  inline const ::std::string& invitecode() const;
  inline void set_invitecode(const ::std::string& value);
  inline void set_invitecode(const char* value);
  inline void set_invitecode(const char* value, size_t size);
  inline ::std::string* mutable_invitecode();
  inline ::std::string* release_invitecode();
  inline void set_allocated_invitecode(::std::string* invitecode);

  // optional string searchFriendCode = 53;
  inline bool has_searchfriendcode() const;
  inline void clear_searchfriendcode();
  static const int kSearchFriendCodeFieldNumber = 53;
  inline const ::std::string& searchfriendcode() const;
  inline void set_searchfriendcode(const ::std::string& value);
  inline void set_searchfriendcode(const char* value);
  inline void set_searchfriendcode(const char* value, size_t size);
  inline ::std::string* mutable_searchfriendcode();
  inline ::std::string* release_searchfriendcode();
  inline void set_allocated_searchfriendcode(::std::string* searchfriendcode);

  // optional int32 showVipState = 54;
  inline bool has_showvipstate() const;
  inline void clear_showvipstate();
  static const int kShowVipStateFieldNumber = 54;
  inline ::google::protobuf::int32 showvipstate() const;
  inline void set_showvipstate(::google::protobuf::int32 value);

  // optional int32 branchType = 55 [default = 0];
  inline bool has_branchtype() const;
  inline void clear_branchtype();
  static const int kBranchTypeFieldNumber = 55;
  inline ::google::protobuf::int32 branchtype() const;
  inline void set_branchtype(::google::protobuf::int32 value);

  // optional bool needVerify = 56;
  inline bool has_needverify() const;
  inline void clear_needverify();
  static const int kNeedVerifyFieldNumber = 56;
  inline bool needverify() const;
  inline void set_needverify(bool value);

  // optional int64 fpId = 57;
  inline bool has_fpid() const;
  inline void clear_fpid();
  static const int kFpIdFieldNumber = 57;
  inline ::google::protobuf::int64 fpid() const;
  inline void set_fpid(::google::protobuf::int64 value);

  // optional int32 addGoverning = 58 [default = 0];
  inline bool has_addgoverning() const;
  inline void clear_addgoverning();
  static const int kAddGoverningFieldNumber = 58;
  inline ::google::protobuf::int32 addgoverning() const;
  inline void set_addgoverning(::google::protobuf::int32 value);

  // optional int32 lianDanGold = 59;
  inline bool has_liandangold() const;
  inline void clear_liandangold();
  static const int kLianDanGoldFieldNumber = 59;
  inline ::google::protobuf::int32 liandangold() const;
  inline void set_liandangold(::google::protobuf::int32 value);

  // optional int32 enterNewPvpWin = 60;
  inline bool has_enternewpvpwin() const;
  inline void clear_enternewpvpwin();
  static const int kEnterNewPvpWinFieldNumber = 60;
  inline ::google::protobuf::int32 enternewpvpwin() const;
  inline void set_enternewpvpwin(::google::protobuf::int32 value);

  // repeated .main.TriggerInfo triggerInfo = 61;
  inline int triggerinfo_size() const;
  inline void clear_triggerinfo();
  static const int kTriggerInfoFieldNumber = 61;
  inline const ::main::TriggerInfo& triggerinfo(int index) const;
  inline ::main::TriggerInfo* mutable_triggerinfo(int index);
  inline ::main::TriggerInfo* add_triggerinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::main::TriggerInfo >&
      triggerinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::TriggerInfo >*
      mutable_triggerinfo();

  // repeated .main.QAProto qaList = 62;
  inline int qalist_size() const;
  inline void clear_qalist();
  static const int kQaListFieldNumber = 62;
  inline const ::main::QAProto& qalist(int index) const;
  inline ::main::QAProto* mutable_qalist(int index);
  inline ::main::QAProto* add_qalist();
  inline const ::google::protobuf::RepeatedPtrField< ::main::QAProto >&
      qalist() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::QAProto >*
      mutable_qalist();

  // optional int32 haveCharged = 63;
  inline bool has_havecharged() const;
  inline void clear_havecharged();
  static const int kHaveChargedFieldNumber = 63;
  inline ::google::protobuf::int32 havecharged() const;
  inline void set_havecharged(::google::protobuf::int32 value);

  // optional bool bestEquip = 64;
  inline bool has_bestequip() const;
  inline void clear_bestequip();
  static const int kBestEquipFieldNumber = 64;
  inline bool bestequip() const;
  inline void set_bestequip(bool value);

  // optional .main.PowerGiftListResponse powerGift = 65;
  inline bool has_powergift() const;
  inline void clear_powergift();
  static const int kPowerGiftFieldNumber = 65;
  inline const ::main::PowerGiftListResponse& powergift() const;
  inline ::main::PowerGiftListResponse* mutable_powergift();
  inline ::main::PowerGiftListResponse* release_powergift();
  inline void set_allocated_powergift(::main::PowerGiftListResponse* powergift);

  // optional int32 powerGiftTimes = 66;
  inline bool has_powergifttimes() const;
  inline void clear_powergifttimes();
  static const int kPowerGiftTimesFieldNumber = 66;
  inline ::google::protobuf::int32 powergifttimes() const;
  inline void set_powergifttimes(::google::protobuf::int32 value);

  // repeated int32 funcNoticeList = 67;
  inline int funcnoticelist_size() const;
  inline void clear_funcnoticelist();
  static const int kFuncNoticeListFieldNumber = 67;
  inline ::google::protobuf::int32 funcnoticelist(int index) const;
  inline void set_funcnoticelist(int index, ::google::protobuf::int32 value);
  inline void add_funcnoticelist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      funcnoticelist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_funcnoticelist();

  // optional int32 plotHarryCount = 68;
  inline bool has_plotharrycount() const;
  inline void clear_plotharrycount();
  static const int kPlotHarryCountFieldNumber = 68;
  inline ::google::protobuf::int32 plotharrycount() const;
  inline void set_plotharrycount(::google::protobuf::int32 value);

  // optional int32 junhun = 69;
  inline bool has_junhun() const;
  inline void clear_junhun();
  static const int kJunhunFieldNumber = 69;
  inline ::google::protobuf::int32 junhun() const;
  inline void set_junhun(::google::protobuf::int32 value);

  // optional int32 maxPlotId = 70;
  inline bool has_maxplotid() const;
  inline void clear_maxplotid();
  static const int kMaxPlotIdFieldNumber = 70;
  inline ::google::protobuf::int32 maxplotid() const;
  inline void set_maxplotid(::google::protobuf::int32 value);

  // optional int32 maxBossPlotId = 71;
  inline bool has_maxbossplotid() const;
  inline void clear_maxbossplotid();
  static const int kMaxBossPlotIdFieldNumber = 71;
  inline ::google::protobuf::int32 maxbossplotid() const;
  inline void set_maxbossplotid(::google::protobuf::int32 value);

  // optional bool activityNotice = 72;
  inline bool has_activitynotice() const;
  inline void clear_activitynotice();
  static const int kActivityNoticeFieldNumber = 72;
  inline bool activitynotice() const;
  inline void set_activitynotice(bool value);

  // repeated .main.BossPlotCountProto bossPlotCount = 73;
  inline int bossplotcount_size() const;
  inline void clear_bossplotcount();
  static const int kBossPlotCountFieldNumber = 73;
  inline const ::main::BossPlotCountProto& bossplotcount(int index) const;
  inline ::main::BossPlotCountProto* mutable_bossplotcount(int index);
  inline ::main::BossPlotCountProto* add_bossplotcount();
  inline const ::google::protobuf::RepeatedPtrField< ::main::BossPlotCountProto >&
      bossplotcount() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::BossPlotCountProto >*
      mutable_bossplotcount();

  // optional int32 gouyu = 74;
  inline bool has_gouyu() const;
  inline void clear_gouyu();
  static const int kGouyuFieldNumber = 74;
  inline ::google::protobuf::int32 gouyu() const;
  inline void set_gouyu(::google::protobuf::int32 value);

  // optional bool xiyuState = 75;
  inline bool has_xiyustate() const;
  inline void clear_xiyustate();
  static const int kXiyuStateFieldNumber = 75;
  inline bool xiyustate() const;
  inline void set_xiyustate(bool value);

  // optional int32 xiyuTime = 76;
  inline bool has_xiyutime() const;
  inline void clear_xiyutime();
  static const int kXiyuTimeFieldNumber = 76;
  inline ::google::protobuf::int32 xiyutime() const;
  inline void set_xiyutime(::google::protobuf::int32 value);

  // optional int32 arenaCoin = 77;
  inline bool has_arenacoin() const;
  inline void clear_arenacoin();
  static const int kArenaCoinFieldNumber = 77;
  inline ::google::protobuf::int32 arenacoin() const;
  inline void set_arenacoin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.RoleResponse)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_coins();
  inline void clear_has_coins();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_image();
  inline void clear_has_image();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_bagsize();
  inline void clear_has_bagsize();
  inline void set_has_modifynicknamecount();
  inline void clear_has_modifynicknamecount();
  inline void set_has_basebaginfo();
  inline void clear_has_basebaginfo();
  inline void set_has_friendsize();
  inline void clear_has_friendsize();
  inline void set_has_expandcount();
  inline void clear_has_expandcount();
  inline void set_has_pvppower();
  inline void clear_has_pvppower();
  inline void set_has_pvelefttime();
  inline void clear_has_pvelefttime();
  inline void set_has_pvecircletime();
  inline void clear_has_pvecircletime();
  inline void set_has_pverecoverleftcounter();
  inline void clear_has_pverecoverleftcounter();
  inline void set_has_pvplefttime();
  inline void clear_has_pvplefttime();
  inline void set_has_pvpcircletime();
  inline void clear_has_pvpcircletime();
  inline void set_has_pvprecoverleftcounter();
  inline void clear_has_pvprecoverleftcounter();
  inline void set_has_haslottery9();
  inline void clear_has_haslottery9();
  inline void set_has_loginday();
  inline void clear_has_loginday();
  inline void set_has_lottery9chance();
  inline void clear_has_lottery9chance();
  inline void set_has_beginnersguideid();
  inline void clear_has_beginnersguideid();
  inline void set_has_hasfreelottery();
  inline void clear_has_hasfreelottery();
  inline void set_has_newhandpross();
  inline void clear_has_newhandpross();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_pvptoplevel();
  inline void clear_has_pvptoplevel();
  inline void set_has_pvptopscore();
  inline void clear_has_pvptopscore();
  inline void set_has_haspvefight();
  inline void clear_has_haspvefight();
  inline void set_has_haspvpfight();
  inline void clear_has_haspvpfight();
  inline void set_has_lastpvpip();
  inline void clear_has_lastpvpip();
  inline void set_has_lastpvpport();
  inline void clear_has_lastpvpport();
  inline void set_has_pvprank();
  inline void clear_has_pvprank();
  inline void set_has_rankname();
  inline void clear_has_rankname();
  inline void set_has_pvpwinpvp();
  inline void clear_has_pvpwinpvp();
  inline void set_has_combatvalue();
  inline void clear_has_combatvalue();
  inline void set_has_teaminfo();
  inline void clear_has_teaminfo();
  inline void set_has_loginawardgold();
  inline void clear_has_loginawardgold();
  inline void set_has_canrewarddaytask();
  inline void clear_has_canrewarddaytask();
  inline void set_has_invitecode();
  inline void clear_has_invitecode();
  inline void set_has_searchfriendcode();
  inline void clear_has_searchfriendcode();
  inline void set_has_showvipstate();
  inline void clear_has_showvipstate();
  inline void set_has_branchtype();
  inline void clear_has_branchtype();
  inline void set_has_needverify();
  inline void clear_has_needverify();
  inline void set_has_fpid();
  inline void clear_has_fpid();
  inline void set_has_addgoverning();
  inline void clear_has_addgoverning();
  inline void set_has_liandangold();
  inline void clear_has_liandangold();
  inline void set_has_enternewpvpwin();
  inline void clear_has_enternewpvpwin();
  inline void set_has_havecharged();
  inline void clear_has_havecharged();
  inline void set_has_bestequip();
  inline void clear_has_bestequip();
  inline void set_has_powergift();
  inline void clear_has_powergift();
  inline void set_has_powergifttimes();
  inline void clear_has_powergifttimes();
  inline void set_has_plotharrycount();
  inline void clear_has_plotharrycount();
  inline void set_has_junhun();
  inline void clear_has_junhun();
  inline void set_has_maxplotid();
  inline void clear_has_maxplotid();
  inline void set_has_maxbossplotid();
  inline void clear_has_maxbossplotid();
  inline void set_has_activitynotice();
  inline void clear_has_activitynotice();
  inline void set_has_gouyu();
  inline void clear_has_gouyu();
  inline void set_has_xiyustate();
  inline void clear_has_xiyustate();
  inline void set_has_xiyutime();
  inline void clear_has_xiyutime();
  inline void set_has_arenacoin();
  inline void clear_has_arenacoin();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[3];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* nickname_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 exp_;
  ::std::string* ssid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 coins_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 country_;
  ::google::protobuf::int32 image_;
  ::google::protobuf::int32 power_;
  ::google::protobuf::int32 bagsize_;
  ::google::protobuf::int32 modifynicknamecount_;
  ::main::BaseBagInfo* basebaginfo_;
  ::google::protobuf::RepeatedPtrField< ::main::FriendProto > friendlist_;
  ::google::protobuf::RepeatedPtrField< ::main::FriendProto > blocklist_;
  ::google::protobuf::RepeatedPtrField< ::main::FriendProto > applylist_;
  ::google::protobuf::int32 friendsize_;
  ::google::protobuf::int32 expandcount_;
  ::google::protobuf::RepeatedPtrField< ::main::MailProto > mainmails_;
  ::google::protobuf::RepeatedPtrField< ::main::SystemMailProto > systemmails_;
  ::google::protobuf::RepeatedPtrField< ::main::MailProto > gmmails_;
  ::google::protobuf::int32 pvppower_;
  ::google::protobuf::int32 pvelefttime_;
  ::google::protobuf::int32 pvecircletime_;
  ::google::protobuf::int32 pverecoverleftcounter_;
  ::google::protobuf::int32 pvplefttime_;
  ::google::protobuf::int32 pvpcircletime_;
  ::google::protobuf::int32 pvprecoverleftcounter_;
  ::google::protobuf::int32 haslottery9_;
  ::google::protobuf::RepeatedPtrField< ::main::Lottery9ViewItem > lotteryitems_;
  ::google::protobuf::int32 loginday_;
  ::google::protobuf::int32 lottery9chance_;
  ::google::protobuf::RepeatedPtrField< ::main::RewardTypeState > rewardnotice_;
  ::google::protobuf::int32 beginnersguideid_;
  ::google::protobuf::int32 hasfreelottery_;
  ::google::protobuf::int32 newhandpross_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 pvptoplevel_;
  ::google::protobuf::int32 pvptopscore_;
  ::std::string* lastpvpip_;
  ::google::protobuf::int32 lastpvpport_;
  ::google::protobuf::int32 pvprank_;
  ::std::string* rankname_;
  bool haspvefight_;
  bool haspvpfight_;
  bool loginawardgold_;
  bool canrewarddaytask_;
  ::google::protobuf::int32 pvpwinpvp_;
  ::main::TeamInfo* teaminfo_;
  ::google::protobuf::int32 combatvalue_;
  ::google::protobuf::int32 showvipstate_;
  ::std::string* invitecode_;
  ::std::string* searchfriendcode_;
  ::google::protobuf::int32 branchtype_;
  ::google::protobuf::int32 addgoverning_;
  ::google::protobuf::int64 fpid_;
  ::google::protobuf::int32 liandangold_;
  ::google::protobuf::int32 enternewpvpwin_;
  ::google::protobuf::RepeatedPtrField< ::main::TriggerInfo > triggerinfo_;
  ::google::protobuf::RepeatedPtrField< ::main::QAProto > qalist_;
  ::google::protobuf::int32 havecharged_;
  ::google::protobuf::int32 powergifttimes_;
  ::main::PowerGiftListResponse* powergift_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > funcnoticelist_;
  bool needverify_;
  bool bestequip_;
  bool activitynotice_;
  bool xiyustate_;
  ::google::protobuf::int32 plotharrycount_;
  ::google::protobuf::int32 junhun_;
  ::google::protobuf::int32 maxplotid_;
  ::google::protobuf::int32 maxbossplotid_;
  ::google::protobuf::int32 gouyu_;
  ::google::protobuf::RepeatedPtrField< ::main::BossPlotCountProto > bossplotcount_;
  ::google::protobuf::int32 xiyutime_;
  ::google::protobuf::int32 arenacoin_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static RoleResponse* default_instance_;
};
// -------------------------------------------------------------------

class updateRoleResponse : public ::google::protobuf::MessageLite {
 public:
  updateRoleResponse();
  virtual ~updateRoleResponse();

  updateRoleResponse(const updateRoleResponse& from);

  inline updateRoleResponse& operator=(const updateRoleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const updateRoleResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const updateRoleResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(updateRoleResponse* other);

  // implements Message ----------------------------------------------

  updateRoleResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const updateRoleResponse& from);
  void MergeFrom(const updateRoleResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 coins = 3;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 3;
  inline ::google::protobuf::int32 coins() const;
  inline void set_coins(::google::protobuf::int32 value);

  // optional int32 gold = 4;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 4;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 power = 5;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 5;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);

  // optional int32 pvpPower = 6;
  inline bool has_pvppower() const;
  inline void clear_pvppower();
  static const int kPvpPowerFieldNumber = 6;
  inline ::google::protobuf::int32 pvppower() const;
  inline void set_pvppower(::google::protobuf::int32 value);

  // optional int32 pveLeftTime = 7;
  inline bool has_pvelefttime() const;
  inline void clear_pvelefttime();
  static const int kPveLeftTimeFieldNumber = 7;
  inline ::google::protobuf::int32 pvelefttime() const;
  inline void set_pvelefttime(::google::protobuf::int32 value);

  // optional int32 pveCircleTime = 8;
  inline bool has_pvecircletime() const;
  inline void clear_pvecircletime();
  static const int kPveCircleTimeFieldNumber = 8;
  inline ::google::protobuf::int32 pvecircletime() const;
  inline void set_pvecircletime(::google::protobuf::int32 value);

  // optional int32 pveRecoverLeftCounter = 9;
  inline bool has_pverecoverleftcounter() const;
  inline void clear_pverecoverleftcounter();
  static const int kPveRecoverLeftCounterFieldNumber = 9;
  inline ::google::protobuf::int32 pverecoverleftcounter() const;
  inline void set_pverecoverleftcounter(::google::protobuf::int32 value);

  // optional int32 pvpLeftTime = 10;
  inline bool has_pvplefttime() const;
  inline void clear_pvplefttime();
  static const int kPvpLeftTimeFieldNumber = 10;
  inline ::google::protobuf::int32 pvplefttime() const;
  inline void set_pvplefttime(::google::protobuf::int32 value);

  // optional int32 pvpCircleTime = 11;
  inline bool has_pvpcircletime() const;
  inline void clear_pvpcircletime();
  static const int kPvpCircleTimeFieldNumber = 11;
  inline ::google::protobuf::int32 pvpcircletime() const;
  inline void set_pvpcircletime(::google::protobuf::int32 value);

  // optional int32 pvpRecoverLeftCounter = 12;
  inline bool has_pvprecoverleftcounter() const;
  inline void clear_pvprecoverleftcounter();
  static const int kPvpRecoverLeftCounterFieldNumber = 12;
  inline ::google::protobuf::int32 pvprecoverleftcounter() const;
  inline void set_pvprecoverleftcounter(::google::protobuf::int32 value);

  // optional int32 meritorious = 13;
  inline bool has_meritorious() const;
  inline void clear_meritorious();
  static const int kMeritoriousFieldNumber = 13;
  inline ::google::protobuf::int32 meritorious() const;
  inline void set_meritorious(::google::protobuf::int32 value);

  // optional int32 combatValue = 14;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatValueFieldNumber = 14;
  inline ::google::protobuf::int32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::int32 value);

  // optional bool canRewardDayTask = 15;
  inline bool has_canrewarddaytask() const;
  inline void clear_canrewarddaytask();
  static const int kCanRewardDayTaskFieldNumber = 15;
  inline bool canrewarddaytask() const;
  inline void set_canrewarddaytask(bool value);

  // optional bool bestEquip = 16;
  inline bool has_bestequip() const;
  inline void clear_bestequip();
  static const int kBestEquipFieldNumber = 16;
  inline bool bestequip() const;
  inline void set_bestequip(bool value);

  // optional int32 junhun = 17;
  inline bool has_junhun() const;
  inline void clear_junhun();
  static const int kJunhunFieldNumber = 17;
  inline ::google::protobuf::int32 junhun() const;
  inline void set_junhun(::google::protobuf::int32 value);

  // optional int32 pvpTopScore = 18;
  inline bool has_pvptopscore() const;
  inline void clear_pvptopscore();
  static const int kPvpTopScoreFieldNumber = 18;
  inline ::google::protobuf::int32 pvptopscore() const;
  inline void set_pvptopscore(::google::protobuf::int32 value);

  // optional int32 plotHarryCount = 19;
  inline bool has_plotharrycount() const;
  inline void clear_plotharrycount();
  static const int kPlotHarryCountFieldNumber = 19;
  inline ::google::protobuf::int32 plotharrycount() const;
  inline void set_plotharrycount(::google::protobuf::int32 value);

  // optional int32 gouyu = 20;
  inline bool has_gouyu() const;
  inline void clear_gouyu();
  static const int kGouyuFieldNumber = 20;
  inline ::google::protobuf::int32 gouyu() const;
  inline void set_gouyu(::google::protobuf::int32 value);

  // optional int32 arenaCoin = 21;
  inline bool has_arenacoin() const;
  inline void clear_arenacoin();
  static const int kArenaCoinFieldNumber = 21;
  inline ::google::protobuf::int32 arenacoin() const;
  inline void set_arenacoin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.updateRoleResponse)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_coins();
  inline void clear_has_coins();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_pvppower();
  inline void clear_has_pvppower();
  inline void set_has_pvelefttime();
  inline void clear_has_pvelefttime();
  inline void set_has_pvecircletime();
  inline void clear_has_pvecircletime();
  inline void set_has_pverecoverleftcounter();
  inline void clear_has_pverecoverleftcounter();
  inline void set_has_pvplefttime();
  inline void clear_has_pvplefttime();
  inline void set_has_pvpcircletime();
  inline void clear_has_pvpcircletime();
  inline void set_has_pvprecoverleftcounter();
  inline void clear_has_pvprecoverleftcounter();
  inline void set_has_meritorious();
  inline void clear_has_meritorious();
  inline void set_has_combatvalue();
  inline void clear_has_combatvalue();
  inline void set_has_canrewarddaytask();
  inline void clear_has_canrewarddaytask();
  inline void set_has_bestequip();
  inline void clear_has_bestequip();
  inline void set_has_junhun();
  inline void clear_has_junhun();
  inline void set_has_pvptopscore();
  inline void clear_has_pvptopscore();
  inline void set_has_plotharrycount();
  inline void clear_has_plotharrycount();
  inline void set_has_gouyu();
  inline void clear_has_gouyu();
  inline void set_has_arenacoin();
  inline void clear_has_arenacoin();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 coins_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 power_;
  ::google::protobuf::int32 pvppower_;
  ::google::protobuf::int32 pvelefttime_;
  ::google::protobuf::int32 pvecircletime_;
  ::google::protobuf::int32 pverecoverleftcounter_;
  ::google::protobuf::int32 pvplefttime_;
  ::google::protobuf::int32 pvpcircletime_;
  ::google::protobuf::int32 pvprecoverleftcounter_;
  ::google::protobuf::int32 meritorious_;
  ::google::protobuf::int32 combatvalue_;
  bool canrewarddaytask_;
  bool bestequip_;
  ::google::protobuf::int32 junhun_;
  ::google::protobuf::int32 pvptopscore_;
  ::google::protobuf::int32 plotharrycount_;
  ::google::protobuf::int32 gouyu_;
  ::google::protobuf::int32 arenacoin_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static updateRoleResponse* default_instance_;
};
// -------------------------------------------------------------------

class TriggerInfo : public ::google::protobuf::MessageLite {
 public:
  TriggerInfo();
  virtual ~TriggerInfo();

  TriggerInfo(const TriggerInfo& from);

  inline TriggerInfo& operator=(const TriggerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TriggerInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TriggerInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TriggerInfo* other);

  // implements Message ----------------------------------------------

  TriggerInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TriggerInfo& from);
  void MergeFrom(const TriggerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 triggerType = 1;
  inline bool has_triggertype() const;
  inline void clear_triggertype();
  static const int kTriggerTypeFieldNumber = 1;
  inline ::google::protobuf::int32 triggertype() const;
  inline void set_triggertype(::google::protobuf::int32 value);

  // optional string triggerName = 2;
  inline bool has_triggername() const;
  inline void clear_triggername();
  static const int kTriggerNameFieldNumber = 2;
  inline const ::std::string& triggername() const;
  inline void set_triggername(const ::std::string& value);
  inline void set_triggername(const char* value);
  inline void set_triggername(const char* value, size_t size);
  inline ::std::string* mutable_triggername();
  inline ::std::string* release_triggername();
  inline void set_allocated_triggername(::std::string* triggername);

  // optional int32 triggerValue = 3;
  inline bool has_triggervalue() const;
  inline void clear_triggervalue();
  static const int kTriggerValueFieldNumber = 3;
  inline ::google::protobuf::int32 triggervalue() const;
  inline void set_triggervalue(::google::protobuf::int32 value);

  // optional int32 id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.TriggerInfo)
 private:
  inline void set_has_triggertype();
  inline void clear_has_triggertype();
  inline void set_has_triggername();
  inline void clear_has_triggername();
  inline void set_has_triggervalue();
  inline void clear_has_triggervalue();
  inline void set_has_id();
  inline void clear_has_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* triggername_;
  ::google::protobuf::int32 triggertype_;
  ::google::protobuf::int32 triggervalue_;
  ::google::protobuf::int32 id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static TriggerInfo* default_instance_;
};
// -------------------------------------------------------------------

class updateRolePowerRequest : public ::google::protobuf::MessageLite {
 public:
  updateRolePowerRequest();
  virtual ~updateRolePowerRequest();

  updateRolePowerRequest(const updateRolePowerRequest& from);

  inline updateRolePowerRequest& operator=(const updateRolePowerRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const updateRolePowerRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const updateRolePowerRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(updateRolePowerRequest* other);

  // implements Message ----------------------------------------------

  updateRolePowerRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const updateRolePowerRequest& from);
  void MergeFrom(const updateRolePowerRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:main.updateRolePowerRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static updateRolePowerRequest* default_instance_;
};
// -------------------------------------------------------------------

class updateRolePowerResponse : public ::google::protobuf::MessageLite {
 public:
  updateRolePowerResponse();
  virtual ~updateRolePowerResponse();

  updateRolePowerResponse(const updateRolePowerResponse& from);

  inline updateRolePowerResponse& operator=(const updateRolePowerResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const updateRolePowerResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const updateRolePowerResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(updateRolePowerResponse* other);

  // implements Message ----------------------------------------------

  updateRolePowerResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const updateRolePowerResponse& from);
  void MergeFrom(const updateRolePowerResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 power = 1;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 1;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);

  // optional int32 pvpPower = 2;
  inline bool has_pvppower() const;
  inline void clear_pvppower();
  static const int kPvpPowerFieldNumber = 2;
  inline ::google::protobuf::int32 pvppower() const;
  inline void set_pvppower(::google::protobuf::int32 value);

  // optional int32 pveCircleTime = 3;
  inline bool has_pvecircletime() const;
  inline void clear_pvecircletime();
  static const int kPveCircleTimeFieldNumber = 3;
  inline ::google::protobuf::int32 pvecircletime() const;
  inline void set_pvecircletime(::google::protobuf::int32 value);

  // optional int32 pveLeftTime = 4;
  inline bool has_pvelefttime() const;
  inline void clear_pvelefttime();
  static const int kPveLeftTimeFieldNumber = 4;
  inline ::google::protobuf::int32 pvelefttime() const;
  inline void set_pvelefttime(::google::protobuf::int32 value);

  // optional int32 pvpCircleTime = 5;
  inline bool has_pvpcircletime() const;
  inline void clear_pvpcircletime();
  static const int kPvpCircleTimeFieldNumber = 5;
  inline ::google::protobuf::int32 pvpcircletime() const;
  inline void set_pvpcircletime(::google::protobuf::int32 value);

  // optional int32 pvpLeftTime = 6;
  inline bool has_pvplefttime() const;
  inline void clear_pvplefttime();
  static const int kPvpLeftTimeFieldNumber = 6;
  inline ::google::protobuf::int32 pvplefttime() const;
  inline void set_pvplefttime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.updateRolePowerResponse)
 private:
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_pvppower();
  inline void clear_has_pvppower();
  inline void set_has_pvecircletime();
  inline void clear_has_pvecircletime();
  inline void set_has_pvelefttime();
  inline void clear_has_pvelefttime();
  inline void set_has_pvpcircletime();
  inline void clear_has_pvpcircletime();
  inline void set_has_pvplefttime();
  inline void clear_has_pvplefttime();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 power_;
  ::google::protobuf::int32 pvppower_;
  ::google::protobuf::int32 pvecircletime_;
  ::google::protobuf::int32 pvelefttime_;
  ::google::protobuf::int32 pvpcircletime_;
  ::google::protobuf::int32 pvplefttime_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static updateRolePowerResponse* default_instance_;
};
// -------------------------------------------------------------------

class BaseBagInfo : public ::google::protobuf::MessageLite {
 public:
  BaseBagInfo();
  virtual ~BaseBagInfo();

  BaseBagInfo(const BaseBagInfo& from);

  inline BaseBagInfo& operator=(const BaseBagInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const BaseBagInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BaseBagInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BaseBagInfo* other);

  // implements Message ----------------------------------------------

  BaseBagInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BaseBagInfo& from);
  void MergeFrom(const BaseBagInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.OfficerCardItemProto baseOfficerCardInfoProto = 1;
  inline int baseofficercardinfoproto_size() const;
  inline void clear_baseofficercardinfoproto();
  static const int kBaseOfficerCardInfoProtoFieldNumber = 1;
  inline const ::main::OfficerCardItemProto& baseofficercardinfoproto(int index) const;
  inline ::main::OfficerCardItemProto* mutable_baseofficercardinfoproto(int index);
  inline ::main::OfficerCardItemProto* add_baseofficercardinfoproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::OfficerCardItemProto >&
      baseofficercardinfoproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::OfficerCardItemProto >*
      mutable_baseofficercardinfoproto();

  // repeated .main.EquipmentCardItemProto baseEquipmentCardItemProto = 2;
  inline int baseequipmentcarditemproto_size() const;
  inline void clear_baseequipmentcarditemproto();
  static const int kBaseEquipmentCardItemProtoFieldNumber = 2;
  inline const ::main::EquipmentCardItemProto& baseequipmentcarditemproto(int index) const;
  inline ::main::EquipmentCardItemProto* mutable_baseequipmentcarditemproto(int index);
  inline ::main::EquipmentCardItemProto* add_baseequipmentcarditemproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::EquipmentCardItemProto >&
      baseequipmentcarditemproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::EquipmentCardItemProto >*
      mutable_baseequipmentcarditemproto();

  // repeated .main.SoldierCardItemProto baseSoldierCardItemProto = 3;
  inline int basesoldiercarditemproto_size() const;
  inline void clear_basesoldiercarditemproto();
  static const int kBaseSoldierCardItemProtoFieldNumber = 3;
  inline const ::main::SoldierCardItemProto& basesoldiercarditemproto(int index) const;
  inline ::main::SoldierCardItemProto* mutable_basesoldiercarditemproto(int index);
  inline ::main::SoldierCardItemProto* add_basesoldiercarditemproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::SoldierCardItemProto >&
      basesoldiercarditemproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::SoldierCardItemProto >*
      mutable_basesoldiercarditemproto();

  // repeated .main.PropsCardItemProto basePropsCardItemProto = 4;
  inline int basepropscarditemproto_size() const;
  inline void clear_basepropscarditemproto();
  static const int kBasePropsCardItemProtoFieldNumber = 4;
  inline const ::main::PropsCardItemProto& basepropscarditemproto(int index) const;
  inline ::main::PropsCardItemProto* mutable_basepropscarditemproto(int index);
  inline ::main::PropsCardItemProto* add_basepropscarditemproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::PropsCardItemProto >&
      basepropscarditemproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::PropsCardItemProto >*
      mutable_basepropscarditemproto();

  // repeated .main.OfficerFragmentCardItemProto baseOfficerFragmentCardItemProto = 5;
  inline int baseofficerfragmentcarditemproto_size() const;
  inline void clear_baseofficerfragmentcarditemproto();
  static const int kBaseOfficerFragmentCardItemProtoFieldNumber = 5;
  inline const ::main::OfficerFragmentCardItemProto& baseofficerfragmentcarditemproto(int index) const;
  inline ::main::OfficerFragmentCardItemProto* mutable_baseofficerfragmentcarditemproto(int index);
  inline ::main::OfficerFragmentCardItemProto* add_baseofficerfragmentcarditemproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::OfficerFragmentCardItemProto >&
      baseofficerfragmentcarditemproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::OfficerFragmentCardItemProto >*
      mutable_baseofficerfragmentcarditemproto();

  // repeated .main.ConsumableCardItemProto baseConsumableCardItemProto = 6;
  inline int baseconsumablecarditemproto_size() const;
  inline void clear_baseconsumablecarditemproto();
  static const int kBaseConsumableCardItemProtoFieldNumber = 6;
  inline const ::main::ConsumableCardItemProto& baseconsumablecarditemproto(int index) const;
  inline ::main::ConsumableCardItemProto* mutable_baseconsumablecarditemproto(int index);
  inline ::main::ConsumableCardItemProto* add_baseconsumablecarditemproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::ConsumableCardItemProto >&
      baseconsumablecarditemproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::ConsumableCardItemProto >*
      mutable_baseconsumablecarditemproto();

  // repeated .main.MaterialItemProto materialItemProto = 7;
  inline int materialitemproto_size() const;
  inline void clear_materialitemproto();
  static const int kMaterialItemProtoFieldNumber = 7;
  inline const ::main::MaterialItemProto& materialitemproto(int index) const;
  inline ::main::MaterialItemProto* mutable_materialitemproto(int index);
  inline ::main::MaterialItemProto* add_materialitemproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::MaterialItemProto >&
      materialitemproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::MaterialItemProto >*
      mutable_materialitemproto();

  // @@protoc_insertion_point(class_scope:main.BaseBagInfo)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::OfficerCardItemProto > baseofficercardinfoproto_;
  ::google::protobuf::RepeatedPtrField< ::main::EquipmentCardItemProto > baseequipmentcarditemproto_;
  ::google::protobuf::RepeatedPtrField< ::main::SoldierCardItemProto > basesoldiercarditemproto_;
  ::google::protobuf::RepeatedPtrField< ::main::PropsCardItemProto > basepropscarditemproto_;
  ::google::protobuf::RepeatedPtrField< ::main::OfficerFragmentCardItemProto > baseofficerfragmentcarditemproto_;
  ::google::protobuf::RepeatedPtrField< ::main::ConsumableCardItemProto > baseconsumablecarditemproto_;
  ::google::protobuf::RepeatedPtrField< ::main::MaterialItemProto > materialitemproto_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static BaseBagInfo* default_instance_;
};
// -------------------------------------------------------------------

class TeamInfo : public ::google::protobuf::MessageLite {
 public:
  TeamInfo();
  virtual ~TeamInfo();

  TeamInfo(const TeamInfo& from);

  inline TeamInfo& operator=(const TeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TeamInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TeamInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TeamInfo* other);

  // implements Message ----------------------------------------------

  TeamInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TeamInfo& from);
  void MergeFrom(const TeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.TeamInfoItem teamInfoItem = 1;
  inline int teaminfoitem_size() const;
  inline void clear_teaminfoitem();
  static const int kTeamInfoItemFieldNumber = 1;
  inline const ::main::TeamInfoItem& teaminfoitem(int index) const;
  inline ::main::TeamInfoItem* mutable_teaminfoitem(int index);
  inline ::main::TeamInfoItem* add_teaminfoitem();
  inline const ::google::protobuf::RepeatedPtrField< ::main::TeamInfoItem >&
      teaminfoitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::TeamInfoItem >*
      mutable_teaminfoitem();

  // repeated int32 onTeamOfficerSsids = 2;
  inline int onteamofficerssids_size() const;
  inline void clear_onteamofficerssids();
  static const int kOnTeamOfficerSsidsFieldNumber = 2;
  inline ::google::protobuf::int32 onteamofficerssids(int index) const;
  inline void set_onteamofficerssids(int index, ::google::protobuf::int32 value);
  inline void add_onteamofficerssids(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      onteamofficerssids() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_onteamofficerssids();

  // @@protoc_insertion_point(class_scope:main.TeamInfo)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::TeamInfoItem > teaminfoitem_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > onteamofficerssids_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static TeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class TeamInfoItem : public ::google::protobuf::MessageLite {
 public:
  TeamInfoItem();
  virtual ~TeamInfoItem();

  TeamInfoItem(const TeamInfoItem& from);

  inline TeamInfoItem& operator=(const TeamInfoItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TeamInfoItem& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TeamInfoItem* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TeamInfoItem* other);

  // implements Message ----------------------------------------------

  TeamInfoItem* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TeamInfoItem& from);
  void MergeFrom(const TeamInfoItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 teamId = 1;
  inline bool has_teamid() const;
  inline void clear_teamid();
  static const int kTeamIdFieldNumber = 1;
  inline ::google::protobuf::int32 teamid() const;
  inline void set_teamid(::google::protobuf::int32 value);

  // optional int32 lordOfficerCardId = 2;
  inline bool has_lordofficercardid() const;
  inline void clear_lordofficercardid();
  static const int kLordOfficerCardIdFieldNumber = 2;
  inline ::google::protobuf::int32 lordofficercardid() const;
  inline void set_lordofficercardid(::google::protobuf::int32 value);

  // repeated int32 officerList = 3;
  inline int officerlist_size() const;
  inline void clear_officerlist();
  static const int kOfficerListFieldNumber = 3;
  inline ::google::protobuf::int32 officerlist(int index) const;
  inline void set_officerlist(int index, ::google::protobuf::int32 value);
  inline void add_officerlist(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      officerlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_officerlist();

  // optional int32 redSoldier = 4;
  inline bool has_redsoldier() const;
  inline void clear_redsoldier();
  static const int kRedSoldierFieldNumber = 4;
  inline ::google::protobuf::int32 redsoldier() const;
  inline void set_redsoldier(::google::protobuf::int32 value);

  // optional int32 blueSoldier = 5;
  inline bool has_bluesoldier() const;
  inline void clear_bluesoldier();
  static const int kBlueSoldierFieldNumber = 5;
  inline ::google::protobuf::int32 bluesoldier() const;
  inline void set_bluesoldier(::google::protobuf::int32 value);

  // optional int32 greenSoldier = 6;
  inline bool has_greensoldier() const;
  inline void clear_greensoldier();
  static const int kGreenSoldierFieldNumber = 6;
  inline ::google::protobuf::int32 greensoldier() const;
  inline void set_greensoldier(::google::protobuf::int32 value);

  // optional int32 current = 7;
  inline bool has_current() const;
  inline void clear_current();
  static const int kCurrentFieldNumber = 7;
  inline ::google::protobuf::int32 current() const;
  inline void set_current(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.TeamInfoItem)
 private:
  inline void set_has_teamid();
  inline void clear_has_teamid();
  inline void set_has_lordofficercardid();
  inline void clear_has_lordofficercardid();
  inline void set_has_redsoldier();
  inline void clear_has_redsoldier();
  inline void set_has_bluesoldier();
  inline void clear_has_bluesoldier();
  inline void set_has_greensoldier();
  inline void clear_has_greensoldier();
  inline void set_has_current();
  inline void clear_has_current();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 teamid_;
  ::google::protobuf::int32 lordofficercardid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > officerlist_;
  ::google::protobuf::int32 redsoldier_;
  ::google::protobuf::int32 bluesoldier_;
  ::google::protobuf::int32 greensoldier_;
  ::google::protobuf::int32 current_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static TeamInfoItem* default_instance_;
};
// -------------------------------------------------------------------

class BeginnersGuideRequest : public ::google::protobuf::MessageLite {
 public:
  BeginnersGuideRequest();
  virtual ~BeginnersGuideRequest();

  BeginnersGuideRequest(const BeginnersGuideRequest& from);

  inline BeginnersGuideRequest& operator=(const BeginnersGuideRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const BeginnersGuideRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BeginnersGuideRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BeginnersGuideRequest* other);

  // implements Message ----------------------------------------------

  BeginnersGuideRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BeginnersGuideRequest& from);
  void MergeFrom(const BeginnersGuideRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.BeginnersGuideRequest)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 id_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static BeginnersGuideRequest* default_instance_;
};
// -------------------------------------------------------------------

class BeginnersGuideResponse : public ::google::protobuf::MessageLite {
 public:
  BeginnersGuideResponse();
  virtual ~BeginnersGuideResponse();

  BeginnersGuideResponse(const BeginnersGuideResponse& from);

  inline BeginnersGuideResponse& operator=(const BeginnersGuideResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const BeginnersGuideResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BeginnersGuideResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BeginnersGuideResponse* other);

  // implements Message ----------------------------------------------

  BeginnersGuideResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BeginnersGuideResponse& from);
  void MergeFrom(const BeginnersGuideResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.BeginnersGuideResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static BeginnersGuideResponse* default_instance_;
};
// -------------------------------------------------------------------

class LoginAwardListRequest : public ::google::protobuf::MessageLite {
 public:
  LoginAwardListRequest();
  virtual ~LoginAwardListRequest();

  LoginAwardListRequest(const LoginAwardListRequest& from);

  inline LoginAwardListRequest& operator=(const LoginAwardListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const LoginAwardListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginAwardListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginAwardListRequest* other);

  // implements Message ----------------------------------------------

  LoginAwardListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LoginAwardListRequest& from);
  void MergeFrom(const LoginAwardListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:main.LoginAwardListRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static LoginAwardListRequest* default_instance_;
};
// -------------------------------------------------------------------

class LoginAwardListResponse : public ::google::protobuf::MessageLite {
 public:
  LoginAwardListResponse();
  virtual ~LoginAwardListResponse();

  LoginAwardListResponse(const LoginAwardListResponse& from);

  inline LoginAwardListResponse& operator=(const LoginAwardListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const LoginAwardListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginAwardListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginAwardListResponse* other);

  // implements Message ----------------------------------------------

  LoginAwardListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LoginAwardListResponse& from);
  void MergeFrom(const LoginAwardListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 longinDay = 1;
  inline bool has_longinday() const;
  inline void clear_longinday();
  static const int kLonginDayFieldNumber = 1;
  inline ::google::protobuf::int32 longinday() const;
  inline void set_longinday(::google::protobuf::int32 value);

  // repeated .main.LoginAwardModel model = 2;
  inline int model_size() const;
  inline void clear_model();
  static const int kModelFieldNumber = 2;
  inline const ::main::LoginAwardModel& model(int index) const;
  inline ::main::LoginAwardModel* mutable_model(int index);
  inline ::main::LoginAwardModel* add_model();
  inline const ::google::protobuf::RepeatedPtrField< ::main::LoginAwardModel >&
      model() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::LoginAwardModel >*
      mutable_model();

  // @@protoc_insertion_point(class_scope:main.LoginAwardListResponse)
 private:
  inline void set_has_longinday();
  inline void clear_has_longinday();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::LoginAwardModel > model_;
  ::google::protobuf::int32 longinday_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static LoginAwardListResponse* default_instance_;
};
// -------------------------------------------------------------------

class LoginAwardModel : public ::google::protobuf::MessageLite {
 public:
  LoginAwardModel();
  virtual ~LoginAwardModel();

  LoginAwardModel(const LoginAwardModel& from);

  inline LoginAwardModel& operator=(const LoginAwardModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const LoginAwardModel& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginAwardModel* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginAwardModel* other);

  // implements Message ----------------------------------------------

  LoginAwardModel* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LoginAwardModel& from);
  void MergeFrom(const LoginAwardModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // repeated .main.LoginAwardItemModel loginAwardItemModel = 2;
  inline int loginawarditemmodel_size() const;
  inline void clear_loginawarditemmodel();
  static const int kLoginAwardItemModelFieldNumber = 2;
  inline const ::main::LoginAwardItemModel& loginawarditemmodel(int index) const;
  inline ::main::LoginAwardItemModel* mutable_loginawarditemmodel(int index);
  inline ::main::LoginAwardItemModel* add_loginawarditemmodel();
  inline const ::google::protobuf::RepeatedPtrField< ::main::LoginAwardItemModel >&
      loginawarditemmodel() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::LoginAwardItemModel >*
      mutable_loginawarditemmodel();

  // optional int32 isFinish = 3;
  inline bool has_isfinish() const;
  inline void clear_isfinish();
  static const int kIsFinishFieldNumber = 3;
  inline ::google::protobuf::int32 isfinish() const;
  inline void set_isfinish(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.LoginAwardModel)
 private:
  inline void set_has_day();
  inline void clear_has_day();
  inline void set_has_isfinish();
  inline void clear_has_isfinish();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::LoginAwardItemModel > loginawarditemmodel_;
  ::google::protobuf::int32 day_;
  ::google::protobuf::int32 isfinish_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static LoginAwardModel* default_instance_;
};
// -------------------------------------------------------------------

class LoginAwardItemModel : public ::google::protobuf::MessageLite {
 public:
  LoginAwardItemModel();
  virtual ~LoginAwardItemModel();

  LoginAwardItemModel(const LoginAwardItemModel& from);

  inline LoginAwardItemModel& operator=(const LoginAwardItemModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const LoginAwardItemModel& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginAwardItemModel* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginAwardItemModel* other);

  // implements Message ----------------------------------------------

  LoginAwardItemModel* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LoginAwardItemModel& from);
  void MergeFrom(const LoginAwardItemModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 itemType = 2;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 2;
  inline ::google::protobuf::int32 itemtype() const;
  inline void set_itemtype(::google::protobuf::int32 value);

  // optional int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.LoginAwardItemModel)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_count();
  inline void clear_has_count();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemtype_;
  ::google::protobuf::int32 count_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static LoginAwardItemModel* default_instance_;
};
// -------------------------------------------------------------------

class RewardLoginAwardRequest : public ::google::protobuf::MessageLite {
 public:
  RewardLoginAwardRequest();
  virtual ~RewardLoginAwardRequest();

  RewardLoginAwardRequest(const RewardLoginAwardRequest& from);

  inline RewardLoginAwardRequest& operator=(const RewardLoginAwardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RewardLoginAwardRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RewardLoginAwardRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RewardLoginAwardRequest* other);

  // implements Message ----------------------------------------------

  RewardLoginAwardRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RewardLoginAwardRequest& from);
  void MergeFrom(const RewardLoginAwardRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 day = 1;
  inline bool has_day() const;
  inline void clear_day();
  static const int kDayFieldNumber = 1;
  inline ::google::protobuf::int32 day() const;
  inline void set_day(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.RewardLoginAwardRequest)
 private:
  inline void set_has_day();
  inline void clear_has_day();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 day_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static RewardLoginAwardRequest* default_instance_;
};
// -------------------------------------------------------------------

class RewardLoginAwardResponse : public ::google::protobuf::MessageLite {
 public:
  RewardLoginAwardResponse();
  virtual ~RewardLoginAwardResponse();

  RewardLoginAwardResponse(const RewardLoginAwardResponse& from);

  inline RewardLoginAwardResponse& operator=(const RewardLoginAwardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RewardLoginAwardResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RewardLoginAwardResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RewardLoginAwardResponse* other);

  // implements Message ----------------------------------------------

  RewardLoginAwardResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RewardLoginAwardResponse& from);
  void MergeFrom(const RewardLoginAwardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline bool state() const;
  inline void set_state(bool value);

  // repeated .main.LoginAwardItemInfo loginAwardItemInfo = 2;
  inline int loginawarditeminfo_size() const;
  inline void clear_loginawarditeminfo();
  static const int kLoginAwardItemInfoFieldNumber = 2;
  inline const ::main::LoginAwardItemInfo& loginawarditeminfo(int index) const;
  inline ::main::LoginAwardItemInfo* mutable_loginawarditeminfo(int index);
  inline ::main::LoginAwardItemInfo* add_loginawarditeminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::main::LoginAwardItemInfo >&
      loginawarditeminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::LoginAwardItemInfo >*
      mutable_loginawarditeminfo();

  // @@protoc_insertion_point(class_scope:main.RewardLoginAwardResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::LoginAwardItemInfo > loginawarditeminfo_;
  bool state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static RewardLoginAwardResponse* default_instance_;
};
// -------------------------------------------------------------------

class LoginAwardItemInfo : public ::google::protobuf::MessageLite {
 public:
  LoginAwardItemInfo();
  virtual ~LoginAwardItemInfo();

  LoginAwardItemInfo(const LoginAwardItemInfo& from);

  inline LoginAwardItemInfo& operator=(const LoginAwardItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const LoginAwardItemInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const LoginAwardItemInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(LoginAwardItemInfo* other);

  // implements Message ----------------------------------------------

  LoginAwardItemInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const LoginAwardItemInfo& from);
  void MergeFrom(const LoginAwardItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 itemType = 2;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 2;
  inline ::google::protobuf::int32 itemtype() const;
  inline void set_itemtype(::google::protobuf::int32 value);

  // optional int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 coins = 4;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 4;
  inline ::google::protobuf::int32 coins() const;
  inline void set_coins(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.LoginAwardItemInfo)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_coins();
  inline void clear_has_coins();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemtype_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 coins_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static LoginAwardItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class RewardLoginAwardGoldResponse : public ::google::protobuf::MessageLite {
 public:
  RewardLoginAwardGoldResponse();
  virtual ~RewardLoginAwardGoldResponse();

  RewardLoginAwardGoldResponse(const RewardLoginAwardGoldResponse& from);

  inline RewardLoginAwardGoldResponse& operator=(const RewardLoginAwardGoldResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RewardLoginAwardGoldResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RewardLoginAwardGoldResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RewardLoginAwardGoldResponse* other);

  // implements Message ----------------------------------------------

  RewardLoginAwardGoldResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RewardLoginAwardGoldResponse& from);
  void MergeFrom(const RewardLoginAwardGoldResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline bool state() const;
  inline void set_state(bool value);

  // optional int32 coins = 2;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 2;
  inline ::google::protobuf::int32 coins() const;
  inline void set_coins(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.RewardLoginAwardGoldResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_coins();
  inline void clear_has_coins();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool state_;
  ::google::protobuf::int32 coins_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static RewardLoginAwardGoldResponse* default_instance_;
};
// -------------------------------------------------------------------

class RewardLoginAwardGoldRequest : public ::google::protobuf::MessageLite {
 public:
  RewardLoginAwardGoldRequest();
  virtual ~RewardLoginAwardGoldRequest();

  RewardLoginAwardGoldRequest(const RewardLoginAwardGoldRequest& from);

  inline RewardLoginAwardGoldRequest& operator=(const RewardLoginAwardGoldRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RewardLoginAwardGoldRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RewardLoginAwardGoldRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RewardLoginAwardGoldRequest* other);

  // implements Message ----------------------------------------------

  RewardLoginAwardGoldRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RewardLoginAwardGoldRequest& from);
  void MergeFrom(const RewardLoginAwardGoldRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:main.RewardLoginAwardGoldRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static RewardLoginAwardGoldRequest* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRoleQuest : public ::google::protobuf::MessageLite {
 public:
  UpdateRoleQuest();
  virtual ~UpdateRoleQuest();

  UpdateRoleQuest(const UpdateRoleQuest& from);

  inline UpdateRoleQuest& operator=(const UpdateRoleQuest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const UpdateRoleQuest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UpdateRoleQuest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UpdateRoleQuest* other);

  // implements Message ----------------------------------------------

  UpdateRoleQuest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UpdateRoleQuest& from);
  void MergeFrom(const UpdateRoleQuest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.RoleQuestProto updateRoleQuestProto = 1;
  inline int updaterolequestproto_size() const;
  inline void clear_updaterolequestproto();
  static const int kUpdateRoleQuestProtoFieldNumber = 1;
  inline const ::main::RoleQuestProto& updaterolequestproto(int index) const;
  inline ::main::RoleQuestProto* mutable_updaterolequestproto(int index);
  inline ::main::RoleQuestProto* add_updaterolequestproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::RoleQuestProto >&
      updaterolequestproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::RoleQuestProto >*
      mutable_updaterolequestproto();

  // @@protoc_insertion_point(class_scope:main.UpdateRoleQuest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::RoleQuestProto > updaterolequestproto_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static UpdateRoleQuest* default_instance_;
};
// -------------------------------------------------------------------

class RoleQuestProto : public ::google::protobuf::MessageLite {
 public:
  RoleQuestProto();
  virtual ~RoleQuestProto();

  RoleQuestProto(const RoleQuestProto& from);

  inline RoleQuestProto& operator=(const RoleQuestProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RoleQuestProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RoleQuestProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RoleQuestProto* other);

  // implements Message ----------------------------------------------

  RoleQuestProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RoleQuestProto& from);
  void MergeFrom(const RoleQuestProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 questId = 2;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 2;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // optional int32 questState = 3;
  inline bool has_queststate() const;
  inline void clear_queststate();
  static const int kQuestStateFieldNumber = 3;
  inline ::google::protobuf::int32 queststate() const;
  inline void set_queststate(::google::protobuf::int32 value);

  // optional int32 conditionType = 4;
  inline bool has_conditiontype() const;
  inline void clear_conditiontype();
  static const int kConditionTypeFieldNumber = 4;
  inline ::google::protobuf::int32 conditiontype() const;
  inline void set_conditiontype(::google::protobuf::int32 value);

  // optional string conditionName = 5;
  inline bool has_conditionname() const;
  inline void clear_conditionname();
  static const int kConditionNameFieldNumber = 5;
  inline const ::std::string& conditionname() const;
  inline void set_conditionname(const ::std::string& value);
  inline void set_conditionname(const char* value);
  inline void set_conditionname(const char* value, size_t size);
  inline ::std::string* mutable_conditionname();
  inline ::std::string* release_conditionname();
  inline void set_allocated_conditionname(::std::string* conditionname);

  // optional int32 conditionValue = 6;
  inline bool has_conditionvalue() const;
  inline void clear_conditionvalue();
  static const int kConditionValueFieldNumber = 6;
  inline ::google::protobuf::int32 conditionvalue() const;
  inline void set_conditionvalue(::google::protobuf::int32 value);

  // optional int32 currContionValue = 7;
  inline bool has_currcontionvalue() const;
  inline void clear_currcontionvalue();
  static const int kCurrContionValueFieldNumber = 7;
  inline ::google::protobuf::int32 currcontionvalue() const;
  inline void set_currcontionvalue(::google::protobuf::int32 value);

  // optional int32 actionType = 8;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 8;
  inline ::google::protobuf::int32 actiontype() const;
  inline void set_actiontype(::google::protobuf::int32 value);

  // optional int32 tabId = 9;
  inline bool has_tabid() const;
  inline void clear_tabid();
  static const int kTabIdFieldNumber = 9;
  inline ::google::protobuf::int32 tabid() const;
  inline void set_tabid(::google::protobuf::int32 value);

  // optional int32 groupId = 10;
  inline bool has_groupid() const;
  inline void clear_groupid();
  static const int kGroupIdFieldNumber = 10;
  inline ::google::protobuf::int32 groupid() const;
  inline void set_groupid(::google::protobuf::int32 value);

  // optional int32 arrivement = 11;
  inline bool has_arrivement() const;
  inline void clear_arrivement();
  static const int kArrivementFieldNumber = 11;
  inline ::google::protobuf::int32 arrivement() const;
  inline void set_arrivement(::google::protobuf::int32 value);

  // optional int32 questType = 12;
  inline bool has_questtype() const;
  inline void clear_questtype();
  static const int kQuestTypeFieldNumber = 12;
  inline ::google::protobuf::int32 questtype() const;
  inline void set_questtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.RoleQuestProto)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_questid();
  inline void clear_has_questid();
  inline void set_has_queststate();
  inline void clear_has_queststate();
  inline void set_has_conditiontype();
  inline void clear_has_conditiontype();
  inline void set_has_conditionname();
  inline void clear_has_conditionname();
  inline void set_has_conditionvalue();
  inline void clear_has_conditionvalue();
  inline void set_has_currcontionvalue();
  inline void clear_has_currcontionvalue();
  inline void set_has_actiontype();
  inline void clear_has_actiontype();
  inline void set_has_tabid();
  inline void clear_has_tabid();
  inline void set_has_groupid();
  inline void clear_has_groupid();
  inline void set_has_arrivement();
  inline void clear_has_arrivement();
  inline void set_has_questtype();
  inline void clear_has_questtype();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 questid_;
  ::google::protobuf::int32 queststate_;
  ::google::protobuf::int32 conditiontype_;
  ::std::string* conditionname_;
  ::google::protobuf::int32 conditionvalue_;
  ::google::protobuf::int32 currcontionvalue_;
  ::google::protobuf::int32 actiontype_;
  ::google::protobuf::int32 tabid_;
  ::google::protobuf::int32 groupid_;
  ::google::protobuf::int32 arrivement_;
  ::google::protobuf::int32 questtype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static RoleQuestProto* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveQuestRewardRequest : public ::google::protobuf::MessageLite {
 public:
  ReceiveQuestRewardRequest();
  virtual ~ReceiveQuestRewardRequest();

  ReceiveQuestRewardRequest(const ReceiveQuestRewardRequest& from);

  inline ReceiveQuestRewardRequest& operator=(const ReceiveQuestRewardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ReceiveQuestRewardRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ReceiveQuestRewardRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ReceiveQuestRewardRequest* other);

  // implements Message ----------------------------------------------

  ReceiveQuestRewardRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ReceiveQuestRewardRequest& from);
  void MergeFrom(const ReceiveQuestRewardRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 questId = 1;
  inline bool has_questid() const;
  inline void clear_questid();
  static const int kQuestIdFieldNumber = 1;
  inline ::google::protobuf::int32 questid() const;
  inline void set_questid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ReceiveQuestRewardRequest)
 private:
  inline void set_has_questid();
  inline void clear_has_questid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 questid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static ReceiveQuestRewardRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveQuestRewardResponse : public ::google::protobuf::MessageLite {
 public:
  ReceiveQuestRewardResponse();
  virtual ~ReceiveQuestRewardResponse();

  ReceiveQuestRewardResponse(const ReceiveQuestRewardResponse& from);

  inline ReceiveQuestRewardResponse& operator=(const ReceiveQuestRewardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ReceiveQuestRewardResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ReceiveQuestRewardResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ReceiveQuestRewardResponse* other);

  // implements Message ----------------------------------------------

  ReceiveQuestRewardResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ReceiveQuestRewardResponse& from);
  void MergeFrom(const ReceiveQuestRewardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ReceiveQuestRewardResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static ReceiveQuestRewardResponse* default_instance_;
};
// -------------------------------------------------------------------

class BossStartSateResponse : public ::google::protobuf::MessageLite {
 public:
  BossStartSateResponse();
  virtual ~BossStartSateResponse();

  BossStartSateResponse(const BossStartSateResponse& from);

  inline BossStartSateResponse& operator=(const BossStartSateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const BossStartSateResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BossStartSateResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BossStartSateResponse* other);

  // implements Message ----------------------------------------------

  BossStartSateResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BossStartSateResponse& from);
  void MergeFrom(const BossStartSateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline bool state() const;
  inline void set_state(bool value);

  // @@protoc_insertion_point(class_scope:main.BossStartSateResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static BossStartSateResponse* default_instance_;
};
// -------------------------------------------------------------------

class BossPlotCountProto : public ::google::protobuf::MessageLite {
 public:
  BossPlotCountProto();
  virtual ~BossPlotCountProto();

  BossPlotCountProto(const BossPlotCountProto& from);

  inline BossPlotCountProto& operator=(const BossPlotCountProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const BossPlotCountProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const BossPlotCountProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(BossPlotCountProto* other);

  // implements Message ----------------------------------------------

  BossPlotCountProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const BossPlotCountProto& from);
  void MergeFrom(const BossPlotCountProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 bossPlotId = 1;
  inline bool has_bossplotid() const;
  inline void clear_bossplotid();
  static const int kBossPlotIdFieldNumber = 1;
  inline ::google::protobuf::int32 bossplotid() const;
  inline void set_bossplotid(::google::protobuf::int32 value);

  // required int32 canJoinCount = 2;
  inline bool has_canjoincount() const;
  inline void clear_canjoincount();
  static const int kCanJoinCountFieldNumber = 2;
  inline ::google::protobuf::int32 canjoincount() const;
  inline void set_canjoincount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.BossPlotCountProto)
 private:
  inline void set_has_bossplotid();
  inline void clear_has_bossplotid();
  inline void set_has_canjoincount();
  inline void clear_has_canjoincount();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 bossplotid_;
  ::google::protobuf::int32 canjoincount_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_RoleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_RoleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_RoleModule_2eproto();
  friend void protobuf_ShutdownFile_RoleModule_2eproto();

  void InitAsDefaultInstance();
  static BossPlotCountProto* default_instance_;
};
// ===================================================================


// ===================================================================

// CreateRoleRequest

// required string nickName = 1;
inline bool CreateRoleRequest::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoleRequest::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoleRequest::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoleRequest::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& CreateRoleRequest::nickname() const {
  // @@protoc_insertion_point(field_get:main.CreateRoleRequest.nickName)
  return *nickname_;
}
inline void CreateRoleRequest::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:main.CreateRoleRequest.nickName)
}
inline void CreateRoleRequest::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.CreateRoleRequest.nickName)
}
inline void CreateRoleRequest::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.CreateRoleRequest.nickName)
}
inline ::std::string* CreateRoleRequest::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.CreateRoleRequest.nickName)
  return nickname_;
}
inline ::std::string* CreateRoleRequest::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateRoleRequest::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.CreateRoleRequest.nickName)
}

// required int32 country = 2;
inline bool CreateRoleRequest::has_country() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoleRequest::set_has_country() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoleRequest::clear_has_country() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoleRequest::clear_country() {
  country_ = 0;
  clear_has_country();
}
inline ::google::protobuf::int32 CreateRoleRequest::country() const {
  // @@protoc_insertion_point(field_get:main.CreateRoleRequest.country)
  return country_;
}
inline void CreateRoleRequest::set_country(::google::protobuf::int32 value) {
  set_has_country();
  country_ = value;
  // @@protoc_insertion_point(field_set:main.CreateRoleRequest.country)
}

// -------------------------------------------------------------------

// CreateRoleResponse

// optional int32 state = 1;
inline bool CreateRoleResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateRoleResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateRoleResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateRoleResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 CreateRoleResponse::state() const {
  // @@protoc_insertion_point(field_get:main.CreateRoleResponse.state)
  return state_;
}
inline void CreateRoleResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.CreateRoleResponse.state)
}

// optional string errorStr = 2;
inline bool CreateRoleResponse::has_errorstr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateRoleResponse::set_has_errorstr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateRoleResponse::clear_has_errorstr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateRoleResponse::clear_errorstr() {
  if (errorstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errorstr_->clear();
  }
  clear_has_errorstr();
}
inline const ::std::string& CreateRoleResponse::errorstr() const {
  // @@protoc_insertion_point(field_get:main.CreateRoleResponse.errorStr)
  return *errorstr_;
}
inline void CreateRoleResponse::set_errorstr(const ::std::string& value) {
  set_has_errorstr();
  if (errorstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errorstr_ = new ::std::string;
  }
  errorstr_->assign(value);
  // @@protoc_insertion_point(field_set:main.CreateRoleResponse.errorStr)
}
inline void CreateRoleResponse::set_errorstr(const char* value) {
  set_has_errorstr();
  if (errorstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errorstr_ = new ::std::string;
  }
  errorstr_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.CreateRoleResponse.errorStr)
}
inline void CreateRoleResponse::set_errorstr(const char* value, size_t size) {
  set_has_errorstr();
  if (errorstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errorstr_ = new ::std::string;
  }
  errorstr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.CreateRoleResponse.errorStr)
}
inline ::std::string* CreateRoleResponse::mutable_errorstr() {
  set_has_errorstr();
  if (errorstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    errorstr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.CreateRoleResponse.errorStr)
  return errorstr_;
}
inline ::std::string* CreateRoleResponse::release_errorstr() {
  clear_has_errorstr();
  if (errorstr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = errorstr_;
    errorstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CreateRoleResponse::set_allocated_errorstr(::std::string* errorstr) {
  if (errorstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete errorstr_;
  }
  if (errorstr) {
    set_has_errorstr();
    errorstr_ = errorstr;
  } else {
    clear_has_errorstr();
    errorstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.CreateRoleResponse.errorStr)
}

// optional .main.RoleResponse roleResponse = 3;
inline bool CreateRoleResponse::has_roleresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateRoleResponse::set_has_roleresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateRoleResponse::clear_has_roleresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateRoleResponse::clear_roleresponse() {
  if (roleresponse_ != NULL) roleresponse_->::main::RoleResponse::Clear();
  clear_has_roleresponse();
}
inline const ::main::RoleResponse& CreateRoleResponse::roleresponse() const {
  // @@protoc_insertion_point(field_get:main.CreateRoleResponse.roleResponse)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return roleresponse_ != NULL ? *roleresponse_ : *default_instance().roleresponse_;
#else
  return roleresponse_ != NULL ? *roleresponse_ : *default_instance_->roleresponse_;
#endif
}
inline ::main::RoleResponse* CreateRoleResponse::mutable_roleresponse() {
  set_has_roleresponse();
  if (roleresponse_ == NULL) roleresponse_ = new ::main::RoleResponse;
  // @@protoc_insertion_point(field_mutable:main.CreateRoleResponse.roleResponse)
  return roleresponse_;
}
inline ::main::RoleResponse* CreateRoleResponse::release_roleresponse() {
  clear_has_roleresponse();
  ::main::RoleResponse* temp = roleresponse_;
  roleresponse_ = NULL;
  return temp;
}
inline void CreateRoleResponse::set_allocated_roleresponse(::main::RoleResponse* roleresponse) {
  delete roleresponse_;
  roleresponse_ = roleresponse;
  if (roleresponse) {
    set_has_roleresponse();
  } else {
    clear_has_roleresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:main.CreateRoleResponse.roleResponse)
}

// -------------------------------------------------------------------

// RoleResponse

// optional int32 roleId = 1;
inline bool RoleResponse::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleResponse::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleResponse::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleResponse::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 RoleResponse::roleid() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.roleId)
  return roleid_;
}
inline void RoleResponse::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.roleId)
}

// optional string name = 2;
inline bool RoleResponse::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleResponse::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleResponse::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleResponse::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleResponse::name() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.name)
  return *name_;
}
inline void RoleResponse::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleResponse.name)
}
inline void RoleResponse::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleResponse.name)
}
inline void RoleResponse::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleResponse.name)
}
inline ::std::string* RoleResponse::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.name)
  return name_;
}
inline ::std::string* RoleResponse::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleResponse::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleResponse.name)
}

// optional string nickname = 3;
inline bool RoleResponse::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleResponse::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleResponse::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleResponse::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& RoleResponse::nickname() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.nickname)
  return *nickname_;
}
inline void RoleResponse::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleResponse.nickname)
}
inline void RoleResponse::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleResponse.nickname)
}
inline void RoleResponse::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleResponse.nickname)
}
inline ::std::string* RoleResponse::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.nickname)
  return nickname_;
}
inline ::std::string* RoleResponse::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleResponse::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleResponse.nickname)
}

// optional string ssid = 4;
inline bool RoleResponse::has_ssid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleResponse::set_has_ssid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleResponse::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleResponse::clear_ssid() {
  if (ssid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssid_->clear();
  }
  clear_has_ssid();
}
inline const ::std::string& RoleResponse::ssid() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.ssid)
  return *ssid_;
}
inline void RoleResponse::set_ssid(const ::std::string& value) {
  set_has_ssid();
  if (ssid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssid_ = new ::std::string;
  }
  ssid_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleResponse.ssid)
}
inline void RoleResponse::set_ssid(const char* value) {
  set_has_ssid();
  if (ssid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssid_ = new ::std::string;
  }
  ssid_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleResponse.ssid)
}
inline void RoleResponse::set_ssid(const char* value, size_t size) {
  set_has_ssid();
  if (ssid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssid_ = new ::std::string;
  }
  ssid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleResponse.ssid)
}
inline ::std::string* RoleResponse::mutable_ssid() {
  set_has_ssid();
  if (ssid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.ssid)
  return ssid_;
}
inline ::std::string* RoleResponse::release_ssid() {
  clear_has_ssid();
  if (ssid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ssid_;
    ssid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleResponse::set_allocated_ssid(::std::string* ssid) {
  if (ssid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssid_;
  }
  if (ssid) {
    set_has_ssid();
    ssid_ = ssid;
  } else {
    clear_has_ssid();
    ssid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleResponse.ssid)
}

// optional int32 exp = 5;
inline bool RoleResponse::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleResponse::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleResponse::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleResponse::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 RoleResponse::exp() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.exp)
  return exp_;
}
inline void RoleResponse::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.exp)
}

// optional int32 level = 6;
inline bool RoleResponse::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleResponse::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleResponse::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleResponse::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 RoleResponse::level() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.level)
  return level_;
}
inline void RoleResponse::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.level)
}

// optional int32 coins = 7;
inline bool RoleResponse::has_coins() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleResponse::set_has_coins() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleResponse::clear_has_coins() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleResponse::clear_coins() {
  coins_ = 0;
  clear_has_coins();
}
inline ::google::protobuf::int32 RoleResponse::coins() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.coins)
  return coins_;
}
inline void RoleResponse::set_coins(::google::protobuf::int32 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.coins)
}

// optional int32 gold = 8;
inline bool RoleResponse::has_gold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleResponse::set_has_gold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleResponse::clear_has_gold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleResponse::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 RoleResponse::gold() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.gold)
  return gold_;
}
inline void RoleResponse::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.gold)
}

// optional int32 country = 9;
inline bool RoleResponse::has_country() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleResponse::set_has_country() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleResponse::clear_has_country() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleResponse::clear_country() {
  country_ = 0;
  clear_has_country();
}
inline ::google::protobuf::int32 RoleResponse::country() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.country)
  return country_;
}
inline void RoleResponse::set_country(::google::protobuf::int32 value) {
  set_has_country();
  country_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.country)
}

// optional int32 image = 10;
inline bool RoleResponse::has_image() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleResponse::set_has_image() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleResponse::clear_has_image() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleResponse::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 RoleResponse::image() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.image)
  return image_;
}
inline void RoleResponse::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.image)
}

// optional int32 power = 11;
inline bool RoleResponse::has_power() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleResponse::set_has_power() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleResponse::clear_has_power() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleResponse::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 RoleResponse::power() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.power)
  return power_;
}
inline void RoleResponse::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.power)
}

// optional int32 bagSize = 12;
inline bool RoleResponse::has_bagsize() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleResponse::set_has_bagsize() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleResponse::clear_has_bagsize() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleResponse::clear_bagsize() {
  bagsize_ = 0;
  clear_has_bagsize();
}
inline ::google::protobuf::int32 RoleResponse::bagsize() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.bagSize)
  return bagsize_;
}
inline void RoleResponse::set_bagsize(::google::protobuf::int32 value) {
  set_has_bagsize();
  bagsize_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.bagSize)
}

// optional int32 modifyNickNameCount = 13;
inline bool RoleResponse::has_modifynicknamecount() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleResponse::set_has_modifynicknamecount() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleResponse::clear_has_modifynicknamecount() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleResponse::clear_modifynicknamecount() {
  modifynicknamecount_ = 0;
  clear_has_modifynicknamecount();
}
inline ::google::protobuf::int32 RoleResponse::modifynicknamecount() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.modifyNickNameCount)
  return modifynicknamecount_;
}
inline void RoleResponse::set_modifynicknamecount(::google::protobuf::int32 value) {
  set_has_modifynicknamecount();
  modifynicknamecount_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.modifyNickNameCount)
}

// optional .main.BaseBagInfo baseBagInfo = 14;
inline bool RoleResponse::has_basebaginfo() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RoleResponse::set_has_basebaginfo() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RoleResponse::clear_has_basebaginfo() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RoleResponse::clear_basebaginfo() {
  if (basebaginfo_ != NULL) basebaginfo_->::main::BaseBagInfo::Clear();
  clear_has_basebaginfo();
}
inline const ::main::BaseBagInfo& RoleResponse::basebaginfo() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.baseBagInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return basebaginfo_ != NULL ? *basebaginfo_ : *default_instance().basebaginfo_;
#else
  return basebaginfo_ != NULL ? *basebaginfo_ : *default_instance_->basebaginfo_;
#endif
}
inline ::main::BaseBagInfo* RoleResponse::mutable_basebaginfo() {
  set_has_basebaginfo();
  if (basebaginfo_ == NULL) basebaginfo_ = new ::main::BaseBagInfo;
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.baseBagInfo)
  return basebaginfo_;
}
inline ::main::BaseBagInfo* RoleResponse::release_basebaginfo() {
  clear_has_basebaginfo();
  ::main::BaseBagInfo* temp = basebaginfo_;
  basebaginfo_ = NULL;
  return temp;
}
inline void RoleResponse::set_allocated_basebaginfo(::main::BaseBagInfo* basebaginfo) {
  delete basebaginfo_;
  basebaginfo_ = basebaginfo;
  if (basebaginfo) {
    set_has_basebaginfo();
  } else {
    clear_has_basebaginfo();
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleResponse.baseBagInfo)
}

// repeated .main.FriendProto friendList = 15;
inline int RoleResponse::friendlist_size() const {
  return friendlist_.size();
}
inline void RoleResponse::clear_friendlist() {
  friendlist_.Clear();
}
inline const ::main::FriendProto& RoleResponse::friendlist(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.friendList)
  return friendlist_.Get(index);
}
inline ::main::FriendProto* RoleResponse::mutable_friendlist(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.friendList)
  return friendlist_.Mutable(index);
}
inline ::main::FriendProto* RoleResponse::add_friendlist() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.friendList)
  return friendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::FriendProto >&
RoleResponse::friendlist() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.friendList)
  return friendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::FriendProto >*
RoleResponse::mutable_friendlist() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.friendList)
  return &friendlist_;
}

// repeated .main.FriendProto blockList = 16;
inline int RoleResponse::blocklist_size() const {
  return blocklist_.size();
}
inline void RoleResponse::clear_blocklist() {
  blocklist_.Clear();
}
inline const ::main::FriendProto& RoleResponse::blocklist(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.blockList)
  return blocklist_.Get(index);
}
inline ::main::FriendProto* RoleResponse::mutable_blocklist(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.blockList)
  return blocklist_.Mutable(index);
}
inline ::main::FriendProto* RoleResponse::add_blocklist() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.blockList)
  return blocklist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::FriendProto >&
RoleResponse::blocklist() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.blockList)
  return blocklist_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::FriendProto >*
RoleResponse::mutable_blocklist() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.blockList)
  return &blocklist_;
}

// repeated .main.FriendProto applyList = 17;
inline int RoleResponse::applylist_size() const {
  return applylist_.size();
}
inline void RoleResponse::clear_applylist() {
  applylist_.Clear();
}
inline const ::main::FriendProto& RoleResponse::applylist(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.applyList)
  return applylist_.Get(index);
}
inline ::main::FriendProto* RoleResponse::mutable_applylist(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.applyList)
  return applylist_.Mutable(index);
}
inline ::main::FriendProto* RoleResponse::add_applylist() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.applyList)
  return applylist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::FriendProto >&
RoleResponse::applylist() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.applyList)
  return applylist_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::FriendProto >*
RoleResponse::mutable_applylist() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.applyList)
  return &applylist_;
}

// optional int32 friendSize = 18;
inline bool RoleResponse::has_friendsize() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RoleResponse::set_has_friendsize() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RoleResponse::clear_has_friendsize() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RoleResponse::clear_friendsize() {
  friendsize_ = 0;
  clear_has_friendsize();
}
inline ::google::protobuf::int32 RoleResponse::friendsize() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.friendSize)
  return friendsize_;
}
inline void RoleResponse::set_friendsize(::google::protobuf::int32 value) {
  set_has_friendsize();
  friendsize_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.friendSize)
}

// optional int32 expandCount = 19;
inline bool RoleResponse::has_expandcount() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void RoleResponse::set_has_expandcount() {
  _has_bits_[0] |= 0x00040000u;
}
inline void RoleResponse::clear_has_expandcount() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void RoleResponse::clear_expandcount() {
  expandcount_ = 0;
  clear_has_expandcount();
}
inline ::google::protobuf::int32 RoleResponse::expandcount() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.expandCount)
  return expandcount_;
}
inline void RoleResponse::set_expandcount(::google::protobuf::int32 value) {
  set_has_expandcount();
  expandcount_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.expandCount)
}

// repeated .main.MailProto mainMails = 20;
inline int RoleResponse::mainmails_size() const {
  return mainmails_.size();
}
inline void RoleResponse::clear_mainmails() {
  mainmails_.Clear();
}
inline const ::main::MailProto& RoleResponse::mainmails(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.mainMails)
  return mainmails_.Get(index);
}
inline ::main::MailProto* RoleResponse::mutable_mainmails(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.mainMails)
  return mainmails_.Mutable(index);
}
inline ::main::MailProto* RoleResponse::add_mainmails() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.mainMails)
  return mainmails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::MailProto >&
RoleResponse::mainmails() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.mainMails)
  return mainmails_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::MailProto >*
RoleResponse::mutable_mainmails() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.mainMails)
  return &mainmails_;
}

// repeated .main.SystemMailProto systemMails = 21;
inline int RoleResponse::systemmails_size() const {
  return systemmails_.size();
}
inline void RoleResponse::clear_systemmails() {
  systemmails_.Clear();
}
inline const ::main::SystemMailProto& RoleResponse::systemmails(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.systemMails)
  return systemmails_.Get(index);
}
inline ::main::SystemMailProto* RoleResponse::mutable_systemmails(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.systemMails)
  return systemmails_.Mutable(index);
}
inline ::main::SystemMailProto* RoleResponse::add_systemmails() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.systemMails)
  return systemmails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::SystemMailProto >&
RoleResponse::systemmails() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.systemMails)
  return systemmails_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::SystemMailProto >*
RoleResponse::mutable_systemmails() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.systemMails)
  return &systemmails_;
}

// repeated .main.MailProto gmMails = 22;
inline int RoleResponse::gmmails_size() const {
  return gmmails_.size();
}
inline void RoleResponse::clear_gmmails() {
  gmmails_.Clear();
}
inline const ::main::MailProto& RoleResponse::gmmails(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.gmMails)
  return gmmails_.Get(index);
}
inline ::main::MailProto* RoleResponse::mutable_gmmails(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.gmMails)
  return gmmails_.Mutable(index);
}
inline ::main::MailProto* RoleResponse::add_gmmails() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.gmMails)
  return gmmails_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::MailProto >&
RoleResponse::gmmails() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.gmMails)
  return gmmails_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::MailProto >*
RoleResponse::mutable_gmmails() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.gmMails)
  return &gmmails_;
}

// optional int32 pvpPower = 23;
inline bool RoleResponse::has_pvppower() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void RoleResponse::set_has_pvppower() {
  _has_bits_[0] |= 0x00400000u;
}
inline void RoleResponse::clear_has_pvppower() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void RoleResponse::clear_pvppower() {
  pvppower_ = 0;
  clear_has_pvppower();
}
inline ::google::protobuf::int32 RoleResponse::pvppower() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pvpPower)
  return pvppower_;
}
inline void RoleResponse::set_pvppower(::google::protobuf::int32 value) {
  set_has_pvppower();
  pvppower_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pvpPower)
}

// optional int32 pveLeftTime = 24;
inline bool RoleResponse::has_pvelefttime() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void RoleResponse::set_has_pvelefttime() {
  _has_bits_[0] |= 0x00800000u;
}
inline void RoleResponse::clear_has_pvelefttime() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void RoleResponse::clear_pvelefttime() {
  pvelefttime_ = 0;
  clear_has_pvelefttime();
}
inline ::google::protobuf::int32 RoleResponse::pvelefttime() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pveLeftTime)
  return pvelefttime_;
}
inline void RoleResponse::set_pvelefttime(::google::protobuf::int32 value) {
  set_has_pvelefttime();
  pvelefttime_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pveLeftTime)
}

// optional int32 pveCircleTime = 25;
inline bool RoleResponse::has_pvecircletime() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void RoleResponse::set_has_pvecircletime() {
  _has_bits_[0] |= 0x01000000u;
}
inline void RoleResponse::clear_has_pvecircletime() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void RoleResponse::clear_pvecircletime() {
  pvecircletime_ = 0;
  clear_has_pvecircletime();
}
inline ::google::protobuf::int32 RoleResponse::pvecircletime() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pveCircleTime)
  return pvecircletime_;
}
inline void RoleResponse::set_pvecircletime(::google::protobuf::int32 value) {
  set_has_pvecircletime();
  pvecircletime_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pveCircleTime)
}

// optional int32 pveRecoverLeftCounter = 26;
inline bool RoleResponse::has_pverecoverleftcounter() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void RoleResponse::set_has_pverecoverleftcounter() {
  _has_bits_[0] |= 0x02000000u;
}
inline void RoleResponse::clear_has_pverecoverleftcounter() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void RoleResponse::clear_pverecoverleftcounter() {
  pverecoverleftcounter_ = 0;
  clear_has_pverecoverleftcounter();
}
inline ::google::protobuf::int32 RoleResponse::pverecoverleftcounter() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pveRecoverLeftCounter)
  return pverecoverleftcounter_;
}
inline void RoleResponse::set_pverecoverleftcounter(::google::protobuf::int32 value) {
  set_has_pverecoverleftcounter();
  pverecoverleftcounter_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pveRecoverLeftCounter)
}

// optional int32 pvpLeftTime = 27;
inline bool RoleResponse::has_pvplefttime() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void RoleResponse::set_has_pvplefttime() {
  _has_bits_[0] |= 0x04000000u;
}
inline void RoleResponse::clear_has_pvplefttime() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void RoleResponse::clear_pvplefttime() {
  pvplefttime_ = 0;
  clear_has_pvplefttime();
}
inline ::google::protobuf::int32 RoleResponse::pvplefttime() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pvpLeftTime)
  return pvplefttime_;
}
inline void RoleResponse::set_pvplefttime(::google::protobuf::int32 value) {
  set_has_pvplefttime();
  pvplefttime_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pvpLeftTime)
}

// optional int32 pvpCircleTime = 28;
inline bool RoleResponse::has_pvpcircletime() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void RoleResponse::set_has_pvpcircletime() {
  _has_bits_[0] |= 0x08000000u;
}
inline void RoleResponse::clear_has_pvpcircletime() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void RoleResponse::clear_pvpcircletime() {
  pvpcircletime_ = 0;
  clear_has_pvpcircletime();
}
inline ::google::protobuf::int32 RoleResponse::pvpcircletime() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pvpCircleTime)
  return pvpcircletime_;
}
inline void RoleResponse::set_pvpcircletime(::google::protobuf::int32 value) {
  set_has_pvpcircletime();
  pvpcircletime_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pvpCircleTime)
}

// optional int32 pvpRecoverLeftCounter = 29;
inline bool RoleResponse::has_pvprecoverleftcounter() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void RoleResponse::set_has_pvprecoverleftcounter() {
  _has_bits_[0] |= 0x10000000u;
}
inline void RoleResponse::clear_has_pvprecoverleftcounter() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void RoleResponse::clear_pvprecoverleftcounter() {
  pvprecoverleftcounter_ = 0;
  clear_has_pvprecoverleftcounter();
}
inline ::google::protobuf::int32 RoleResponse::pvprecoverleftcounter() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pvpRecoverLeftCounter)
  return pvprecoverleftcounter_;
}
inline void RoleResponse::set_pvprecoverleftcounter(::google::protobuf::int32 value) {
  set_has_pvprecoverleftcounter();
  pvprecoverleftcounter_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pvpRecoverLeftCounter)
}

// optional int32 hasLottery9 = 30;
inline bool RoleResponse::has_haslottery9() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void RoleResponse::set_has_haslottery9() {
  _has_bits_[0] |= 0x20000000u;
}
inline void RoleResponse::clear_has_haslottery9() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void RoleResponse::clear_haslottery9() {
  haslottery9_ = 0;
  clear_has_haslottery9();
}
inline ::google::protobuf::int32 RoleResponse::haslottery9() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.hasLottery9)
  return haslottery9_;
}
inline void RoleResponse::set_haslottery9(::google::protobuf::int32 value) {
  set_has_haslottery9();
  haslottery9_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.hasLottery9)
}

// repeated .main.Lottery9ViewItem lotteryItems = 31;
inline int RoleResponse::lotteryitems_size() const {
  return lotteryitems_.size();
}
inline void RoleResponse::clear_lotteryitems() {
  lotteryitems_.Clear();
}
inline const ::main::Lottery9ViewItem& RoleResponse::lotteryitems(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.lotteryItems)
  return lotteryitems_.Get(index);
}
inline ::main::Lottery9ViewItem* RoleResponse::mutable_lotteryitems(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.lotteryItems)
  return lotteryitems_.Mutable(index);
}
inline ::main::Lottery9ViewItem* RoleResponse::add_lotteryitems() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.lotteryItems)
  return lotteryitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::Lottery9ViewItem >&
RoleResponse::lotteryitems() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.lotteryItems)
  return lotteryitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::Lottery9ViewItem >*
RoleResponse::mutable_lotteryitems() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.lotteryItems)
  return &lotteryitems_;
}

// optional int32 loginDay = 32;
inline bool RoleResponse::has_loginday() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void RoleResponse::set_has_loginday() {
  _has_bits_[0] |= 0x80000000u;
}
inline void RoleResponse::clear_has_loginday() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void RoleResponse::clear_loginday() {
  loginday_ = 0;
  clear_has_loginday();
}
inline ::google::protobuf::int32 RoleResponse::loginday() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.loginDay)
  return loginday_;
}
inline void RoleResponse::set_loginday(::google::protobuf::int32 value) {
  set_has_loginday();
  loginday_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.loginDay)
}

// optional int32 lottery9Chance = 33;
inline bool RoleResponse::has_lottery9chance() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void RoleResponse::set_has_lottery9chance() {
  _has_bits_[1] |= 0x00000001u;
}
inline void RoleResponse::clear_has_lottery9chance() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void RoleResponse::clear_lottery9chance() {
  lottery9chance_ = 0;
  clear_has_lottery9chance();
}
inline ::google::protobuf::int32 RoleResponse::lottery9chance() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.lottery9Chance)
  return lottery9chance_;
}
inline void RoleResponse::set_lottery9chance(::google::protobuf::int32 value) {
  set_has_lottery9chance();
  lottery9chance_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.lottery9Chance)
}

// repeated .main.RewardTypeState rewardNotice = 34;
inline int RoleResponse::rewardnotice_size() const {
  return rewardnotice_.size();
}
inline void RoleResponse::clear_rewardnotice() {
  rewardnotice_.Clear();
}
inline const ::main::RewardTypeState& RoleResponse::rewardnotice(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.rewardNotice)
  return rewardnotice_.Get(index);
}
inline ::main::RewardTypeState* RoleResponse::mutable_rewardnotice(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.rewardNotice)
  return rewardnotice_.Mutable(index);
}
inline ::main::RewardTypeState* RoleResponse::add_rewardnotice() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.rewardNotice)
  return rewardnotice_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::RewardTypeState >&
RoleResponse::rewardnotice() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.rewardNotice)
  return rewardnotice_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::RewardTypeState >*
RoleResponse::mutable_rewardnotice() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.rewardNotice)
  return &rewardnotice_;
}

// optional int32 beginnersGuideId = 35;
inline bool RoleResponse::has_beginnersguideid() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void RoleResponse::set_has_beginnersguideid() {
  _has_bits_[1] |= 0x00000004u;
}
inline void RoleResponse::clear_has_beginnersguideid() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void RoleResponse::clear_beginnersguideid() {
  beginnersguideid_ = 0;
  clear_has_beginnersguideid();
}
inline ::google::protobuf::int32 RoleResponse::beginnersguideid() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.beginnersGuideId)
  return beginnersguideid_;
}
inline void RoleResponse::set_beginnersguideid(::google::protobuf::int32 value) {
  set_has_beginnersguideid();
  beginnersguideid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.beginnersGuideId)
}

// optional int32 hasFreeLottery = 36;
inline bool RoleResponse::has_hasfreelottery() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void RoleResponse::set_has_hasfreelottery() {
  _has_bits_[1] |= 0x00000008u;
}
inline void RoleResponse::clear_has_hasfreelottery() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void RoleResponse::clear_hasfreelottery() {
  hasfreelottery_ = 0;
  clear_has_hasfreelottery();
}
inline ::google::protobuf::int32 RoleResponse::hasfreelottery() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.hasFreeLottery)
  return hasfreelottery_;
}
inline void RoleResponse::set_hasfreelottery(::google::protobuf::int32 value) {
  set_has_hasfreelottery();
  hasfreelottery_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.hasFreeLottery)
}

// optional int32 newHandPross = 37;
inline bool RoleResponse::has_newhandpross() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void RoleResponse::set_has_newhandpross() {
  _has_bits_[1] |= 0x00000010u;
}
inline void RoleResponse::clear_has_newhandpross() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void RoleResponse::clear_newhandpross() {
  newhandpross_ = 0;
  clear_has_newhandpross();
}
inline ::google::protobuf::int32 RoleResponse::newhandpross() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.newHandPross)
  return newhandpross_;
}
inline void RoleResponse::set_newhandpross(::google::protobuf::int32 value) {
  set_has_newhandpross();
  newhandpross_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.newHandPross)
}

// optional int32 vipLevel = 38;
inline bool RoleResponse::has_viplevel() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void RoleResponse::set_has_viplevel() {
  _has_bits_[1] |= 0x00000020u;
}
inline void RoleResponse::clear_has_viplevel() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void RoleResponse::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 RoleResponse::viplevel() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.vipLevel)
  return viplevel_;
}
inline void RoleResponse::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.vipLevel)
}

// optional int32 pvpTopLevel = 39;
inline bool RoleResponse::has_pvptoplevel() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void RoleResponse::set_has_pvptoplevel() {
  _has_bits_[1] |= 0x00000040u;
}
inline void RoleResponse::clear_has_pvptoplevel() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void RoleResponse::clear_pvptoplevel() {
  pvptoplevel_ = 0;
  clear_has_pvptoplevel();
}
inline ::google::protobuf::int32 RoleResponse::pvptoplevel() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pvpTopLevel)
  return pvptoplevel_;
}
inline void RoleResponse::set_pvptoplevel(::google::protobuf::int32 value) {
  set_has_pvptoplevel();
  pvptoplevel_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pvpTopLevel)
}

// optional int32 pvpTopScore = 40;
inline bool RoleResponse::has_pvptopscore() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void RoleResponse::set_has_pvptopscore() {
  _has_bits_[1] |= 0x00000080u;
}
inline void RoleResponse::clear_has_pvptopscore() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void RoleResponse::clear_pvptopscore() {
  pvptopscore_ = 0;
  clear_has_pvptopscore();
}
inline ::google::protobuf::int32 RoleResponse::pvptopscore() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pvpTopScore)
  return pvptopscore_;
}
inline void RoleResponse::set_pvptopscore(::google::protobuf::int32 value) {
  set_has_pvptopscore();
  pvptopscore_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pvpTopScore)
}

// optional bool hasPveFight = 41;
inline bool RoleResponse::has_haspvefight() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void RoleResponse::set_has_haspvefight() {
  _has_bits_[1] |= 0x00000100u;
}
inline void RoleResponse::clear_has_haspvefight() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void RoleResponse::clear_haspvefight() {
  haspvefight_ = false;
  clear_has_haspvefight();
}
inline bool RoleResponse::haspvefight() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.hasPveFight)
  return haspvefight_;
}
inline void RoleResponse::set_haspvefight(bool value) {
  set_has_haspvefight();
  haspvefight_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.hasPveFight)
}

// optional bool hasPvpFight = 42;
inline bool RoleResponse::has_haspvpfight() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void RoleResponse::set_has_haspvpfight() {
  _has_bits_[1] |= 0x00000200u;
}
inline void RoleResponse::clear_has_haspvpfight() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void RoleResponse::clear_haspvpfight() {
  haspvpfight_ = false;
  clear_has_haspvpfight();
}
inline bool RoleResponse::haspvpfight() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.hasPvpFight)
  return haspvpfight_;
}
inline void RoleResponse::set_haspvpfight(bool value) {
  set_has_haspvpfight();
  haspvpfight_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.hasPvpFight)
}

// optional string lastPvpIp = 43;
inline bool RoleResponse::has_lastpvpip() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void RoleResponse::set_has_lastpvpip() {
  _has_bits_[1] |= 0x00000400u;
}
inline void RoleResponse::clear_has_lastpvpip() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void RoleResponse::clear_lastpvpip() {
  if (lastpvpip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lastpvpip_->clear();
  }
  clear_has_lastpvpip();
}
inline const ::std::string& RoleResponse::lastpvpip() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.lastPvpIp)
  return *lastpvpip_;
}
inline void RoleResponse::set_lastpvpip(const ::std::string& value) {
  set_has_lastpvpip();
  if (lastpvpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lastpvpip_ = new ::std::string;
  }
  lastpvpip_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleResponse.lastPvpIp)
}
inline void RoleResponse::set_lastpvpip(const char* value) {
  set_has_lastpvpip();
  if (lastpvpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lastpvpip_ = new ::std::string;
  }
  lastpvpip_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleResponse.lastPvpIp)
}
inline void RoleResponse::set_lastpvpip(const char* value, size_t size) {
  set_has_lastpvpip();
  if (lastpvpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lastpvpip_ = new ::std::string;
  }
  lastpvpip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleResponse.lastPvpIp)
}
inline ::std::string* RoleResponse::mutable_lastpvpip() {
  set_has_lastpvpip();
  if (lastpvpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    lastpvpip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.lastPvpIp)
  return lastpvpip_;
}
inline ::std::string* RoleResponse::release_lastpvpip() {
  clear_has_lastpvpip();
  if (lastpvpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = lastpvpip_;
    lastpvpip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleResponse::set_allocated_lastpvpip(::std::string* lastpvpip) {
  if (lastpvpip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete lastpvpip_;
  }
  if (lastpvpip) {
    set_has_lastpvpip();
    lastpvpip_ = lastpvpip;
  } else {
    clear_has_lastpvpip();
    lastpvpip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleResponse.lastPvpIp)
}

// optional int32 lastPvpPort = 44;
inline bool RoleResponse::has_lastpvpport() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void RoleResponse::set_has_lastpvpport() {
  _has_bits_[1] |= 0x00000800u;
}
inline void RoleResponse::clear_has_lastpvpport() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void RoleResponse::clear_lastpvpport() {
  lastpvpport_ = 0;
  clear_has_lastpvpport();
}
inline ::google::protobuf::int32 RoleResponse::lastpvpport() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.lastPvpPort)
  return lastpvpport_;
}
inline void RoleResponse::set_lastpvpport(::google::protobuf::int32 value) {
  set_has_lastpvpport();
  lastpvpport_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.lastPvpPort)
}

// optional int32 pvpRank = 45;
inline bool RoleResponse::has_pvprank() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void RoleResponse::set_has_pvprank() {
  _has_bits_[1] |= 0x00001000u;
}
inline void RoleResponse::clear_has_pvprank() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void RoleResponse::clear_pvprank() {
  pvprank_ = 0;
  clear_has_pvprank();
}
inline ::google::protobuf::int32 RoleResponse::pvprank() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pvpRank)
  return pvprank_;
}
inline void RoleResponse::set_pvprank(::google::protobuf::int32 value) {
  set_has_pvprank();
  pvprank_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pvpRank)
}

// optional string rankName = 46;
inline bool RoleResponse::has_rankname() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void RoleResponse::set_has_rankname() {
  _has_bits_[1] |= 0x00002000u;
}
inline void RoleResponse::clear_has_rankname() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void RoleResponse::clear_rankname() {
  if (rankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_->clear();
  }
  clear_has_rankname();
}
inline const ::std::string& RoleResponse::rankname() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.rankName)
  return *rankname_;
}
inline void RoleResponse::set_rankname(const ::std::string& value) {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  rankname_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleResponse.rankName)
}
inline void RoleResponse::set_rankname(const char* value) {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  rankname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleResponse.rankName)
}
inline void RoleResponse::set_rankname(const char* value, size_t size) {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  rankname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleResponse.rankName)
}
inline ::std::string* RoleResponse::mutable_rankname() {
  set_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rankname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.rankName)
  return rankname_;
}
inline ::std::string* RoleResponse::release_rankname() {
  clear_has_rankname();
  if (rankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rankname_;
    rankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleResponse::set_allocated_rankname(::std::string* rankname) {
  if (rankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rankname_;
  }
  if (rankname) {
    set_has_rankname();
    rankname_ = rankname;
  } else {
    clear_has_rankname();
    rankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleResponse.rankName)
}

// optional int32 pvpWinPvp = 47;
inline bool RoleResponse::has_pvpwinpvp() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void RoleResponse::set_has_pvpwinpvp() {
  _has_bits_[1] |= 0x00004000u;
}
inline void RoleResponse::clear_has_pvpwinpvp() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void RoleResponse::clear_pvpwinpvp() {
  pvpwinpvp_ = 0;
  clear_has_pvpwinpvp();
}
inline ::google::protobuf::int32 RoleResponse::pvpwinpvp() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.pvpWinPvp)
  return pvpwinpvp_;
}
inline void RoleResponse::set_pvpwinpvp(::google::protobuf::int32 value) {
  set_has_pvpwinpvp();
  pvpwinpvp_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.pvpWinPvp)
}

// optional int32 combatValue = 48;
inline bool RoleResponse::has_combatvalue() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void RoleResponse::set_has_combatvalue() {
  _has_bits_[1] |= 0x00008000u;
}
inline void RoleResponse::clear_has_combatvalue() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void RoleResponse::clear_combatvalue() {
  combatvalue_ = 0;
  clear_has_combatvalue();
}
inline ::google::protobuf::int32 RoleResponse::combatvalue() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.combatValue)
  return combatvalue_;
}
inline void RoleResponse::set_combatvalue(::google::protobuf::int32 value) {
  set_has_combatvalue();
  combatvalue_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.combatValue)
}

// optional .main.TeamInfo teamInfo = 49;
inline bool RoleResponse::has_teaminfo() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void RoleResponse::set_has_teaminfo() {
  _has_bits_[1] |= 0x00010000u;
}
inline void RoleResponse::clear_has_teaminfo() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void RoleResponse::clear_teaminfo() {
  if (teaminfo_ != NULL) teaminfo_->::main::TeamInfo::Clear();
  clear_has_teaminfo();
}
inline const ::main::TeamInfo& RoleResponse::teaminfo() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.teamInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance().teaminfo_;
#else
  return teaminfo_ != NULL ? *teaminfo_ : *default_instance_->teaminfo_;
#endif
}
inline ::main::TeamInfo* RoleResponse::mutable_teaminfo() {
  set_has_teaminfo();
  if (teaminfo_ == NULL) teaminfo_ = new ::main::TeamInfo;
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.teamInfo)
  return teaminfo_;
}
inline ::main::TeamInfo* RoleResponse::release_teaminfo() {
  clear_has_teaminfo();
  ::main::TeamInfo* temp = teaminfo_;
  teaminfo_ = NULL;
  return temp;
}
inline void RoleResponse::set_allocated_teaminfo(::main::TeamInfo* teaminfo) {
  delete teaminfo_;
  teaminfo_ = teaminfo;
  if (teaminfo) {
    set_has_teaminfo();
  } else {
    clear_has_teaminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleResponse.teamInfo)
}

// optional bool LoginAwardGold = 50;
inline bool RoleResponse::has_loginawardgold() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void RoleResponse::set_has_loginawardgold() {
  _has_bits_[1] |= 0x00020000u;
}
inline void RoleResponse::clear_has_loginawardgold() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void RoleResponse::clear_loginawardgold() {
  loginawardgold_ = false;
  clear_has_loginawardgold();
}
inline bool RoleResponse::loginawardgold() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.LoginAwardGold)
  return loginawardgold_;
}
inline void RoleResponse::set_loginawardgold(bool value) {
  set_has_loginawardgold();
  loginawardgold_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.LoginAwardGold)
}

// optional bool canRewardDayTask = 51;
inline bool RoleResponse::has_canrewarddaytask() const {
  return (_has_bits_[1] & 0x00040000u) != 0;
}
inline void RoleResponse::set_has_canrewarddaytask() {
  _has_bits_[1] |= 0x00040000u;
}
inline void RoleResponse::clear_has_canrewarddaytask() {
  _has_bits_[1] &= ~0x00040000u;
}
inline void RoleResponse::clear_canrewarddaytask() {
  canrewarddaytask_ = false;
  clear_has_canrewarddaytask();
}
inline bool RoleResponse::canrewarddaytask() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.canRewardDayTask)
  return canrewarddaytask_;
}
inline void RoleResponse::set_canrewarddaytask(bool value) {
  set_has_canrewarddaytask();
  canrewarddaytask_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.canRewardDayTask)
}

// optional string inviteCode = 52;
inline bool RoleResponse::has_invitecode() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void RoleResponse::set_has_invitecode() {
  _has_bits_[1] |= 0x00080000u;
}
inline void RoleResponse::clear_has_invitecode() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void RoleResponse::clear_invitecode() {
  if (invitecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_->clear();
  }
  clear_has_invitecode();
}
inline const ::std::string& RoleResponse::invitecode() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.inviteCode)
  return *invitecode_;
}
inline void RoleResponse::set_invitecode(const ::std::string& value) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleResponse.inviteCode)
}
inline void RoleResponse::set_invitecode(const char* value) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleResponse.inviteCode)
}
inline void RoleResponse::set_invitecode(const char* value, size_t size) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleResponse.inviteCode)
}
inline ::std::string* RoleResponse::mutable_invitecode() {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.inviteCode)
  return invitecode_;
}
inline ::std::string* RoleResponse::release_invitecode() {
  clear_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitecode_;
    invitecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleResponse::set_allocated_invitecode(::std::string* invitecode) {
  if (invitecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitecode_;
  }
  if (invitecode) {
    set_has_invitecode();
    invitecode_ = invitecode;
  } else {
    clear_has_invitecode();
    invitecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleResponse.inviteCode)
}

// optional string searchFriendCode = 53;
inline bool RoleResponse::has_searchfriendcode() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void RoleResponse::set_has_searchfriendcode() {
  _has_bits_[1] |= 0x00100000u;
}
inline void RoleResponse::clear_has_searchfriendcode() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void RoleResponse::clear_searchfriendcode() {
  if (searchfriendcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchfriendcode_->clear();
  }
  clear_has_searchfriendcode();
}
inline const ::std::string& RoleResponse::searchfriendcode() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.searchFriendCode)
  return *searchfriendcode_;
}
inline void RoleResponse::set_searchfriendcode(const ::std::string& value) {
  set_has_searchfriendcode();
  if (searchfriendcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchfriendcode_ = new ::std::string;
  }
  searchfriendcode_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleResponse.searchFriendCode)
}
inline void RoleResponse::set_searchfriendcode(const char* value) {
  set_has_searchfriendcode();
  if (searchfriendcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchfriendcode_ = new ::std::string;
  }
  searchfriendcode_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleResponse.searchFriendCode)
}
inline void RoleResponse::set_searchfriendcode(const char* value, size_t size) {
  set_has_searchfriendcode();
  if (searchfriendcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchfriendcode_ = new ::std::string;
  }
  searchfriendcode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleResponse.searchFriendCode)
}
inline ::std::string* RoleResponse::mutable_searchfriendcode() {
  set_has_searchfriendcode();
  if (searchfriendcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    searchfriendcode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.searchFriendCode)
  return searchfriendcode_;
}
inline ::std::string* RoleResponse::release_searchfriendcode() {
  clear_has_searchfriendcode();
  if (searchfriendcode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = searchfriendcode_;
    searchfriendcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleResponse::set_allocated_searchfriendcode(::std::string* searchfriendcode) {
  if (searchfriendcode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete searchfriendcode_;
  }
  if (searchfriendcode) {
    set_has_searchfriendcode();
    searchfriendcode_ = searchfriendcode;
  } else {
    clear_has_searchfriendcode();
    searchfriendcode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleResponse.searchFriendCode)
}

// optional int32 showVipState = 54;
inline bool RoleResponse::has_showvipstate() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void RoleResponse::set_has_showvipstate() {
  _has_bits_[1] |= 0x00200000u;
}
inline void RoleResponse::clear_has_showvipstate() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void RoleResponse::clear_showvipstate() {
  showvipstate_ = 0;
  clear_has_showvipstate();
}
inline ::google::protobuf::int32 RoleResponse::showvipstate() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.showVipState)
  return showvipstate_;
}
inline void RoleResponse::set_showvipstate(::google::protobuf::int32 value) {
  set_has_showvipstate();
  showvipstate_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.showVipState)
}

// optional int32 branchType = 55 [default = 0];
inline bool RoleResponse::has_branchtype() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void RoleResponse::set_has_branchtype() {
  _has_bits_[1] |= 0x00400000u;
}
inline void RoleResponse::clear_has_branchtype() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void RoleResponse::clear_branchtype() {
  branchtype_ = 0;
  clear_has_branchtype();
}
inline ::google::protobuf::int32 RoleResponse::branchtype() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.branchType)
  return branchtype_;
}
inline void RoleResponse::set_branchtype(::google::protobuf::int32 value) {
  set_has_branchtype();
  branchtype_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.branchType)
}

// optional bool needVerify = 56;
inline bool RoleResponse::has_needverify() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void RoleResponse::set_has_needverify() {
  _has_bits_[1] |= 0x00800000u;
}
inline void RoleResponse::clear_has_needverify() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void RoleResponse::clear_needverify() {
  needverify_ = false;
  clear_has_needverify();
}
inline bool RoleResponse::needverify() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.needVerify)
  return needverify_;
}
inline void RoleResponse::set_needverify(bool value) {
  set_has_needverify();
  needverify_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.needVerify)
}

// optional int64 fpId = 57;
inline bool RoleResponse::has_fpid() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void RoleResponse::set_has_fpid() {
  _has_bits_[1] |= 0x01000000u;
}
inline void RoleResponse::clear_has_fpid() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void RoleResponse::clear_fpid() {
  fpid_ = GOOGLE_LONGLONG(0);
  clear_has_fpid();
}
inline ::google::protobuf::int64 RoleResponse::fpid() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.fpId)
  return fpid_;
}
inline void RoleResponse::set_fpid(::google::protobuf::int64 value) {
  set_has_fpid();
  fpid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.fpId)
}

// optional int32 addGoverning = 58 [default = 0];
inline bool RoleResponse::has_addgoverning() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void RoleResponse::set_has_addgoverning() {
  _has_bits_[1] |= 0x02000000u;
}
inline void RoleResponse::clear_has_addgoverning() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void RoleResponse::clear_addgoverning() {
  addgoverning_ = 0;
  clear_has_addgoverning();
}
inline ::google::protobuf::int32 RoleResponse::addgoverning() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.addGoverning)
  return addgoverning_;
}
inline void RoleResponse::set_addgoverning(::google::protobuf::int32 value) {
  set_has_addgoverning();
  addgoverning_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.addGoverning)
}

// optional int32 lianDanGold = 59;
inline bool RoleResponse::has_liandangold() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void RoleResponse::set_has_liandangold() {
  _has_bits_[1] |= 0x04000000u;
}
inline void RoleResponse::clear_has_liandangold() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void RoleResponse::clear_liandangold() {
  liandangold_ = 0;
  clear_has_liandangold();
}
inline ::google::protobuf::int32 RoleResponse::liandangold() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.lianDanGold)
  return liandangold_;
}
inline void RoleResponse::set_liandangold(::google::protobuf::int32 value) {
  set_has_liandangold();
  liandangold_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.lianDanGold)
}

// optional int32 enterNewPvpWin = 60;
inline bool RoleResponse::has_enternewpvpwin() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void RoleResponse::set_has_enternewpvpwin() {
  _has_bits_[1] |= 0x08000000u;
}
inline void RoleResponse::clear_has_enternewpvpwin() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void RoleResponse::clear_enternewpvpwin() {
  enternewpvpwin_ = 0;
  clear_has_enternewpvpwin();
}
inline ::google::protobuf::int32 RoleResponse::enternewpvpwin() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.enterNewPvpWin)
  return enternewpvpwin_;
}
inline void RoleResponse::set_enternewpvpwin(::google::protobuf::int32 value) {
  set_has_enternewpvpwin();
  enternewpvpwin_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.enterNewPvpWin)
}

// repeated .main.TriggerInfo triggerInfo = 61;
inline int RoleResponse::triggerinfo_size() const {
  return triggerinfo_.size();
}
inline void RoleResponse::clear_triggerinfo() {
  triggerinfo_.Clear();
}
inline const ::main::TriggerInfo& RoleResponse::triggerinfo(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.triggerInfo)
  return triggerinfo_.Get(index);
}
inline ::main::TriggerInfo* RoleResponse::mutable_triggerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.triggerInfo)
  return triggerinfo_.Mutable(index);
}
inline ::main::TriggerInfo* RoleResponse::add_triggerinfo() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.triggerInfo)
  return triggerinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::TriggerInfo >&
RoleResponse::triggerinfo() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.triggerInfo)
  return triggerinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::TriggerInfo >*
RoleResponse::mutable_triggerinfo() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.triggerInfo)
  return &triggerinfo_;
}

// repeated .main.QAProto qaList = 62;
inline int RoleResponse::qalist_size() const {
  return qalist_.size();
}
inline void RoleResponse::clear_qalist() {
  qalist_.Clear();
}
inline const ::main::QAProto& RoleResponse::qalist(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.qaList)
  return qalist_.Get(index);
}
inline ::main::QAProto* RoleResponse::mutable_qalist(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.qaList)
  return qalist_.Mutable(index);
}
inline ::main::QAProto* RoleResponse::add_qalist() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.qaList)
  return qalist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::QAProto >&
RoleResponse::qalist() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.qaList)
  return qalist_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::QAProto >*
RoleResponse::mutable_qalist() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.qaList)
  return &qalist_;
}

// optional int32 haveCharged = 63;
inline bool RoleResponse::has_havecharged() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void RoleResponse::set_has_havecharged() {
  _has_bits_[1] |= 0x40000000u;
}
inline void RoleResponse::clear_has_havecharged() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void RoleResponse::clear_havecharged() {
  havecharged_ = 0;
  clear_has_havecharged();
}
inline ::google::protobuf::int32 RoleResponse::havecharged() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.haveCharged)
  return havecharged_;
}
inline void RoleResponse::set_havecharged(::google::protobuf::int32 value) {
  set_has_havecharged();
  havecharged_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.haveCharged)
}

// optional bool bestEquip = 64;
inline bool RoleResponse::has_bestequip() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
inline void RoleResponse::set_has_bestequip() {
  _has_bits_[1] |= 0x80000000u;
}
inline void RoleResponse::clear_has_bestequip() {
  _has_bits_[1] &= ~0x80000000u;
}
inline void RoleResponse::clear_bestequip() {
  bestequip_ = false;
  clear_has_bestequip();
}
inline bool RoleResponse::bestequip() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.bestEquip)
  return bestequip_;
}
inline void RoleResponse::set_bestequip(bool value) {
  set_has_bestequip();
  bestequip_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.bestEquip)
}

// optional .main.PowerGiftListResponse powerGift = 65;
inline bool RoleResponse::has_powergift() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
inline void RoleResponse::set_has_powergift() {
  _has_bits_[2] |= 0x00000001u;
}
inline void RoleResponse::clear_has_powergift() {
  _has_bits_[2] &= ~0x00000001u;
}
inline void RoleResponse::clear_powergift() {
  if (powergift_ != NULL) powergift_->::main::PowerGiftListResponse::Clear();
  clear_has_powergift();
}
inline const ::main::PowerGiftListResponse& RoleResponse::powergift() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.powerGift)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return powergift_ != NULL ? *powergift_ : *default_instance().powergift_;
#else
  return powergift_ != NULL ? *powergift_ : *default_instance_->powergift_;
#endif
}
inline ::main::PowerGiftListResponse* RoleResponse::mutable_powergift() {
  set_has_powergift();
  if (powergift_ == NULL) powergift_ = new ::main::PowerGiftListResponse;
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.powerGift)
  return powergift_;
}
inline ::main::PowerGiftListResponse* RoleResponse::release_powergift() {
  clear_has_powergift();
  ::main::PowerGiftListResponse* temp = powergift_;
  powergift_ = NULL;
  return temp;
}
inline void RoleResponse::set_allocated_powergift(::main::PowerGiftListResponse* powergift) {
  delete powergift_;
  powergift_ = powergift;
  if (powergift) {
    set_has_powergift();
  } else {
    clear_has_powergift();
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleResponse.powerGift)
}

// optional int32 powerGiftTimes = 66;
inline bool RoleResponse::has_powergifttimes() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
inline void RoleResponse::set_has_powergifttimes() {
  _has_bits_[2] |= 0x00000002u;
}
inline void RoleResponse::clear_has_powergifttimes() {
  _has_bits_[2] &= ~0x00000002u;
}
inline void RoleResponse::clear_powergifttimes() {
  powergifttimes_ = 0;
  clear_has_powergifttimes();
}
inline ::google::protobuf::int32 RoleResponse::powergifttimes() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.powerGiftTimes)
  return powergifttimes_;
}
inline void RoleResponse::set_powergifttimes(::google::protobuf::int32 value) {
  set_has_powergifttimes();
  powergifttimes_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.powerGiftTimes)
}

// repeated int32 funcNoticeList = 67;
inline int RoleResponse::funcnoticelist_size() const {
  return funcnoticelist_.size();
}
inline void RoleResponse::clear_funcnoticelist() {
  funcnoticelist_.Clear();
}
inline ::google::protobuf::int32 RoleResponse::funcnoticelist(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.funcNoticeList)
  return funcnoticelist_.Get(index);
}
inline void RoleResponse::set_funcnoticelist(int index, ::google::protobuf::int32 value) {
  funcnoticelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:main.RoleResponse.funcNoticeList)
}
inline void RoleResponse::add_funcnoticelist(::google::protobuf::int32 value) {
  funcnoticelist_.Add(value);
  // @@protoc_insertion_point(field_add:main.RoleResponse.funcNoticeList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoleResponse::funcnoticelist() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.funcNoticeList)
  return funcnoticelist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoleResponse::mutable_funcnoticelist() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.funcNoticeList)
  return &funcnoticelist_;
}

// optional int32 plotHarryCount = 68;
inline bool RoleResponse::has_plotharrycount() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
inline void RoleResponse::set_has_plotharrycount() {
  _has_bits_[2] |= 0x00000008u;
}
inline void RoleResponse::clear_has_plotharrycount() {
  _has_bits_[2] &= ~0x00000008u;
}
inline void RoleResponse::clear_plotharrycount() {
  plotharrycount_ = 0;
  clear_has_plotharrycount();
}
inline ::google::protobuf::int32 RoleResponse::plotharrycount() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.plotHarryCount)
  return plotharrycount_;
}
inline void RoleResponse::set_plotharrycount(::google::protobuf::int32 value) {
  set_has_plotharrycount();
  plotharrycount_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.plotHarryCount)
}

// optional int32 junhun = 69;
inline bool RoleResponse::has_junhun() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
inline void RoleResponse::set_has_junhun() {
  _has_bits_[2] |= 0x00000010u;
}
inline void RoleResponse::clear_has_junhun() {
  _has_bits_[2] &= ~0x00000010u;
}
inline void RoleResponse::clear_junhun() {
  junhun_ = 0;
  clear_has_junhun();
}
inline ::google::protobuf::int32 RoleResponse::junhun() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.junhun)
  return junhun_;
}
inline void RoleResponse::set_junhun(::google::protobuf::int32 value) {
  set_has_junhun();
  junhun_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.junhun)
}

// optional int32 maxPlotId = 70;
inline bool RoleResponse::has_maxplotid() const {
  return (_has_bits_[2] & 0x00000020u) != 0;
}
inline void RoleResponse::set_has_maxplotid() {
  _has_bits_[2] |= 0x00000020u;
}
inline void RoleResponse::clear_has_maxplotid() {
  _has_bits_[2] &= ~0x00000020u;
}
inline void RoleResponse::clear_maxplotid() {
  maxplotid_ = 0;
  clear_has_maxplotid();
}
inline ::google::protobuf::int32 RoleResponse::maxplotid() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.maxPlotId)
  return maxplotid_;
}
inline void RoleResponse::set_maxplotid(::google::protobuf::int32 value) {
  set_has_maxplotid();
  maxplotid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.maxPlotId)
}

// optional int32 maxBossPlotId = 71;
inline bool RoleResponse::has_maxbossplotid() const {
  return (_has_bits_[2] & 0x00000040u) != 0;
}
inline void RoleResponse::set_has_maxbossplotid() {
  _has_bits_[2] |= 0x00000040u;
}
inline void RoleResponse::clear_has_maxbossplotid() {
  _has_bits_[2] &= ~0x00000040u;
}
inline void RoleResponse::clear_maxbossplotid() {
  maxbossplotid_ = 0;
  clear_has_maxbossplotid();
}
inline ::google::protobuf::int32 RoleResponse::maxbossplotid() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.maxBossPlotId)
  return maxbossplotid_;
}
inline void RoleResponse::set_maxbossplotid(::google::protobuf::int32 value) {
  set_has_maxbossplotid();
  maxbossplotid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.maxBossPlotId)
}

// optional bool activityNotice = 72;
inline bool RoleResponse::has_activitynotice() const {
  return (_has_bits_[2] & 0x00000080u) != 0;
}
inline void RoleResponse::set_has_activitynotice() {
  _has_bits_[2] |= 0x00000080u;
}
inline void RoleResponse::clear_has_activitynotice() {
  _has_bits_[2] &= ~0x00000080u;
}
inline void RoleResponse::clear_activitynotice() {
  activitynotice_ = false;
  clear_has_activitynotice();
}
inline bool RoleResponse::activitynotice() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.activityNotice)
  return activitynotice_;
}
inline void RoleResponse::set_activitynotice(bool value) {
  set_has_activitynotice();
  activitynotice_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.activityNotice)
}

// repeated .main.BossPlotCountProto bossPlotCount = 73;
inline int RoleResponse::bossplotcount_size() const {
  return bossplotcount_.size();
}
inline void RoleResponse::clear_bossplotcount() {
  bossplotcount_.Clear();
}
inline const ::main::BossPlotCountProto& RoleResponse::bossplotcount(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.bossPlotCount)
  return bossplotcount_.Get(index);
}
inline ::main::BossPlotCountProto* RoleResponse::mutable_bossplotcount(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleResponse.bossPlotCount)
  return bossplotcount_.Mutable(index);
}
inline ::main::BossPlotCountProto* RoleResponse::add_bossplotcount() {
  // @@protoc_insertion_point(field_add:main.RoleResponse.bossPlotCount)
  return bossplotcount_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::BossPlotCountProto >&
RoleResponse::bossplotcount() const {
  // @@protoc_insertion_point(field_list:main.RoleResponse.bossPlotCount)
  return bossplotcount_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::BossPlotCountProto >*
RoleResponse::mutable_bossplotcount() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleResponse.bossPlotCount)
  return &bossplotcount_;
}

// optional int32 gouyu = 74;
inline bool RoleResponse::has_gouyu() const {
  return (_has_bits_[2] & 0x00000200u) != 0;
}
inline void RoleResponse::set_has_gouyu() {
  _has_bits_[2] |= 0x00000200u;
}
inline void RoleResponse::clear_has_gouyu() {
  _has_bits_[2] &= ~0x00000200u;
}
inline void RoleResponse::clear_gouyu() {
  gouyu_ = 0;
  clear_has_gouyu();
}
inline ::google::protobuf::int32 RoleResponse::gouyu() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.gouyu)
  return gouyu_;
}
inline void RoleResponse::set_gouyu(::google::protobuf::int32 value) {
  set_has_gouyu();
  gouyu_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.gouyu)
}

// optional bool xiyuState = 75;
inline bool RoleResponse::has_xiyustate() const {
  return (_has_bits_[2] & 0x00000400u) != 0;
}
inline void RoleResponse::set_has_xiyustate() {
  _has_bits_[2] |= 0x00000400u;
}
inline void RoleResponse::clear_has_xiyustate() {
  _has_bits_[2] &= ~0x00000400u;
}
inline void RoleResponse::clear_xiyustate() {
  xiyustate_ = false;
  clear_has_xiyustate();
}
inline bool RoleResponse::xiyustate() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.xiyuState)
  return xiyustate_;
}
inline void RoleResponse::set_xiyustate(bool value) {
  set_has_xiyustate();
  xiyustate_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.xiyuState)
}

// optional int32 xiyuTime = 76;
inline bool RoleResponse::has_xiyutime() const {
  return (_has_bits_[2] & 0x00000800u) != 0;
}
inline void RoleResponse::set_has_xiyutime() {
  _has_bits_[2] |= 0x00000800u;
}
inline void RoleResponse::clear_has_xiyutime() {
  _has_bits_[2] &= ~0x00000800u;
}
inline void RoleResponse::clear_xiyutime() {
  xiyutime_ = 0;
  clear_has_xiyutime();
}
inline ::google::protobuf::int32 RoleResponse::xiyutime() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.xiyuTime)
  return xiyutime_;
}
inline void RoleResponse::set_xiyutime(::google::protobuf::int32 value) {
  set_has_xiyutime();
  xiyutime_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.xiyuTime)
}

// optional int32 arenaCoin = 77;
inline bool RoleResponse::has_arenacoin() const {
  return (_has_bits_[2] & 0x00001000u) != 0;
}
inline void RoleResponse::set_has_arenacoin() {
  _has_bits_[2] |= 0x00001000u;
}
inline void RoleResponse::clear_has_arenacoin() {
  _has_bits_[2] &= ~0x00001000u;
}
inline void RoleResponse::clear_arenacoin() {
  arenacoin_ = 0;
  clear_has_arenacoin();
}
inline ::google::protobuf::int32 RoleResponse::arenacoin() const {
  // @@protoc_insertion_point(field_get:main.RoleResponse.arenaCoin)
  return arenacoin_;
}
inline void RoleResponse::set_arenacoin(::google::protobuf::int32 value) {
  set_has_arenacoin();
  arenacoin_ = value;
  // @@protoc_insertion_point(field_set:main.RoleResponse.arenaCoin)
}

// -------------------------------------------------------------------

// updateRoleResponse

// optional int32 exp = 1;
inline bool updateRoleResponse::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void updateRoleResponse::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void updateRoleResponse::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void updateRoleResponse::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 updateRoleResponse::exp() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.exp)
  return exp_;
}
inline void updateRoleResponse::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.exp)
}

// optional int32 level = 2;
inline bool updateRoleResponse::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void updateRoleResponse::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void updateRoleResponse::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void updateRoleResponse::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 updateRoleResponse::level() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.level)
  return level_;
}
inline void updateRoleResponse::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.level)
}

// optional int32 coins = 3;
inline bool updateRoleResponse::has_coins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void updateRoleResponse::set_has_coins() {
  _has_bits_[0] |= 0x00000004u;
}
inline void updateRoleResponse::clear_has_coins() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void updateRoleResponse::clear_coins() {
  coins_ = 0;
  clear_has_coins();
}
inline ::google::protobuf::int32 updateRoleResponse::coins() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.coins)
  return coins_;
}
inline void updateRoleResponse::set_coins(::google::protobuf::int32 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.coins)
}

// optional int32 gold = 4;
inline bool updateRoleResponse::has_gold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void updateRoleResponse::set_has_gold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void updateRoleResponse::clear_has_gold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void updateRoleResponse::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 updateRoleResponse::gold() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.gold)
  return gold_;
}
inline void updateRoleResponse::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.gold)
}

// optional int32 power = 5;
inline bool updateRoleResponse::has_power() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void updateRoleResponse::set_has_power() {
  _has_bits_[0] |= 0x00000010u;
}
inline void updateRoleResponse::clear_has_power() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void updateRoleResponse::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 updateRoleResponse::power() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.power)
  return power_;
}
inline void updateRoleResponse::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.power)
}

// optional int32 pvpPower = 6;
inline bool updateRoleResponse::has_pvppower() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void updateRoleResponse::set_has_pvppower() {
  _has_bits_[0] |= 0x00000020u;
}
inline void updateRoleResponse::clear_has_pvppower() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void updateRoleResponse::clear_pvppower() {
  pvppower_ = 0;
  clear_has_pvppower();
}
inline ::google::protobuf::int32 updateRoleResponse::pvppower() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.pvpPower)
  return pvppower_;
}
inline void updateRoleResponse::set_pvppower(::google::protobuf::int32 value) {
  set_has_pvppower();
  pvppower_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.pvpPower)
}

// optional int32 pveLeftTime = 7;
inline bool updateRoleResponse::has_pvelefttime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void updateRoleResponse::set_has_pvelefttime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void updateRoleResponse::clear_has_pvelefttime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void updateRoleResponse::clear_pvelefttime() {
  pvelefttime_ = 0;
  clear_has_pvelefttime();
}
inline ::google::protobuf::int32 updateRoleResponse::pvelefttime() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.pveLeftTime)
  return pvelefttime_;
}
inline void updateRoleResponse::set_pvelefttime(::google::protobuf::int32 value) {
  set_has_pvelefttime();
  pvelefttime_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.pveLeftTime)
}

// optional int32 pveCircleTime = 8;
inline bool updateRoleResponse::has_pvecircletime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void updateRoleResponse::set_has_pvecircletime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void updateRoleResponse::clear_has_pvecircletime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void updateRoleResponse::clear_pvecircletime() {
  pvecircletime_ = 0;
  clear_has_pvecircletime();
}
inline ::google::protobuf::int32 updateRoleResponse::pvecircletime() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.pveCircleTime)
  return pvecircletime_;
}
inline void updateRoleResponse::set_pvecircletime(::google::protobuf::int32 value) {
  set_has_pvecircletime();
  pvecircletime_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.pveCircleTime)
}

// optional int32 pveRecoverLeftCounter = 9;
inline bool updateRoleResponse::has_pverecoverleftcounter() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void updateRoleResponse::set_has_pverecoverleftcounter() {
  _has_bits_[0] |= 0x00000100u;
}
inline void updateRoleResponse::clear_has_pverecoverleftcounter() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void updateRoleResponse::clear_pverecoverleftcounter() {
  pverecoverleftcounter_ = 0;
  clear_has_pverecoverleftcounter();
}
inline ::google::protobuf::int32 updateRoleResponse::pverecoverleftcounter() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.pveRecoverLeftCounter)
  return pverecoverleftcounter_;
}
inline void updateRoleResponse::set_pverecoverleftcounter(::google::protobuf::int32 value) {
  set_has_pverecoverleftcounter();
  pverecoverleftcounter_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.pveRecoverLeftCounter)
}

// optional int32 pvpLeftTime = 10;
inline bool updateRoleResponse::has_pvplefttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void updateRoleResponse::set_has_pvplefttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void updateRoleResponse::clear_has_pvplefttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void updateRoleResponse::clear_pvplefttime() {
  pvplefttime_ = 0;
  clear_has_pvplefttime();
}
inline ::google::protobuf::int32 updateRoleResponse::pvplefttime() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.pvpLeftTime)
  return pvplefttime_;
}
inline void updateRoleResponse::set_pvplefttime(::google::protobuf::int32 value) {
  set_has_pvplefttime();
  pvplefttime_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.pvpLeftTime)
}

// optional int32 pvpCircleTime = 11;
inline bool updateRoleResponse::has_pvpcircletime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void updateRoleResponse::set_has_pvpcircletime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void updateRoleResponse::clear_has_pvpcircletime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void updateRoleResponse::clear_pvpcircletime() {
  pvpcircletime_ = 0;
  clear_has_pvpcircletime();
}
inline ::google::protobuf::int32 updateRoleResponse::pvpcircletime() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.pvpCircleTime)
  return pvpcircletime_;
}
inline void updateRoleResponse::set_pvpcircletime(::google::protobuf::int32 value) {
  set_has_pvpcircletime();
  pvpcircletime_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.pvpCircleTime)
}

// optional int32 pvpRecoverLeftCounter = 12;
inline bool updateRoleResponse::has_pvprecoverleftcounter() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void updateRoleResponse::set_has_pvprecoverleftcounter() {
  _has_bits_[0] |= 0x00000800u;
}
inline void updateRoleResponse::clear_has_pvprecoverleftcounter() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void updateRoleResponse::clear_pvprecoverleftcounter() {
  pvprecoverleftcounter_ = 0;
  clear_has_pvprecoverleftcounter();
}
inline ::google::protobuf::int32 updateRoleResponse::pvprecoverleftcounter() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.pvpRecoverLeftCounter)
  return pvprecoverleftcounter_;
}
inline void updateRoleResponse::set_pvprecoverleftcounter(::google::protobuf::int32 value) {
  set_has_pvprecoverleftcounter();
  pvprecoverleftcounter_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.pvpRecoverLeftCounter)
}

// optional int32 meritorious = 13;
inline bool updateRoleResponse::has_meritorious() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void updateRoleResponse::set_has_meritorious() {
  _has_bits_[0] |= 0x00001000u;
}
inline void updateRoleResponse::clear_has_meritorious() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void updateRoleResponse::clear_meritorious() {
  meritorious_ = 0;
  clear_has_meritorious();
}
inline ::google::protobuf::int32 updateRoleResponse::meritorious() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.meritorious)
  return meritorious_;
}
inline void updateRoleResponse::set_meritorious(::google::protobuf::int32 value) {
  set_has_meritorious();
  meritorious_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.meritorious)
}

// optional int32 combatValue = 14;
inline bool updateRoleResponse::has_combatvalue() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void updateRoleResponse::set_has_combatvalue() {
  _has_bits_[0] |= 0x00002000u;
}
inline void updateRoleResponse::clear_has_combatvalue() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void updateRoleResponse::clear_combatvalue() {
  combatvalue_ = 0;
  clear_has_combatvalue();
}
inline ::google::protobuf::int32 updateRoleResponse::combatvalue() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.combatValue)
  return combatvalue_;
}
inline void updateRoleResponse::set_combatvalue(::google::protobuf::int32 value) {
  set_has_combatvalue();
  combatvalue_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.combatValue)
}

// optional bool canRewardDayTask = 15;
inline bool updateRoleResponse::has_canrewarddaytask() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void updateRoleResponse::set_has_canrewarddaytask() {
  _has_bits_[0] |= 0x00004000u;
}
inline void updateRoleResponse::clear_has_canrewarddaytask() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void updateRoleResponse::clear_canrewarddaytask() {
  canrewarddaytask_ = false;
  clear_has_canrewarddaytask();
}
inline bool updateRoleResponse::canrewarddaytask() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.canRewardDayTask)
  return canrewarddaytask_;
}
inline void updateRoleResponse::set_canrewarddaytask(bool value) {
  set_has_canrewarddaytask();
  canrewarddaytask_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.canRewardDayTask)
}

// optional bool bestEquip = 16;
inline bool updateRoleResponse::has_bestequip() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void updateRoleResponse::set_has_bestequip() {
  _has_bits_[0] |= 0x00008000u;
}
inline void updateRoleResponse::clear_has_bestequip() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void updateRoleResponse::clear_bestequip() {
  bestequip_ = false;
  clear_has_bestequip();
}
inline bool updateRoleResponse::bestequip() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.bestEquip)
  return bestequip_;
}
inline void updateRoleResponse::set_bestequip(bool value) {
  set_has_bestequip();
  bestequip_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.bestEquip)
}

// optional int32 junhun = 17;
inline bool updateRoleResponse::has_junhun() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void updateRoleResponse::set_has_junhun() {
  _has_bits_[0] |= 0x00010000u;
}
inline void updateRoleResponse::clear_has_junhun() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void updateRoleResponse::clear_junhun() {
  junhun_ = 0;
  clear_has_junhun();
}
inline ::google::protobuf::int32 updateRoleResponse::junhun() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.junhun)
  return junhun_;
}
inline void updateRoleResponse::set_junhun(::google::protobuf::int32 value) {
  set_has_junhun();
  junhun_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.junhun)
}

// optional int32 pvpTopScore = 18;
inline bool updateRoleResponse::has_pvptopscore() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void updateRoleResponse::set_has_pvptopscore() {
  _has_bits_[0] |= 0x00020000u;
}
inline void updateRoleResponse::clear_has_pvptopscore() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void updateRoleResponse::clear_pvptopscore() {
  pvptopscore_ = 0;
  clear_has_pvptopscore();
}
inline ::google::protobuf::int32 updateRoleResponse::pvptopscore() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.pvpTopScore)
  return pvptopscore_;
}
inline void updateRoleResponse::set_pvptopscore(::google::protobuf::int32 value) {
  set_has_pvptopscore();
  pvptopscore_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.pvpTopScore)
}

// optional int32 plotHarryCount = 19;
inline bool updateRoleResponse::has_plotharrycount() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void updateRoleResponse::set_has_plotharrycount() {
  _has_bits_[0] |= 0x00040000u;
}
inline void updateRoleResponse::clear_has_plotharrycount() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void updateRoleResponse::clear_plotharrycount() {
  plotharrycount_ = 0;
  clear_has_plotharrycount();
}
inline ::google::protobuf::int32 updateRoleResponse::plotharrycount() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.plotHarryCount)
  return plotharrycount_;
}
inline void updateRoleResponse::set_plotharrycount(::google::protobuf::int32 value) {
  set_has_plotharrycount();
  plotharrycount_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.plotHarryCount)
}

// optional int32 gouyu = 20;
inline bool updateRoleResponse::has_gouyu() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void updateRoleResponse::set_has_gouyu() {
  _has_bits_[0] |= 0x00080000u;
}
inline void updateRoleResponse::clear_has_gouyu() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void updateRoleResponse::clear_gouyu() {
  gouyu_ = 0;
  clear_has_gouyu();
}
inline ::google::protobuf::int32 updateRoleResponse::gouyu() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.gouyu)
  return gouyu_;
}
inline void updateRoleResponse::set_gouyu(::google::protobuf::int32 value) {
  set_has_gouyu();
  gouyu_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.gouyu)
}

// optional int32 arenaCoin = 21;
inline bool updateRoleResponse::has_arenacoin() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void updateRoleResponse::set_has_arenacoin() {
  _has_bits_[0] |= 0x00100000u;
}
inline void updateRoleResponse::clear_has_arenacoin() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void updateRoleResponse::clear_arenacoin() {
  arenacoin_ = 0;
  clear_has_arenacoin();
}
inline ::google::protobuf::int32 updateRoleResponse::arenacoin() const {
  // @@protoc_insertion_point(field_get:main.updateRoleResponse.arenaCoin)
  return arenacoin_;
}
inline void updateRoleResponse::set_arenacoin(::google::protobuf::int32 value) {
  set_has_arenacoin();
  arenacoin_ = value;
  // @@protoc_insertion_point(field_set:main.updateRoleResponse.arenaCoin)
}

// -------------------------------------------------------------------

// TriggerInfo

// optional int32 triggerType = 1;
inline bool TriggerInfo::has_triggertype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TriggerInfo::set_has_triggertype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TriggerInfo::clear_has_triggertype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TriggerInfo::clear_triggertype() {
  triggertype_ = 0;
  clear_has_triggertype();
}
inline ::google::protobuf::int32 TriggerInfo::triggertype() const {
  // @@protoc_insertion_point(field_get:main.TriggerInfo.triggerType)
  return triggertype_;
}
inline void TriggerInfo::set_triggertype(::google::protobuf::int32 value) {
  set_has_triggertype();
  triggertype_ = value;
  // @@protoc_insertion_point(field_set:main.TriggerInfo.triggerType)
}

// optional string triggerName = 2;
inline bool TriggerInfo::has_triggername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TriggerInfo::set_has_triggername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TriggerInfo::clear_has_triggername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TriggerInfo::clear_triggername() {
  if (triggername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    triggername_->clear();
  }
  clear_has_triggername();
}
inline const ::std::string& TriggerInfo::triggername() const {
  // @@protoc_insertion_point(field_get:main.TriggerInfo.triggerName)
  return *triggername_;
}
inline void TriggerInfo::set_triggername(const ::std::string& value) {
  set_has_triggername();
  if (triggername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    triggername_ = new ::std::string;
  }
  triggername_->assign(value);
  // @@protoc_insertion_point(field_set:main.TriggerInfo.triggerName)
}
inline void TriggerInfo::set_triggername(const char* value) {
  set_has_triggername();
  if (triggername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    triggername_ = new ::std::string;
  }
  triggername_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.TriggerInfo.triggerName)
}
inline void TriggerInfo::set_triggername(const char* value, size_t size) {
  set_has_triggername();
  if (triggername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    triggername_ = new ::std::string;
  }
  triggername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.TriggerInfo.triggerName)
}
inline ::std::string* TriggerInfo::mutable_triggername() {
  set_has_triggername();
  if (triggername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    triggername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.TriggerInfo.triggerName)
  return triggername_;
}
inline ::std::string* TriggerInfo::release_triggername() {
  clear_has_triggername();
  if (triggername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = triggername_;
    triggername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TriggerInfo::set_allocated_triggername(::std::string* triggername) {
  if (triggername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete triggername_;
  }
  if (triggername) {
    set_has_triggername();
    triggername_ = triggername;
  } else {
    clear_has_triggername();
    triggername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.TriggerInfo.triggerName)
}

// optional int32 triggerValue = 3;
inline bool TriggerInfo::has_triggervalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TriggerInfo::set_has_triggervalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TriggerInfo::clear_has_triggervalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TriggerInfo::clear_triggervalue() {
  triggervalue_ = 0;
  clear_has_triggervalue();
}
inline ::google::protobuf::int32 TriggerInfo::triggervalue() const {
  // @@protoc_insertion_point(field_get:main.TriggerInfo.triggerValue)
  return triggervalue_;
}
inline void TriggerInfo::set_triggervalue(::google::protobuf::int32 value) {
  set_has_triggervalue();
  triggervalue_ = value;
  // @@protoc_insertion_point(field_set:main.TriggerInfo.triggerValue)
}

// optional int32 id = 4;
inline bool TriggerInfo::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TriggerInfo::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TriggerInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TriggerInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 TriggerInfo::id() const {
  // @@protoc_insertion_point(field_get:main.TriggerInfo.id)
  return id_;
}
inline void TriggerInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:main.TriggerInfo.id)
}

// -------------------------------------------------------------------

// updateRolePowerRequest

// -------------------------------------------------------------------

// updateRolePowerResponse

// optional int32 power = 1;
inline bool updateRolePowerResponse::has_power() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void updateRolePowerResponse::set_has_power() {
  _has_bits_[0] |= 0x00000001u;
}
inline void updateRolePowerResponse::clear_has_power() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void updateRolePowerResponse::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 updateRolePowerResponse::power() const {
  // @@protoc_insertion_point(field_get:main.updateRolePowerResponse.power)
  return power_;
}
inline void updateRolePowerResponse::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:main.updateRolePowerResponse.power)
}

// optional int32 pvpPower = 2;
inline bool updateRolePowerResponse::has_pvppower() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void updateRolePowerResponse::set_has_pvppower() {
  _has_bits_[0] |= 0x00000002u;
}
inline void updateRolePowerResponse::clear_has_pvppower() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void updateRolePowerResponse::clear_pvppower() {
  pvppower_ = 0;
  clear_has_pvppower();
}
inline ::google::protobuf::int32 updateRolePowerResponse::pvppower() const {
  // @@protoc_insertion_point(field_get:main.updateRolePowerResponse.pvpPower)
  return pvppower_;
}
inline void updateRolePowerResponse::set_pvppower(::google::protobuf::int32 value) {
  set_has_pvppower();
  pvppower_ = value;
  // @@protoc_insertion_point(field_set:main.updateRolePowerResponse.pvpPower)
}

// optional int32 pveCircleTime = 3;
inline bool updateRolePowerResponse::has_pvecircletime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void updateRolePowerResponse::set_has_pvecircletime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void updateRolePowerResponse::clear_has_pvecircletime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void updateRolePowerResponse::clear_pvecircletime() {
  pvecircletime_ = 0;
  clear_has_pvecircletime();
}
inline ::google::protobuf::int32 updateRolePowerResponse::pvecircletime() const {
  // @@protoc_insertion_point(field_get:main.updateRolePowerResponse.pveCircleTime)
  return pvecircletime_;
}
inline void updateRolePowerResponse::set_pvecircletime(::google::protobuf::int32 value) {
  set_has_pvecircletime();
  pvecircletime_ = value;
  // @@protoc_insertion_point(field_set:main.updateRolePowerResponse.pveCircleTime)
}

// optional int32 pveLeftTime = 4;
inline bool updateRolePowerResponse::has_pvelefttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void updateRolePowerResponse::set_has_pvelefttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void updateRolePowerResponse::clear_has_pvelefttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void updateRolePowerResponse::clear_pvelefttime() {
  pvelefttime_ = 0;
  clear_has_pvelefttime();
}
inline ::google::protobuf::int32 updateRolePowerResponse::pvelefttime() const {
  // @@protoc_insertion_point(field_get:main.updateRolePowerResponse.pveLeftTime)
  return pvelefttime_;
}
inline void updateRolePowerResponse::set_pvelefttime(::google::protobuf::int32 value) {
  set_has_pvelefttime();
  pvelefttime_ = value;
  // @@protoc_insertion_point(field_set:main.updateRolePowerResponse.pveLeftTime)
}

// optional int32 pvpCircleTime = 5;
inline bool updateRolePowerResponse::has_pvpcircletime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void updateRolePowerResponse::set_has_pvpcircletime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void updateRolePowerResponse::clear_has_pvpcircletime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void updateRolePowerResponse::clear_pvpcircletime() {
  pvpcircletime_ = 0;
  clear_has_pvpcircletime();
}
inline ::google::protobuf::int32 updateRolePowerResponse::pvpcircletime() const {
  // @@protoc_insertion_point(field_get:main.updateRolePowerResponse.pvpCircleTime)
  return pvpcircletime_;
}
inline void updateRolePowerResponse::set_pvpcircletime(::google::protobuf::int32 value) {
  set_has_pvpcircletime();
  pvpcircletime_ = value;
  // @@protoc_insertion_point(field_set:main.updateRolePowerResponse.pvpCircleTime)
}

// optional int32 pvpLeftTime = 6;
inline bool updateRolePowerResponse::has_pvplefttime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void updateRolePowerResponse::set_has_pvplefttime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void updateRolePowerResponse::clear_has_pvplefttime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void updateRolePowerResponse::clear_pvplefttime() {
  pvplefttime_ = 0;
  clear_has_pvplefttime();
}
inline ::google::protobuf::int32 updateRolePowerResponse::pvplefttime() const {
  // @@protoc_insertion_point(field_get:main.updateRolePowerResponse.pvpLeftTime)
  return pvplefttime_;
}
inline void updateRolePowerResponse::set_pvplefttime(::google::protobuf::int32 value) {
  set_has_pvplefttime();
  pvplefttime_ = value;
  // @@protoc_insertion_point(field_set:main.updateRolePowerResponse.pvpLeftTime)
}

// -------------------------------------------------------------------

// BaseBagInfo

// repeated .main.OfficerCardItemProto baseOfficerCardInfoProto = 1;
inline int BaseBagInfo::baseofficercardinfoproto_size() const {
  return baseofficercardinfoproto_.size();
}
inline void BaseBagInfo::clear_baseofficercardinfoproto() {
  baseofficercardinfoproto_.Clear();
}
inline const ::main::OfficerCardItemProto& BaseBagInfo::baseofficercardinfoproto(int index) const {
  // @@protoc_insertion_point(field_get:main.BaseBagInfo.baseOfficerCardInfoProto)
  return baseofficercardinfoproto_.Get(index);
}
inline ::main::OfficerCardItemProto* BaseBagInfo::mutable_baseofficercardinfoproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.BaseBagInfo.baseOfficerCardInfoProto)
  return baseofficercardinfoproto_.Mutable(index);
}
inline ::main::OfficerCardItemProto* BaseBagInfo::add_baseofficercardinfoproto() {
  // @@protoc_insertion_point(field_add:main.BaseBagInfo.baseOfficerCardInfoProto)
  return baseofficercardinfoproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::OfficerCardItemProto >&
BaseBagInfo::baseofficercardinfoproto() const {
  // @@protoc_insertion_point(field_list:main.BaseBagInfo.baseOfficerCardInfoProto)
  return baseofficercardinfoproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::OfficerCardItemProto >*
BaseBagInfo::mutable_baseofficercardinfoproto() {
  // @@protoc_insertion_point(field_mutable_list:main.BaseBagInfo.baseOfficerCardInfoProto)
  return &baseofficercardinfoproto_;
}

// repeated .main.EquipmentCardItemProto baseEquipmentCardItemProto = 2;
inline int BaseBagInfo::baseequipmentcarditemproto_size() const {
  return baseequipmentcarditemproto_.size();
}
inline void BaseBagInfo::clear_baseequipmentcarditemproto() {
  baseequipmentcarditemproto_.Clear();
}
inline const ::main::EquipmentCardItemProto& BaseBagInfo::baseequipmentcarditemproto(int index) const {
  // @@protoc_insertion_point(field_get:main.BaseBagInfo.baseEquipmentCardItemProto)
  return baseequipmentcarditemproto_.Get(index);
}
inline ::main::EquipmentCardItemProto* BaseBagInfo::mutable_baseequipmentcarditemproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.BaseBagInfo.baseEquipmentCardItemProto)
  return baseequipmentcarditemproto_.Mutable(index);
}
inline ::main::EquipmentCardItemProto* BaseBagInfo::add_baseequipmentcarditemproto() {
  // @@protoc_insertion_point(field_add:main.BaseBagInfo.baseEquipmentCardItemProto)
  return baseequipmentcarditemproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::EquipmentCardItemProto >&
BaseBagInfo::baseequipmentcarditemproto() const {
  // @@protoc_insertion_point(field_list:main.BaseBagInfo.baseEquipmentCardItemProto)
  return baseequipmentcarditemproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::EquipmentCardItemProto >*
BaseBagInfo::mutable_baseequipmentcarditemproto() {
  // @@protoc_insertion_point(field_mutable_list:main.BaseBagInfo.baseEquipmentCardItemProto)
  return &baseequipmentcarditemproto_;
}

// repeated .main.SoldierCardItemProto baseSoldierCardItemProto = 3;
inline int BaseBagInfo::basesoldiercarditemproto_size() const {
  return basesoldiercarditemproto_.size();
}
inline void BaseBagInfo::clear_basesoldiercarditemproto() {
  basesoldiercarditemproto_.Clear();
}
inline const ::main::SoldierCardItemProto& BaseBagInfo::basesoldiercarditemproto(int index) const {
  // @@protoc_insertion_point(field_get:main.BaseBagInfo.baseSoldierCardItemProto)
  return basesoldiercarditemproto_.Get(index);
}
inline ::main::SoldierCardItemProto* BaseBagInfo::mutable_basesoldiercarditemproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.BaseBagInfo.baseSoldierCardItemProto)
  return basesoldiercarditemproto_.Mutable(index);
}
inline ::main::SoldierCardItemProto* BaseBagInfo::add_basesoldiercarditemproto() {
  // @@protoc_insertion_point(field_add:main.BaseBagInfo.baseSoldierCardItemProto)
  return basesoldiercarditemproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::SoldierCardItemProto >&
BaseBagInfo::basesoldiercarditemproto() const {
  // @@protoc_insertion_point(field_list:main.BaseBagInfo.baseSoldierCardItemProto)
  return basesoldiercarditemproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::SoldierCardItemProto >*
BaseBagInfo::mutable_basesoldiercarditemproto() {
  // @@protoc_insertion_point(field_mutable_list:main.BaseBagInfo.baseSoldierCardItemProto)
  return &basesoldiercarditemproto_;
}

// repeated .main.PropsCardItemProto basePropsCardItemProto = 4;
inline int BaseBagInfo::basepropscarditemproto_size() const {
  return basepropscarditemproto_.size();
}
inline void BaseBagInfo::clear_basepropscarditemproto() {
  basepropscarditemproto_.Clear();
}
inline const ::main::PropsCardItemProto& BaseBagInfo::basepropscarditemproto(int index) const {
  // @@protoc_insertion_point(field_get:main.BaseBagInfo.basePropsCardItemProto)
  return basepropscarditemproto_.Get(index);
}
inline ::main::PropsCardItemProto* BaseBagInfo::mutable_basepropscarditemproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.BaseBagInfo.basePropsCardItemProto)
  return basepropscarditemproto_.Mutable(index);
}
inline ::main::PropsCardItemProto* BaseBagInfo::add_basepropscarditemproto() {
  // @@protoc_insertion_point(field_add:main.BaseBagInfo.basePropsCardItemProto)
  return basepropscarditemproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::PropsCardItemProto >&
BaseBagInfo::basepropscarditemproto() const {
  // @@protoc_insertion_point(field_list:main.BaseBagInfo.basePropsCardItemProto)
  return basepropscarditemproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::PropsCardItemProto >*
BaseBagInfo::mutable_basepropscarditemproto() {
  // @@protoc_insertion_point(field_mutable_list:main.BaseBagInfo.basePropsCardItemProto)
  return &basepropscarditemproto_;
}

// repeated .main.OfficerFragmentCardItemProto baseOfficerFragmentCardItemProto = 5;
inline int BaseBagInfo::baseofficerfragmentcarditemproto_size() const {
  return baseofficerfragmentcarditemproto_.size();
}
inline void BaseBagInfo::clear_baseofficerfragmentcarditemproto() {
  baseofficerfragmentcarditemproto_.Clear();
}
inline const ::main::OfficerFragmentCardItemProto& BaseBagInfo::baseofficerfragmentcarditemproto(int index) const {
  // @@protoc_insertion_point(field_get:main.BaseBagInfo.baseOfficerFragmentCardItemProto)
  return baseofficerfragmentcarditemproto_.Get(index);
}
inline ::main::OfficerFragmentCardItemProto* BaseBagInfo::mutable_baseofficerfragmentcarditemproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.BaseBagInfo.baseOfficerFragmentCardItemProto)
  return baseofficerfragmentcarditemproto_.Mutable(index);
}
inline ::main::OfficerFragmentCardItemProto* BaseBagInfo::add_baseofficerfragmentcarditemproto() {
  // @@protoc_insertion_point(field_add:main.BaseBagInfo.baseOfficerFragmentCardItemProto)
  return baseofficerfragmentcarditemproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::OfficerFragmentCardItemProto >&
BaseBagInfo::baseofficerfragmentcarditemproto() const {
  // @@protoc_insertion_point(field_list:main.BaseBagInfo.baseOfficerFragmentCardItemProto)
  return baseofficerfragmentcarditemproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::OfficerFragmentCardItemProto >*
BaseBagInfo::mutable_baseofficerfragmentcarditemproto() {
  // @@protoc_insertion_point(field_mutable_list:main.BaseBagInfo.baseOfficerFragmentCardItemProto)
  return &baseofficerfragmentcarditemproto_;
}

// repeated .main.ConsumableCardItemProto baseConsumableCardItemProto = 6;
inline int BaseBagInfo::baseconsumablecarditemproto_size() const {
  return baseconsumablecarditemproto_.size();
}
inline void BaseBagInfo::clear_baseconsumablecarditemproto() {
  baseconsumablecarditemproto_.Clear();
}
inline const ::main::ConsumableCardItemProto& BaseBagInfo::baseconsumablecarditemproto(int index) const {
  // @@protoc_insertion_point(field_get:main.BaseBagInfo.baseConsumableCardItemProto)
  return baseconsumablecarditemproto_.Get(index);
}
inline ::main::ConsumableCardItemProto* BaseBagInfo::mutable_baseconsumablecarditemproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.BaseBagInfo.baseConsumableCardItemProto)
  return baseconsumablecarditemproto_.Mutable(index);
}
inline ::main::ConsumableCardItemProto* BaseBagInfo::add_baseconsumablecarditemproto() {
  // @@protoc_insertion_point(field_add:main.BaseBagInfo.baseConsumableCardItemProto)
  return baseconsumablecarditemproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::ConsumableCardItemProto >&
BaseBagInfo::baseconsumablecarditemproto() const {
  // @@protoc_insertion_point(field_list:main.BaseBagInfo.baseConsumableCardItemProto)
  return baseconsumablecarditemproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::ConsumableCardItemProto >*
BaseBagInfo::mutable_baseconsumablecarditemproto() {
  // @@protoc_insertion_point(field_mutable_list:main.BaseBagInfo.baseConsumableCardItemProto)
  return &baseconsumablecarditemproto_;
}

// repeated .main.MaterialItemProto materialItemProto = 7;
inline int BaseBagInfo::materialitemproto_size() const {
  return materialitemproto_.size();
}
inline void BaseBagInfo::clear_materialitemproto() {
  materialitemproto_.Clear();
}
inline const ::main::MaterialItemProto& BaseBagInfo::materialitemproto(int index) const {
  // @@protoc_insertion_point(field_get:main.BaseBagInfo.materialItemProto)
  return materialitemproto_.Get(index);
}
inline ::main::MaterialItemProto* BaseBagInfo::mutable_materialitemproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.BaseBagInfo.materialItemProto)
  return materialitemproto_.Mutable(index);
}
inline ::main::MaterialItemProto* BaseBagInfo::add_materialitemproto() {
  // @@protoc_insertion_point(field_add:main.BaseBagInfo.materialItemProto)
  return materialitemproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::MaterialItemProto >&
BaseBagInfo::materialitemproto() const {
  // @@protoc_insertion_point(field_list:main.BaseBagInfo.materialItemProto)
  return materialitemproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::MaterialItemProto >*
BaseBagInfo::mutable_materialitemproto() {
  // @@protoc_insertion_point(field_mutable_list:main.BaseBagInfo.materialItemProto)
  return &materialitemproto_;
}

// -------------------------------------------------------------------

// TeamInfo

// repeated .main.TeamInfoItem teamInfoItem = 1;
inline int TeamInfo::teaminfoitem_size() const {
  return teaminfoitem_.size();
}
inline void TeamInfo::clear_teaminfoitem() {
  teaminfoitem_.Clear();
}
inline const ::main::TeamInfoItem& TeamInfo::teaminfoitem(int index) const {
  // @@protoc_insertion_point(field_get:main.TeamInfo.teamInfoItem)
  return teaminfoitem_.Get(index);
}
inline ::main::TeamInfoItem* TeamInfo::mutable_teaminfoitem(int index) {
  // @@protoc_insertion_point(field_mutable:main.TeamInfo.teamInfoItem)
  return teaminfoitem_.Mutable(index);
}
inline ::main::TeamInfoItem* TeamInfo::add_teaminfoitem() {
  // @@protoc_insertion_point(field_add:main.TeamInfo.teamInfoItem)
  return teaminfoitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::TeamInfoItem >&
TeamInfo::teaminfoitem() const {
  // @@protoc_insertion_point(field_list:main.TeamInfo.teamInfoItem)
  return teaminfoitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::TeamInfoItem >*
TeamInfo::mutable_teaminfoitem() {
  // @@protoc_insertion_point(field_mutable_list:main.TeamInfo.teamInfoItem)
  return &teaminfoitem_;
}

// repeated int32 onTeamOfficerSsids = 2;
inline int TeamInfo::onteamofficerssids_size() const {
  return onteamofficerssids_.size();
}
inline void TeamInfo::clear_onteamofficerssids() {
  onteamofficerssids_.Clear();
}
inline ::google::protobuf::int32 TeamInfo::onteamofficerssids(int index) const {
  // @@protoc_insertion_point(field_get:main.TeamInfo.onTeamOfficerSsids)
  return onteamofficerssids_.Get(index);
}
inline void TeamInfo::set_onteamofficerssids(int index, ::google::protobuf::int32 value) {
  onteamofficerssids_.Set(index, value);
  // @@protoc_insertion_point(field_set:main.TeamInfo.onTeamOfficerSsids)
}
inline void TeamInfo::add_onteamofficerssids(::google::protobuf::int32 value) {
  onteamofficerssids_.Add(value);
  // @@protoc_insertion_point(field_add:main.TeamInfo.onTeamOfficerSsids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TeamInfo::onteamofficerssids() const {
  // @@protoc_insertion_point(field_list:main.TeamInfo.onTeamOfficerSsids)
  return onteamofficerssids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TeamInfo::mutable_onteamofficerssids() {
  // @@protoc_insertion_point(field_mutable_list:main.TeamInfo.onTeamOfficerSsids)
  return &onteamofficerssids_;
}

// -------------------------------------------------------------------

// TeamInfoItem

// optional int32 teamId = 1;
inline bool TeamInfoItem::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamInfoItem::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamInfoItem::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamInfoItem::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 TeamInfoItem::teamid() const {
  // @@protoc_insertion_point(field_get:main.TeamInfoItem.teamId)
  return teamid_;
}
inline void TeamInfoItem::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:main.TeamInfoItem.teamId)
}

// optional int32 lordOfficerCardId = 2;
inline bool TeamInfoItem::has_lordofficercardid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamInfoItem::set_has_lordofficercardid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamInfoItem::clear_has_lordofficercardid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamInfoItem::clear_lordofficercardid() {
  lordofficercardid_ = 0;
  clear_has_lordofficercardid();
}
inline ::google::protobuf::int32 TeamInfoItem::lordofficercardid() const {
  // @@protoc_insertion_point(field_get:main.TeamInfoItem.lordOfficerCardId)
  return lordofficercardid_;
}
inline void TeamInfoItem::set_lordofficercardid(::google::protobuf::int32 value) {
  set_has_lordofficercardid();
  lordofficercardid_ = value;
  // @@protoc_insertion_point(field_set:main.TeamInfoItem.lordOfficerCardId)
}

// repeated int32 officerList = 3;
inline int TeamInfoItem::officerlist_size() const {
  return officerlist_.size();
}
inline void TeamInfoItem::clear_officerlist() {
  officerlist_.Clear();
}
inline ::google::protobuf::int32 TeamInfoItem::officerlist(int index) const {
  // @@protoc_insertion_point(field_get:main.TeamInfoItem.officerList)
  return officerlist_.Get(index);
}
inline void TeamInfoItem::set_officerlist(int index, ::google::protobuf::int32 value) {
  officerlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:main.TeamInfoItem.officerList)
}
inline void TeamInfoItem::add_officerlist(::google::protobuf::int32 value) {
  officerlist_.Add(value);
  // @@protoc_insertion_point(field_add:main.TeamInfoItem.officerList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TeamInfoItem::officerlist() const {
  // @@protoc_insertion_point(field_list:main.TeamInfoItem.officerList)
  return officerlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TeamInfoItem::mutable_officerlist() {
  // @@protoc_insertion_point(field_mutable_list:main.TeamInfoItem.officerList)
  return &officerlist_;
}

// optional int32 redSoldier = 4;
inline bool TeamInfoItem::has_redsoldier() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamInfoItem::set_has_redsoldier() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamInfoItem::clear_has_redsoldier() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamInfoItem::clear_redsoldier() {
  redsoldier_ = 0;
  clear_has_redsoldier();
}
inline ::google::protobuf::int32 TeamInfoItem::redsoldier() const {
  // @@protoc_insertion_point(field_get:main.TeamInfoItem.redSoldier)
  return redsoldier_;
}
inline void TeamInfoItem::set_redsoldier(::google::protobuf::int32 value) {
  set_has_redsoldier();
  redsoldier_ = value;
  // @@protoc_insertion_point(field_set:main.TeamInfoItem.redSoldier)
}

// optional int32 blueSoldier = 5;
inline bool TeamInfoItem::has_bluesoldier() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TeamInfoItem::set_has_bluesoldier() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TeamInfoItem::clear_has_bluesoldier() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TeamInfoItem::clear_bluesoldier() {
  bluesoldier_ = 0;
  clear_has_bluesoldier();
}
inline ::google::protobuf::int32 TeamInfoItem::bluesoldier() const {
  // @@protoc_insertion_point(field_get:main.TeamInfoItem.blueSoldier)
  return bluesoldier_;
}
inline void TeamInfoItem::set_bluesoldier(::google::protobuf::int32 value) {
  set_has_bluesoldier();
  bluesoldier_ = value;
  // @@protoc_insertion_point(field_set:main.TeamInfoItem.blueSoldier)
}

// optional int32 greenSoldier = 6;
inline bool TeamInfoItem::has_greensoldier() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TeamInfoItem::set_has_greensoldier() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TeamInfoItem::clear_has_greensoldier() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TeamInfoItem::clear_greensoldier() {
  greensoldier_ = 0;
  clear_has_greensoldier();
}
inline ::google::protobuf::int32 TeamInfoItem::greensoldier() const {
  // @@protoc_insertion_point(field_get:main.TeamInfoItem.greenSoldier)
  return greensoldier_;
}
inline void TeamInfoItem::set_greensoldier(::google::protobuf::int32 value) {
  set_has_greensoldier();
  greensoldier_ = value;
  // @@protoc_insertion_point(field_set:main.TeamInfoItem.greenSoldier)
}

// optional int32 current = 7;
inline bool TeamInfoItem::has_current() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TeamInfoItem::set_has_current() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TeamInfoItem::clear_has_current() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TeamInfoItem::clear_current() {
  current_ = 0;
  clear_has_current();
}
inline ::google::protobuf::int32 TeamInfoItem::current() const {
  // @@protoc_insertion_point(field_get:main.TeamInfoItem.current)
  return current_;
}
inline void TeamInfoItem::set_current(::google::protobuf::int32 value) {
  set_has_current();
  current_ = value;
  // @@protoc_insertion_point(field_set:main.TeamInfoItem.current)
}

// -------------------------------------------------------------------

// BeginnersGuideRequest

// optional int32 id = 1;
inline bool BeginnersGuideRequest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeginnersGuideRequest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeginnersGuideRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeginnersGuideRequest::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 BeginnersGuideRequest::id() const {
  // @@protoc_insertion_point(field_get:main.BeginnersGuideRequest.id)
  return id_;
}
inline void BeginnersGuideRequest::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:main.BeginnersGuideRequest.id)
}

// -------------------------------------------------------------------

// BeginnersGuideResponse

// optional int32 state = 1;
inline bool BeginnersGuideResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BeginnersGuideResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BeginnersGuideResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BeginnersGuideResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 BeginnersGuideResponse::state() const {
  // @@protoc_insertion_point(field_get:main.BeginnersGuideResponse.state)
  return state_;
}
inline void BeginnersGuideResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.BeginnersGuideResponse.state)
}

// -------------------------------------------------------------------

// LoginAwardListRequest

// -------------------------------------------------------------------

// LoginAwardListResponse

// optional int32 longinDay = 1;
inline bool LoginAwardListResponse::has_longinday() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginAwardListResponse::set_has_longinday() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginAwardListResponse::clear_has_longinday() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginAwardListResponse::clear_longinday() {
  longinday_ = 0;
  clear_has_longinday();
}
inline ::google::protobuf::int32 LoginAwardListResponse::longinday() const {
  // @@protoc_insertion_point(field_get:main.LoginAwardListResponse.longinDay)
  return longinday_;
}
inline void LoginAwardListResponse::set_longinday(::google::protobuf::int32 value) {
  set_has_longinday();
  longinday_ = value;
  // @@protoc_insertion_point(field_set:main.LoginAwardListResponse.longinDay)
}

// repeated .main.LoginAwardModel model = 2;
inline int LoginAwardListResponse::model_size() const {
  return model_.size();
}
inline void LoginAwardListResponse::clear_model() {
  model_.Clear();
}
inline const ::main::LoginAwardModel& LoginAwardListResponse::model(int index) const {
  // @@protoc_insertion_point(field_get:main.LoginAwardListResponse.model)
  return model_.Get(index);
}
inline ::main::LoginAwardModel* LoginAwardListResponse::mutable_model(int index) {
  // @@protoc_insertion_point(field_mutable:main.LoginAwardListResponse.model)
  return model_.Mutable(index);
}
inline ::main::LoginAwardModel* LoginAwardListResponse::add_model() {
  // @@protoc_insertion_point(field_add:main.LoginAwardListResponse.model)
  return model_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::LoginAwardModel >&
LoginAwardListResponse::model() const {
  // @@protoc_insertion_point(field_list:main.LoginAwardListResponse.model)
  return model_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::LoginAwardModel >*
LoginAwardListResponse::mutable_model() {
  // @@protoc_insertion_point(field_mutable_list:main.LoginAwardListResponse.model)
  return &model_;
}

// -------------------------------------------------------------------

// LoginAwardModel

// optional int32 day = 1;
inline bool LoginAwardModel::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginAwardModel::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginAwardModel::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginAwardModel::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 LoginAwardModel::day() const {
  // @@protoc_insertion_point(field_get:main.LoginAwardModel.day)
  return day_;
}
inline void LoginAwardModel::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:main.LoginAwardModel.day)
}

// repeated .main.LoginAwardItemModel loginAwardItemModel = 2;
inline int LoginAwardModel::loginawarditemmodel_size() const {
  return loginawarditemmodel_.size();
}
inline void LoginAwardModel::clear_loginawarditemmodel() {
  loginawarditemmodel_.Clear();
}
inline const ::main::LoginAwardItemModel& LoginAwardModel::loginawarditemmodel(int index) const {
  // @@protoc_insertion_point(field_get:main.LoginAwardModel.loginAwardItemModel)
  return loginawarditemmodel_.Get(index);
}
inline ::main::LoginAwardItemModel* LoginAwardModel::mutable_loginawarditemmodel(int index) {
  // @@protoc_insertion_point(field_mutable:main.LoginAwardModel.loginAwardItemModel)
  return loginawarditemmodel_.Mutable(index);
}
inline ::main::LoginAwardItemModel* LoginAwardModel::add_loginawarditemmodel() {
  // @@protoc_insertion_point(field_add:main.LoginAwardModel.loginAwardItemModel)
  return loginawarditemmodel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::LoginAwardItemModel >&
LoginAwardModel::loginawarditemmodel() const {
  // @@protoc_insertion_point(field_list:main.LoginAwardModel.loginAwardItemModel)
  return loginawarditemmodel_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::LoginAwardItemModel >*
LoginAwardModel::mutable_loginawarditemmodel() {
  // @@protoc_insertion_point(field_mutable_list:main.LoginAwardModel.loginAwardItemModel)
  return &loginawarditemmodel_;
}

// optional int32 isFinish = 3;
inline bool LoginAwardModel::has_isfinish() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginAwardModel::set_has_isfinish() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginAwardModel::clear_has_isfinish() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginAwardModel::clear_isfinish() {
  isfinish_ = 0;
  clear_has_isfinish();
}
inline ::google::protobuf::int32 LoginAwardModel::isfinish() const {
  // @@protoc_insertion_point(field_get:main.LoginAwardModel.isFinish)
  return isfinish_;
}
inline void LoginAwardModel::set_isfinish(::google::protobuf::int32 value) {
  set_has_isfinish();
  isfinish_ = value;
  // @@protoc_insertion_point(field_set:main.LoginAwardModel.isFinish)
}

// -------------------------------------------------------------------

// LoginAwardItemModel

// optional int32 itemId = 1;
inline bool LoginAwardItemModel::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginAwardItemModel::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginAwardItemModel::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginAwardItemModel::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 LoginAwardItemModel::itemid() const {
  // @@protoc_insertion_point(field_get:main.LoginAwardItemModel.itemId)
  return itemid_;
}
inline void LoginAwardItemModel::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:main.LoginAwardItemModel.itemId)
}

// optional int32 itemType = 2;
inline bool LoginAwardItemModel::has_itemtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginAwardItemModel::set_has_itemtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginAwardItemModel::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginAwardItemModel::clear_itemtype() {
  itemtype_ = 0;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 LoginAwardItemModel::itemtype() const {
  // @@protoc_insertion_point(field_get:main.LoginAwardItemModel.itemType)
  return itemtype_;
}
inline void LoginAwardItemModel::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:main.LoginAwardItemModel.itemType)
}

// optional int32 count = 3;
inline bool LoginAwardItemModel::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginAwardItemModel::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginAwardItemModel::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginAwardItemModel::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 LoginAwardItemModel::count() const {
  // @@protoc_insertion_point(field_get:main.LoginAwardItemModel.count)
  return count_;
}
inline void LoginAwardItemModel::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:main.LoginAwardItemModel.count)
}

// -------------------------------------------------------------------

// RewardLoginAwardRequest

// optional int32 day = 1;
inline bool RewardLoginAwardRequest::has_day() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardLoginAwardRequest::set_has_day() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardLoginAwardRequest::clear_has_day() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardLoginAwardRequest::clear_day() {
  day_ = 0;
  clear_has_day();
}
inline ::google::protobuf::int32 RewardLoginAwardRequest::day() const {
  // @@protoc_insertion_point(field_get:main.RewardLoginAwardRequest.day)
  return day_;
}
inline void RewardLoginAwardRequest::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:main.RewardLoginAwardRequest.day)
}

// -------------------------------------------------------------------

// RewardLoginAwardResponse

// optional bool state = 1;
inline bool RewardLoginAwardResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardLoginAwardResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardLoginAwardResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardLoginAwardResponse::clear_state() {
  state_ = false;
  clear_has_state();
}
inline bool RewardLoginAwardResponse::state() const {
  // @@protoc_insertion_point(field_get:main.RewardLoginAwardResponse.state)
  return state_;
}
inline void RewardLoginAwardResponse::set_state(bool value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.RewardLoginAwardResponse.state)
}

// repeated .main.LoginAwardItemInfo loginAwardItemInfo = 2;
inline int RewardLoginAwardResponse::loginawarditeminfo_size() const {
  return loginawarditeminfo_.size();
}
inline void RewardLoginAwardResponse::clear_loginawarditeminfo() {
  loginawarditeminfo_.Clear();
}
inline const ::main::LoginAwardItemInfo& RewardLoginAwardResponse::loginawarditeminfo(int index) const {
  // @@protoc_insertion_point(field_get:main.RewardLoginAwardResponse.loginAwardItemInfo)
  return loginawarditeminfo_.Get(index);
}
inline ::main::LoginAwardItemInfo* RewardLoginAwardResponse::mutable_loginawarditeminfo(int index) {
  // @@protoc_insertion_point(field_mutable:main.RewardLoginAwardResponse.loginAwardItemInfo)
  return loginawarditeminfo_.Mutable(index);
}
inline ::main::LoginAwardItemInfo* RewardLoginAwardResponse::add_loginawarditeminfo() {
  // @@protoc_insertion_point(field_add:main.RewardLoginAwardResponse.loginAwardItemInfo)
  return loginawarditeminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::LoginAwardItemInfo >&
RewardLoginAwardResponse::loginawarditeminfo() const {
  // @@protoc_insertion_point(field_list:main.RewardLoginAwardResponse.loginAwardItemInfo)
  return loginawarditeminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::LoginAwardItemInfo >*
RewardLoginAwardResponse::mutable_loginawarditeminfo() {
  // @@protoc_insertion_point(field_mutable_list:main.RewardLoginAwardResponse.loginAwardItemInfo)
  return &loginawarditeminfo_;
}

// -------------------------------------------------------------------

// LoginAwardItemInfo

// optional int32 itemId = 1;
inline bool LoginAwardItemInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginAwardItemInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginAwardItemInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginAwardItemInfo::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 LoginAwardItemInfo::itemid() const {
  // @@protoc_insertion_point(field_get:main.LoginAwardItemInfo.itemId)
  return itemid_;
}
inline void LoginAwardItemInfo::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:main.LoginAwardItemInfo.itemId)
}

// optional int32 itemType = 2;
inline bool LoginAwardItemInfo::has_itemtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginAwardItemInfo::set_has_itemtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginAwardItemInfo::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginAwardItemInfo::clear_itemtype() {
  itemtype_ = 0;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 LoginAwardItemInfo::itemtype() const {
  // @@protoc_insertion_point(field_get:main.LoginAwardItemInfo.itemType)
  return itemtype_;
}
inline void LoginAwardItemInfo::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:main.LoginAwardItemInfo.itemType)
}

// optional int32 count = 3;
inline bool LoginAwardItemInfo::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginAwardItemInfo::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginAwardItemInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginAwardItemInfo::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 LoginAwardItemInfo::count() const {
  // @@protoc_insertion_point(field_get:main.LoginAwardItemInfo.count)
  return count_;
}
inline void LoginAwardItemInfo::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:main.LoginAwardItemInfo.count)
}

// optional int32 coins = 4;
inline bool LoginAwardItemInfo::has_coins() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginAwardItemInfo::set_has_coins() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginAwardItemInfo::clear_has_coins() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginAwardItemInfo::clear_coins() {
  coins_ = 0;
  clear_has_coins();
}
inline ::google::protobuf::int32 LoginAwardItemInfo::coins() const {
  // @@protoc_insertion_point(field_get:main.LoginAwardItemInfo.coins)
  return coins_;
}
inline void LoginAwardItemInfo::set_coins(::google::protobuf::int32 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:main.LoginAwardItemInfo.coins)
}

// -------------------------------------------------------------------

// RewardLoginAwardGoldResponse

// optional bool state = 1;
inline bool RewardLoginAwardGoldResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RewardLoginAwardGoldResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RewardLoginAwardGoldResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RewardLoginAwardGoldResponse::clear_state() {
  state_ = false;
  clear_has_state();
}
inline bool RewardLoginAwardGoldResponse::state() const {
  // @@protoc_insertion_point(field_get:main.RewardLoginAwardGoldResponse.state)
  return state_;
}
inline void RewardLoginAwardGoldResponse::set_state(bool value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.RewardLoginAwardGoldResponse.state)
}

// optional int32 coins = 2;
inline bool RewardLoginAwardGoldResponse::has_coins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RewardLoginAwardGoldResponse::set_has_coins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RewardLoginAwardGoldResponse::clear_has_coins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RewardLoginAwardGoldResponse::clear_coins() {
  coins_ = 0;
  clear_has_coins();
}
inline ::google::protobuf::int32 RewardLoginAwardGoldResponse::coins() const {
  // @@protoc_insertion_point(field_get:main.RewardLoginAwardGoldResponse.coins)
  return coins_;
}
inline void RewardLoginAwardGoldResponse::set_coins(::google::protobuf::int32 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:main.RewardLoginAwardGoldResponse.coins)
}

// -------------------------------------------------------------------

// RewardLoginAwardGoldRequest

// -------------------------------------------------------------------

// UpdateRoleQuest

// repeated .main.RoleQuestProto updateRoleQuestProto = 1;
inline int UpdateRoleQuest::updaterolequestproto_size() const {
  return updaterolequestproto_.size();
}
inline void UpdateRoleQuest::clear_updaterolequestproto() {
  updaterolequestproto_.Clear();
}
inline const ::main::RoleQuestProto& UpdateRoleQuest::updaterolequestproto(int index) const {
  // @@protoc_insertion_point(field_get:main.UpdateRoleQuest.updateRoleQuestProto)
  return updaterolequestproto_.Get(index);
}
inline ::main::RoleQuestProto* UpdateRoleQuest::mutable_updaterolequestproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.UpdateRoleQuest.updateRoleQuestProto)
  return updaterolequestproto_.Mutable(index);
}
inline ::main::RoleQuestProto* UpdateRoleQuest::add_updaterolequestproto() {
  // @@protoc_insertion_point(field_add:main.UpdateRoleQuest.updateRoleQuestProto)
  return updaterolequestproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::RoleQuestProto >&
UpdateRoleQuest::updaterolequestproto() const {
  // @@protoc_insertion_point(field_list:main.UpdateRoleQuest.updateRoleQuestProto)
  return updaterolequestproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::RoleQuestProto >*
UpdateRoleQuest::mutable_updaterolequestproto() {
  // @@protoc_insertion_point(field_mutable_list:main.UpdateRoleQuest.updateRoleQuestProto)
  return &updaterolequestproto_;
}

// -------------------------------------------------------------------

// RoleQuestProto

// optional int32 roleId = 1;
inline bool RoleQuestProto::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleQuestProto::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleQuestProto::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleQuestProto::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 RoleQuestProto::roleid() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.roleId)
  return roleid_;
}
inline void RoleQuestProto::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.roleId)
}

// optional int32 questId = 2;
inline bool RoleQuestProto::has_questid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleQuestProto::set_has_questid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleQuestProto::clear_has_questid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleQuestProto::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 RoleQuestProto::questid() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.questId)
  return questid_;
}
inline void RoleQuestProto::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.questId)
}

// optional int32 questState = 3;
inline bool RoleQuestProto::has_queststate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleQuestProto::set_has_queststate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleQuestProto::clear_has_queststate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleQuestProto::clear_queststate() {
  queststate_ = 0;
  clear_has_queststate();
}
inline ::google::protobuf::int32 RoleQuestProto::queststate() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.questState)
  return queststate_;
}
inline void RoleQuestProto::set_queststate(::google::protobuf::int32 value) {
  set_has_queststate();
  queststate_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.questState)
}

// optional int32 conditionType = 4;
inline bool RoleQuestProto::has_conditiontype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleQuestProto::set_has_conditiontype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleQuestProto::clear_has_conditiontype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleQuestProto::clear_conditiontype() {
  conditiontype_ = 0;
  clear_has_conditiontype();
}
inline ::google::protobuf::int32 RoleQuestProto::conditiontype() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.conditionType)
  return conditiontype_;
}
inline void RoleQuestProto::set_conditiontype(::google::protobuf::int32 value) {
  set_has_conditiontype();
  conditiontype_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.conditionType)
}

// optional string conditionName = 5;
inline bool RoleQuestProto::has_conditionname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleQuestProto::set_has_conditionname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleQuestProto::clear_has_conditionname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleQuestProto::clear_conditionname() {
  if (conditionname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    conditionname_->clear();
  }
  clear_has_conditionname();
}
inline const ::std::string& RoleQuestProto::conditionname() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.conditionName)
  return *conditionname_;
}
inline void RoleQuestProto::set_conditionname(const ::std::string& value) {
  set_has_conditionname();
  if (conditionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    conditionname_ = new ::std::string;
  }
  conditionname_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.conditionName)
}
inline void RoleQuestProto::set_conditionname(const char* value) {
  set_has_conditionname();
  if (conditionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    conditionname_ = new ::std::string;
  }
  conditionname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleQuestProto.conditionName)
}
inline void RoleQuestProto::set_conditionname(const char* value, size_t size) {
  set_has_conditionname();
  if (conditionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    conditionname_ = new ::std::string;
  }
  conditionname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleQuestProto.conditionName)
}
inline ::std::string* RoleQuestProto::mutable_conditionname() {
  set_has_conditionname();
  if (conditionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    conditionname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleQuestProto.conditionName)
  return conditionname_;
}
inline ::std::string* RoleQuestProto::release_conditionname() {
  clear_has_conditionname();
  if (conditionname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = conditionname_;
    conditionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleQuestProto::set_allocated_conditionname(::std::string* conditionname) {
  if (conditionname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete conditionname_;
  }
  if (conditionname) {
    set_has_conditionname();
    conditionname_ = conditionname;
  } else {
    clear_has_conditionname();
    conditionname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleQuestProto.conditionName)
}

// optional int32 conditionValue = 6;
inline bool RoleQuestProto::has_conditionvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleQuestProto::set_has_conditionvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleQuestProto::clear_has_conditionvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleQuestProto::clear_conditionvalue() {
  conditionvalue_ = 0;
  clear_has_conditionvalue();
}
inline ::google::protobuf::int32 RoleQuestProto::conditionvalue() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.conditionValue)
  return conditionvalue_;
}
inline void RoleQuestProto::set_conditionvalue(::google::protobuf::int32 value) {
  set_has_conditionvalue();
  conditionvalue_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.conditionValue)
}

// optional int32 currContionValue = 7;
inline bool RoleQuestProto::has_currcontionvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleQuestProto::set_has_currcontionvalue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleQuestProto::clear_has_currcontionvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleQuestProto::clear_currcontionvalue() {
  currcontionvalue_ = 0;
  clear_has_currcontionvalue();
}
inline ::google::protobuf::int32 RoleQuestProto::currcontionvalue() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.currContionValue)
  return currcontionvalue_;
}
inline void RoleQuestProto::set_currcontionvalue(::google::protobuf::int32 value) {
  set_has_currcontionvalue();
  currcontionvalue_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.currContionValue)
}

// optional int32 actionType = 8;
inline bool RoleQuestProto::has_actiontype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleQuestProto::set_has_actiontype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleQuestProto::clear_has_actiontype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleQuestProto::clear_actiontype() {
  actiontype_ = 0;
  clear_has_actiontype();
}
inline ::google::protobuf::int32 RoleQuestProto::actiontype() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.actionType)
  return actiontype_;
}
inline void RoleQuestProto::set_actiontype(::google::protobuf::int32 value) {
  set_has_actiontype();
  actiontype_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.actionType)
}

// optional int32 tabId = 9;
inline bool RoleQuestProto::has_tabid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleQuestProto::set_has_tabid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleQuestProto::clear_has_tabid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleQuestProto::clear_tabid() {
  tabid_ = 0;
  clear_has_tabid();
}
inline ::google::protobuf::int32 RoleQuestProto::tabid() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.tabId)
  return tabid_;
}
inline void RoleQuestProto::set_tabid(::google::protobuf::int32 value) {
  set_has_tabid();
  tabid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.tabId)
}

// optional int32 groupId = 10;
inline bool RoleQuestProto::has_groupid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleQuestProto::set_has_groupid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleQuestProto::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleQuestProto::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 RoleQuestProto::groupid() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.groupId)
  return groupid_;
}
inline void RoleQuestProto::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.groupId)
}

// optional int32 arrivement = 11;
inline bool RoleQuestProto::has_arrivement() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleQuestProto::set_has_arrivement() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleQuestProto::clear_has_arrivement() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleQuestProto::clear_arrivement() {
  arrivement_ = 0;
  clear_has_arrivement();
}
inline ::google::protobuf::int32 RoleQuestProto::arrivement() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.arrivement)
  return arrivement_;
}
inline void RoleQuestProto::set_arrivement(::google::protobuf::int32 value) {
  set_has_arrivement();
  arrivement_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.arrivement)
}

// optional int32 questType = 12;
inline bool RoleQuestProto::has_questtype() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleQuestProto::set_has_questtype() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleQuestProto::clear_has_questtype() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleQuestProto::clear_questtype() {
  questtype_ = 0;
  clear_has_questtype();
}
inline ::google::protobuf::int32 RoleQuestProto::questtype() const {
  // @@protoc_insertion_point(field_get:main.RoleQuestProto.questType)
  return questtype_;
}
inline void RoleQuestProto::set_questtype(::google::protobuf::int32 value) {
  set_has_questtype();
  questtype_ = value;
  // @@protoc_insertion_point(field_set:main.RoleQuestProto.questType)
}

// -------------------------------------------------------------------

// ReceiveQuestRewardRequest

// optional int32 questId = 1;
inline bool ReceiveQuestRewardRequest::has_questid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveQuestRewardRequest::set_has_questid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveQuestRewardRequest::clear_has_questid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveQuestRewardRequest::clear_questid() {
  questid_ = 0;
  clear_has_questid();
}
inline ::google::protobuf::int32 ReceiveQuestRewardRequest::questid() const {
  // @@protoc_insertion_point(field_get:main.ReceiveQuestRewardRequest.questId)
  return questid_;
}
inline void ReceiveQuestRewardRequest::set_questid(::google::protobuf::int32 value) {
  set_has_questid();
  questid_ = value;
  // @@protoc_insertion_point(field_set:main.ReceiveQuestRewardRequest.questId)
}

// -------------------------------------------------------------------

// ReceiveQuestRewardResponse

// optional int32 state = 1;
inline bool ReceiveQuestRewardResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveQuestRewardResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveQuestRewardResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveQuestRewardResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ReceiveQuestRewardResponse::state() const {
  // @@protoc_insertion_point(field_get:main.ReceiveQuestRewardResponse.state)
  return state_;
}
inline void ReceiveQuestRewardResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.ReceiveQuestRewardResponse.state)
}

// -------------------------------------------------------------------

// BossStartSateResponse

// optional bool state = 1;
inline bool BossStartSateResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossStartSateResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossStartSateResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossStartSateResponse::clear_state() {
  state_ = false;
  clear_has_state();
}
inline bool BossStartSateResponse::state() const {
  // @@protoc_insertion_point(field_get:main.BossStartSateResponse.state)
  return state_;
}
inline void BossStartSateResponse::set_state(bool value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.BossStartSateResponse.state)
}

// -------------------------------------------------------------------

// BossPlotCountProto

// required int32 bossPlotId = 1;
inline bool BossPlotCountProto::has_bossplotid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BossPlotCountProto::set_has_bossplotid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BossPlotCountProto::clear_has_bossplotid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BossPlotCountProto::clear_bossplotid() {
  bossplotid_ = 0;
  clear_has_bossplotid();
}
inline ::google::protobuf::int32 BossPlotCountProto::bossplotid() const {
  // @@protoc_insertion_point(field_get:main.BossPlotCountProto.bossPlotId)
  return bossplotid_;
}
inline void BossPlotCountProto::set_bossplotid(::google::protobuf::int32 value) {
  set_has_bossplotid();
  bossplotid_ = value;
  // @@protoc_insertion_point(field_set:main.BossPlotCountProto.bossPlotId)
}

// required int32 canJoinCount = 2;
inline bool BossPlotCountProto::has_canjoincount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BossPlotCountProto::set_has_canjoincount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BossPlotCountProto::clear_has_canjoincount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BossPlotCountProto::clear_canjoincount() {
  canjoincount_ = 0;
  clear_has_canjoincount();
}
inline ::google::protobuf::int32 BossPlotCountProto::canjoincount() const {
  // @@protoc_insertion_point(field_get:main.BossPlotCountProto.canJoinCount)
  return canjoincount_;
}
inline void BossPlotCountProto::set_canjoincount(::google::protobuf::int32 value) {
  set_has_canjoincount();
  canjoincount_ = value;
  // @@protoc_insertion_point(field_set:main.BossPlotCountProto.canJoinCount)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RoleModule_2eproto__INCLUDED
