// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FriendModule.proto

#ifndef PROTOBUF_FriendModule_2eproto__INCLUDED
#define PROTOBUF_FriendModule_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "ItemModule.pb.h"
// @@protoc_insertion_point(includes)

namespace main {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FriendModule_2eproto();
void protobuf_AssignDesc_FriendModule_2eproto();
void protobuf_ShutdownFile_FriendModule_2eproto();

class AddFriendRequest;
class AddFriendResponse;
class SearchFriendByNameRequest;
class SearchFriendByNameResponse;
class SearchFriendByInviteCodeRequest;
class SearchFriendByInviteCodeResponse;
class FriendInfoRequest;
class FriendInfoResponse;
class AgreeFriendRequest;
class AgreeFriendResponse;
class AddBlockRequest;
class AddBlockResponse;
class UnagreeFriendRequest;
class UnagreeFriendResponse;
class DeleteBlockRequest;
class DeleteBlockResponse;
class DeleteFriendRequest;
class DeleteFriendResponse;
class expandFriendRequest;
class expandFriendResponse;
class FriendProto;
class RoleInfo;
class RoleTeamInfo;
class TeamOfficerCardItemInfo;
class PvpOfficerCardItemInfo;
class ReasonInfo;
class PowerGiftRequest;
class PowerGiftResponse;
class AcceptPowerGiftResponse;
class GetPowerGiftRequest;
class GetPowerGiftResponse;
class GetAllPowerGiftRequest;
class GetAllPowerGiftResponse;
class PowerGiftListResponse;
class PowerGiftProto;

// ===================================================================

class AddFriendRequest : public ::google::protobuf::MessageLite {
 public:
  AddFriendRequest();
  virtual ~AddFriendRequest();

  AddFriendRequest(const AddFriendRequest& from);

  inline AddFriendRequest& operator=(const AddFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AddFriendRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AddFriendRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AddFriendRequest* other);

  // implements Message ----------------------------------------------

  AddFriendRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AddFriendRequest& from);
  void MergeFrom(const AddFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 friendRoleId = 1;
  inline bool has_friendroleid() const;
  inline void clear_friendroleid();
  static const int kFriendRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 friendroleid() const;
  inline void set_friendroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.AddFriendRequest)
 private:
  inline void set_has_friendroleid();
  inline void clear_has_friendroleid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 friendroleid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static AddFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddFriendResponse : public ::google::protobuf::MessageLite {
 public:
  AddFriendResponse();
  virtual ~AddFriendResponse();

  AddFriendResponse(const AddFriendResponse& from);

  inline AddFriendResponse& operator=(const AddFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AddFriendResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AddFriendResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AddFriendResponse* other);

  // implements Message ----------------------------------------------

  AddFriendResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AddFriendResponse& from);
  void MergeFrom(const AddFriendResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional .main.FriendProto friendProto = 2;
  inline bool has_friendproto() const;
  inline void clear_friendproto();
  static const int kFriendProtoFieldNumber = 2;
  inline const ::main::FriendProto& friendproto() const;
  inline ::main::FriendProto* mutable_friendproto();
  inline ::main::FriendProto* release_friendproto();
  inline void set_allocated_friendproto(::main::FriendProto* friendproto);

  // @@protoc_insertion_point(class_scope:main.AddFriendResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_friendproto();
  inline void clear_has_friendproto();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::FriendProto* friendproto_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static AddFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class SearchFriendByNameRequest : public ::google::protobuf::MessageLite {
 public:
  SearchFriendByNameRequest();
  virtual ~SearchFriendByNameRequest();

  SearchFriendByNameRequest(const SearchFriendByNameRequest& from);

  inline SearchFriendByNameRequest& operator=(const SearchFriendByNameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SearchFriendByNameRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SearchFriendByNameRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SearchFriendByNameRequest* other);

  // implements Message ----------------------------------------------

  SearchFriendByNameRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SearchFriendByNameRequest& from);
  void MergeFrom(const SearchFriendByNameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickName = 1;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNickNameFieldNumber = 1;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional int32 pageNum = 2;
  inline bool has_pagenum() const;
  inline void clear_pagenum();
  static const int kPageNumFieldNumber = 2;
  inline ::google::protobuf::int32 pagenum() const;
  inline void set_pagenum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SearchFriendByNameRequest)
 private:
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_pagenum();
  inline void clear_has_pagenum();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  ::google::protobuf::int32 pagenum_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static SearchFriendByNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class SearchFriendByNameResponse : public ::google::protobuf::MessageLite {
 public:
  SearchFriendByNameResponse();
  virtual ~SearchFriendByNameResponse();

  SearchFriendByNameResponse(const SearchFriendByNameResponse& from);

  inline SearchFriendByNameResponse& operator=(const SearchFriendByNameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SearchFriendByNameResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SearchFriendByNameResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SearchFriendByNameResponse* other);

  // implements Message ----------------------------------------------

  SearchFriendByNameResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SearchFriendByNameResponse& from);
  void MergeFrom(const SearchFriendByNameResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.FriendProto FriendList = 1;
  inline int friendlist_size() const;
  inline void clear_friendlist();
  static const int kFriendListFieldNumber = 1;
  inline const ::main::FriendProto& friendlist(int index) const;
  inline ::main::FriendProto* mutable_friendlist(int index);
  inline ::main::FriendProto* add_friendlist();
  inline const ::google::protobuf::RepeatedPtrField< ::main::FriendProto >&
      friendlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::FriendProto >*
      mutable_friendlist();

  // @@protoc_insertion_point(class_scope:main.SearchFriendByNameResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::FriendProto > friendlist_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static SearchFriendByNameResponse* default_instance_;
};
// -------------------------------------------------------------------

class SearchFriendByInviteCodeRequest : public ::google::protobuf::MessageLite {
 public:
  SearchFriendByInviteCodeRequest();
  virtual ~SearchFriendByInviteCodeRequest();

  SearchFriendByInviteCodeRequest(const SearchFriendByInviteCodeRequest& from);

  inline SearchFriendByInviteCodeRequest& operator=(const SearchFriendByInviteCodeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SearchFriendByInviteCodeRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SearchFriendByInviteCodeRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SearchFriendByInviteCodeRequest* other);

  // implements Message ----------------------------------------------

  SearchFriendByInviteCodeRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SearchFriendByInviteCodeRequest& from);
  void MergeFrom(const SearchFriendByInviteCodeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string inviteCode = 1;
  inline bool has_invitecode() const;
  inline void clear_invitecode();
  static const int kInviteCodeFieldNumber = 1;
  inline const ::std::string& invitecode() const;
  inline void set_invitecode(const ::std::string& value);
  inline void set_invitecode(const char* value);
  inline void set_invitecode(const char* value, size_t size);
  inline ::std::string* mutable_invitecode();
  inline ::std::string* release_invitecode();
  inline void set_allocated_invitecode(::std::string* invitecode);

  // @@protoc_insertion_point(class_scope:main.SearchFriendByInviteCodeRequest)
 private:
  inline void set_has_invitecode();
  inline void clear_has_invitecode();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* invitecode_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static SearchFriendByInviteCodeRequest* default_instance_;
};
// -------------------------------------------------------------------

class SearchFriendByInviteCodeResponse : public ::google::protobuf::MessageLite {
 public:
  SearchFriendByInviteCodeResponse();
  virtual ~SearchFriendByInviteCodeResponse();

  SearchFriendByInviteCodeResponse(const SearchFriendByInviteCodeResponse& from);

  inline SearchFriendByInviteCodeResponse& operator=(const SearchFriendByInviteCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SearchFriendByInviteCodeResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SearchFriendByInviteCodeResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SearchFriendByInviteCodeResponse* other);

  // implements Message ----------------------------------------------

  SearchFriendByInviteCodeResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SearchFriendByInviteCodeResponse& from);
  void MergeFrom(const SearchFriendByInviteCodeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .main.FriendProto friend = 1;
  inline bool has_friend_() const;
  inline void clear_friend_();
  static const int kFriendFieldNumber = 1;
  inline const ::main::FriendProto& friend_() const;
  inline ::main::FriendProto* mutable_friend_();
  inline ::main::FriendProto* release_friend_();
  inline void set_allocated_friend_(::main::FriendProto* friend_);

  // @@protoc_insertion_point(class_scope:main.SearchFriendByInviteCodeResponse)
 private:
  inline void set_has_friend_();
  inline void clear_has_friend_();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::FriendProto* friend__;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static SearchFriendByInviteCodeResponse* default_instance_;
};
// -------------------------------------------------------------------

class FriendInfoRequest : public ::google::protobuf::MessageLite {
 public:
  FriendInfoRequest();
  virtual ~FriendInfoRequest();

  FriendInfoRequest(const FriendInfoRequest& from);

  inline FriendInfoRequest& operator=(const FriendInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const FriendInfoRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const FriendInfoRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(FriendInfoRequest* other);

  // implements Message ----------------------------------------------

  FriendInfoRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const FriendInfoRequest& from);
  void MergeFrom(const FriendInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 friendId = 1;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::int32 friendid() const;
  inline void set_friendid(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 origin = 3;
  inline bool has_origin() const;
  inline void clear_origin();
  static const int kOriginFieldNumber = 3;
  inline ::google::protobuf::int32 origin() const;
  inline void set_origin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.FriendInfoRequest)
 private:
  inline void set_has_friendid();
  inline void clear_has_friendid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_origin();
  inline void clear_has_origin();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 friendid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 origin_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static FriendInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class FriendInfoResponse : public ::google::protobuf::MessageLite {
 public:
  FriendInfoResponse();
  virtual ~FriendInfoResponse();

  FriendInfoResponse(const FriendInfoResponse& from);

  inline FriendInfoResponse& operator=(const FriendInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const FriendInfoResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const FriendInfoResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(FriendInfoResponse* other);

  // implements Message ----------------------------------------------

  FriendInfoResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const FriendInfoResponse& from);
  void MergeFrom(const FriendInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .main.RoleInfo role = 1;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 1;
  inline const ::main::RoleInfo& role() const;
  inline ::main::RoleInfo* mutable_role();
  inline ::main::RoleInfo* release_role();
  inline void set_allocated_role(::main::RoleInfo* role);

  // @@protoc_insertion_point(class_scope:main.FriendInfoResponse)
 private:
  inline void set_has_role();
  inline void clear_has_role();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::RoleInfo* role_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static FriendInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class AgreeFriendRequest : public ::google::protobuf::MessageLite {
 public:
  AgreeFriendRequest();
  virtual ~AgreeFriendRequest();

  AgreeFriendRequest(const AgreeFriendRequest& from);

  inline AgreeFriendRequest& operator=(const AgreeFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AgreeFriendRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AgreeFriendRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AgreeFriendRequest* other);

  // implements Message ----------------------------------------------

  AgreeFriendRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AgreeFriendRequest& from);
  void MergeFrom(const AgreeFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 friendRoleId = 1;
  inline bool has_friendroleid() const;
  inline void clear_friendroleid();
  static const int kFriendRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 friendroleid() const;
  inline void set_friendroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.AgreeFriendRequest)
 private:
  inline void set_has_friendroleid();
  inline void clear_has_friendroleid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 friendroleid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static AgreeFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class AgreeFriendResponse : public ::google::protobuf::MessageLite {
 public:
  AgreeFriendResponse();
  virtual ~AgreeFriendResponse();

  AgreeFriendResponse(const AgreeFriendResponse& from);

  inline AgreeFriendResponse& operator=(const AgreeFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AgreeFriendResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AgreeFriendResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AgreeFriendResponse* other);

  // implements Message ----------------------------------------------

  AgreeFriendResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AgreeFriendResponse& from);
  void MergeFrom(const AgreeFriendResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional .main.FriendProto friendProto = 2;
  inline bool has_friendproto() const;
  inline void clear_friendproto();
  static const int kFriendProtoFieldNumber = 2;
  inline const ::main::FriendProto& friendproto() const;
  inline ::main::FriendProto* mutable_friendproto();
  inline ::main::FriendProto* release_friendproto();
  inline void set_allocated_friendproto(::main::FriendProto* friendproto);

  // @@protoc_insertion_point(class_scope:main.AgreeFriendResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_friendproto();
  inline void clear_has_friendproto();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::FriendProto* friendproto_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static AgreeFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class AddBlockRequest : public ::google::protobuf::MessageLite {
 public:
  AddBlockRequest();
  virtual ~AddBlockRequest();

  AddBlockRequest(const AddBlockRequest& from);

  inline AddBlockRequest& operator=(const AddBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AddBlockRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AddBlockRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AddBlockRequest* other);

  // implements Message ----------------------------------------------

  AddBlockRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AddBlockRequest& from);
  void MergeFrom(const AddBlockRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 friendRoleId = 1;
  inline bool has_friendroleid() const;
  inline void clear_friendroleid();
  static const int kFriendRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 friendroleid() const;
  inline void set_friendroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.AddBlockRequest)
 private:
  inline void set_has_friendroleid();
  inline void clear_has_friendroleid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 friendroleid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static AddBlockRequest* default_instance_;
};
// -------------------------------------------------------------------

class AddBlockResponse : public ::google::protobuf::MessageLite {
 public:
  AddBlockResponse();
  virtual ~AddBlockResponse();

  AddBlockResponse(const AddBlockResponse& from);

  inline AddBlockResponse& operator=(const AddBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AddBlockResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AddBlockResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AddBlockResponse* other);

  // implements Message ----------------------------------------------

  AddBlockResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AddBlockResponse& from);
  void MergeFrom(const AddBlockResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional .main.FriendProto friendProto = 2;
  inline bool has_friendproto() const;
  inline void clear_friendproto();
  static const int kFriendProtoFieldNumber = 2;
  inline const ::main::FriendProto& friendproto() const;
  inline ::main::FriendProto* mutable_friendproto();
  inline ::main::FriendProto* release_friendproto();
  inline void set_allocated_friendproto(::main::FriendProto* friendproto);

  // @@protoc_insertion_point(class_scope:main.AddBlockResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_friendproto();
  inline void clear_has_friendproto();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::FriendProto* friendproto_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static AddBlockResponse* default_instance_;
};
// -------------------------------------------------------------------

class UnagreeFriendRequest : public ::google::protobuf::MessageLite {
 public:
  UnagreeFriendRequest();
  virtual ~UnagreeFriendRequest();

  UnagreeFriendRequest(const UnagreeFriendRequest& from);

  inline UnagreeFriendRequest& operator=(const UnagreeFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const UnagreeFriendRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UnagreeFriendRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UnagreeFriendRequest* other);

  // implements Message ----------------------------------------------

  UnagreeFriendRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UnagreeFriendRequest& from);
  void MergeFrom(const UnagreeFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 friendRoleId = 1;
  inline bool has_friendroleid() const;
  inline void clear_friendroleid();
  static const int kFriendRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 friendroleid() const;
  inline void set_friendroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.UnagreeFriendRequest)
 private:
  inline void set_has_friendroleid();
  inline void clear_has_friendroleid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 friendroleid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static UnagreeFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnagreeFriendResponse : public ::google::protobuf::MessageLite {
 public:
  UnagreeFriendResponse();
  virtual ~UnagreeFriendResponse();

  UnagreeFriendResponse(const UnagreeFriendResponse& from);

  inline UnagreeFriendResponse& operator=(const UnagreeFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const UnagreeFriendResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UnagreeFriendResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UnagreeFriendResponse* other);

  // implements Message ----------------------------------------------

  UnagreeFriendResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UnagreeFriendResponse& from);
  void MergeFrom(const UnagreeFriendResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.UnagreeFriendResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static UnagreeFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteBlockRequest : public ::google::protobuf::MessageLite {
 public:
  DeleteBlockRequest();
  virtual ~DeleteBlockRequest();

  DeleteBlockRequest(const DeleteBlockRequest& from);

  inline DeleteBlockRequest& operator=(const DeleteBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteBlockRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteBlockRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteBlockRequest* other);

  // implements Message ----------------------------------------------

  DeleteBlockRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteBlockRequest& from);
  void MergeFrom(const DeleteBlockRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 friendRoleId = 1;
  inline bool has_friendroleid() const;
  inline void clear_friendroleid();
  static const int kFriendRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 friendroleid() const;
  inline void set_friendroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.DeleteBlockRequest)
 private:
  inline void set_has_friendroleid();
  inline void clear_has_friendroleid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 friendroleid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static DeleteBlockRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteBlockResponse : public ::google::protobuf::MessageLite {
 public:
  DeleteBlockResponse();
  virtual ~DeleteBlockResponse();

  DeleteBlockResponse(const DeleteBlockResponse& from);

  inline DeleteBlockResponse& operator=(const DeleteBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteBlockResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteBlockResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteBlockResponse* other);

  // implements Message ----------------------------------------------

  DeleteBlockResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteBlockResponse& from);
  void MergeFrom(const DeleteBlockResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.DeleteBlockResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static DeleteBlockResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFriendRequest : public ::google::protobuf::MessageLite {
 public:
  DeleteFriendRequest();
  virtual ~DeleteFriendRequest();

  DeleteFriendRequest(const DeleteFriendRequest& from);

  inline DeleteFriendRequest& operator=(const DeleteFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteFriendRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteFriendRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteFriendRequest* other);

  // implements Message ----------------------------------------------

  DeleteFriendRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteFriendRequest& from);
  void MergeFrom(const DeleteFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 friendRoleId = 1;
  inline bool has_friendroleid() const;
  inline void clear_friendroleid();
  static const int kFriendRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 friendroleid() const;
  inline void set_friendroleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.DeleteFriendRequest)
 private:
  inline void set_has_friendroleid();
  inline void clear_has_friendroleid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 friendroleid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static DeleteFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteFriendResponse : public ::google::protobuf::MessageLite {
 public:
  DeleteFriendResponse();
  virtual ~DeleteFriendResponse();

  DeleteFriendResponse(const DeleteFriendResponse& from);

  inline DeleteFriendResponse& operator=(const DeleteFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteFriendResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteFriendResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteFriendResponse* other);

  // implements Message ----------------------------------------------

  DeleteFriendResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteFriendResponse& from);
  void MergeFrom(const DeleteFriendResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional .main.FriendProto friendProto = 2;
  inline bool has_friendproto() const;
  inline void clear_friendproto();
  static const int kFriendProtoFieldNumber = 2;
  inline const ::main::FriendProto& friendproto() const;
  inline ::main::FriendProto* mutable_friendproto();
  inline ::main::FriendProto* release_friendproto();
  inline void set_allocated_friendproto(::main::FriendProto* friendproto);

  // @@protoc_insertion_point(class_scope:main.DeleteFriendResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_friendproto();
  inline void clear_has_friendproto();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::FriendProto* friendproto_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static DeleteFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class expandFriendRequest : public ::google::protobuf::MessageLite {
 public:
  expandFriendRequest();
  virtual ~expandFriendRequest();

  expandFriendRequest(const expandFriendRequest& from);

  inline expandFriendRequest& operator=(const expandFriendRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const expandFriendRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const expandFriendRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(expandFriendRequest* other);

  // implements Message ----------------------------------------------

  expandFriendRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const expandFriendRequest& from);
  void MergeFrom(const expandFriendRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:main.expandFriendRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static expandFriendRequest* default_instance_;
};
// -------------------------------------------------------------------

class expandFriendResponse : public ::google::protobuf::MessageLite {
 public:
  expandFriendResponse();
  virtual ~expandFriendResponse();

  expandFriendResponse(const expandFriendResponse& from);

  inline expandFriendResponse& operator=(const expandFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const expandFriendResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const expandFriendResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(expandFriendResponse* other);

  // implements Message ----------------------------------------------

  expandFriendResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const expandFriendResponse& from);
  void MergeFrom(const expandFriendResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.expandFriendResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static expandFriendResponse* default_instance_;
};
// -------------------------------------------------------------------

class FriendProto : public ::google::protobuf::MessageLite {
 public:
  FriendProto();
  virtual ~FriendProto();

  FriendProto(const FriendProto& from);

  inline FriendProto& operator=(const FriendProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const FriendProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const FriendProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(FriendProto* other);

  // implements Message ----------------------------------------------

  FriendProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const FriendProto& from);
  void MergeFrom(const FriendProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 friendId = 2;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIdFieldNumber = 2;
  inline ::google::protobuf::int32 friendid() const;
  inline void set_friendid(::google::protobuf::int32 value);

  // optional string friendName = 3;
  inline bool has_friendname() const;
  inline void clear_friendname();
  static const int kFriendNameFieldNumber = 3;
  inline const ::std::string& friendname() const;
  inline void set_friendname(const ::std::string& value);
  inline void set_friendname(const char* value);
  inline void set_friendname(const char* value, size_t size);
  inline ::std::string* mutable_friendname();
  inline ::std::string* release_friendname();
  inline void set_allocated_friendname(::std::string* friendname);

  // optional int32 typeId = 4;
  inline bool has_typeid_() const;
  inline void clear_typeid_();
  static const int kTypeIdFieldNumber = 4;
  inline ::google::protobuf::int32 typeid_() const;
  inline void set_typeid_(::google::protobuf::int32 value);

  // optional bool isOnline = 5;
  inline bool has_isonline() const;
  inline void clear_isonline();
  static const int kIsOnlineFieldNumber = 5;
  inline bool isonline() const;
  inline void set_isonline(bool value);

  // optional int32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int64 time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // optional int32 image = 8;
  inline bool has_image() const;
  inline void clear_image();
  static const int kImageFieldNumber = 8;
  inline ::google::protobuf::int32 image() const;
  inline void set_image(::google::protobuf::int32 value);

  // optional int32 isGiftPower = 9;
  inline bool has_isgiftpower() const;
  inline void clear_isgiftpower();
  static const int kIsGiftPowerFieldNumber = 9;
  inline ::google::protobuf::int32 isgiftpower() const;
  inline void set_isgiftpower(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.FriendProto)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_friendid();
  inline void clear_has_friendid();
  inline void set_has_friendname();
  inline void clear_has_friendname();
  inline void set_has_typeid_();
  inline void clear_has_typeid_();
  inline void set_has_isonline();
  inline void clear_has_isonline();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_image();
  inline void clear_has_image();
  inline void set_has_isgiftpower();
  inline void clear_has_isgiftpower();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 friendid_;
  ::std::string* friendname_;
  ::google::protobuf::int32 typeid__;
  bool isonline_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 image_;
  ::google::protobuf::int32 isgiftpower_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static FriendProto* default_instance_;
};
// -------------------------------------------------------------------

class RoleInfo : public ::google::protobuf::MessageLite {
 public:
  RoleInfo();
  virtual ~RoleInfo();

  RoleInfo(const RoleInfo& from);

  inline RoleInfo& operator=(const RoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RoleInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RoleInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RoleInfo* other);

  // implements Message ----------------------------------------------

  RoleInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RoleInfo& from);
  void MergeFrom(const RoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string nickname = 3;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional string ssid = 4;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 4;
  inline const ::std::string& ssid() const;
  inline void set_ssid(const ::std::string& value);
  inline void set_ssid(const char* value);
  inline void set_ssid(const char* value, size_t size);
  inline ::std::string* mutable_ssid();
  inline ::std::string* release_ssid();
  inline void set_allocated_ssid(::std::string* ssid);

  // optional int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 vipLevel = 7;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 7;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // optional int32 coins = 8;
  inline bool has_coins() const;
  inline void clear_coins();
  static const int kCoinsFieldNumber = 8;
  inline ::google::protobuf::int32 coins() const;
  inline void set_coins(::google::protobuf::int32 value);

  // optional int32 gold = 9;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 9;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 country = 10;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 10;
  inline ::google::protobuf::int32 country() const;
  inline void set_country(::google::protobuf::int32 value);

  // optional int32 image = 11;
  inline bool has_image() const;
  inline void clear_image();
  static const int kImageFieldNumber = 11;
  inline ::google::protobuf::int32 image() const;
  inline void set_image(::google::protobuf::int32 value);

  // optional int32 power = 12;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 12;
  inline ::google::protobuf::int32 power() const;
  inline void set_power(::google::protobuf::int32 value);

  // optional int32 combatValue = 13;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatValueFieldNumber = 13;
  inline ::google::protobuf::int32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::int32 value);

  // optional int32 bagSize = 14;
  inline bool has_bagsize() const;
  inline void clear_bagsize();
  static const int kBagSizeFieldNumber = 14;
  inline ::google::protobuf::int32 bagsize() const;
  inline void set_bagsize(::google::protobuf::int32 value);

  // optional string pvpRankName = 15;
  inline bool has_pvprankname() const;
  inline void clear_pvprankname();
  static const int kPvpRankNameFieldNumber = 15;
  inline const ::std::string& pvprankname() const;
  inline void set_pvprankname(const ::std::string& value);
  inline void set_pvprankname(const char* value);
  inline void set_pvprankname(const char* value, size_t size);
  inline ::std::string* mutable_pvprankname();
  inline ::std::string* release_pvprankname();
  inline void set_allocated_pvprankname(::std::string* pvprankname);

  // optional int32 modifyNickNameCount = 16;
  inline bool has_modifynicknamecount() const;
  inline void clear_modifynicknamecount();
  static const int kModifyNickNameCountFieldNumber = 16;
  inline ::google::protobuf::int32 modifynicknamecount() const;
  inline void set_modifynicknamecount(::google::protobuf::int32 value);

  // optional int32 prestige = 17;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 17;
  inline ::google::protobuf::int32 prestige() const;
  inline void set_prestige(::google::protobuf::int32 value);

  // optional int32 enterPVPCount = 18;
  inline bool has_enterpvpcount() const;
  inline void clear_enterpvpcount();
  static const int kEnterPVPCountFieldNumber = 18;
  inline ::google::protobuf::int32 enterpvpcount() const;
  inline void set_enterpvpcount(::google::protobuf::int32 value);

  // optional int32 pvpWinCount = 19;
  inline bool has_pvpwincount() const;
  inline void clear_pvpwincount();
  static const int kPvpWinCountFieldNumber = 19;
  inline ::google::protobuf::int32 pvpwincount() const;
  inline void set_pvpwincount(::google::protobuf::int32 value);

  // optional int32 pvpTop = 20;
  inline bool has_pvptop() const;
  inline void clear_pvptop();
  static const int kPvpTopFieldNumber = 20;
  inline ::google::protobuf::int32 pvptop() const;
  inline void set_pvptop(::google::protobuf::int32 value);

  // optional int32 governing = 21;
  inline bool has_governing() const;
  inline void clear_governing();
  static const int kGoverningFieldNumber = 21;
  inline ::google::protobuf::int32 governing() const;
  inline void set_governing(::google::protobuf::int32 value);

  // optional int32 GoverningLimit = 22;
  inline bool has_governinglimit() const;
  inline void clear_governinglimit();
  static const int kGoverningLimitFieldNumber = 22;
  inline ::google::protobuf::int32 governinglimit() const;
  inline void set_governinglimit(::google::protobuf::int32 value);

  // optional int32 speed = 23;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 23;
  inline ::google::protobuf::int32 speed() const;
  inline void set_speed(::google::protobuf::int32 value);

  // optional int32 hp = 24;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 24;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);

  // optional .main.RoleTeamInfo roleTeamInfo = 25;
  inline bool has_roleteaminfo() const;
  inline void clear_roleteaminfo();
  static const int kRoleTeamInfoFieldNumber = 25;
  inline const ::main::RoleTeamInfo& roleteaminfo() const;
  inline ::main::RoleTeamInfo* mutable_roleteaminfo();
  inline ::main::RoleTeamInfo* release_roleteaminfo();
  inline void set_allocated_roleteaminfo(::main::RoleTeamInfo* roleteaminfo);

  // @@protoc_insertion_point(class_scope:main.RoleInfo)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_coins();
  inline void clear_has_coins();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_country();
  inline void clear_has_country();
  inline void set_has_image();
  inline void clear_has_image();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_combatvalue();
  inline void clear_has_combatvalue();
  inline void set_has_bagsize();
  inline void clear_has_bagsize();
  inline void set_has_pvprankname();
  inline void clear_has_pvprankname();
  inline void set_has_modifynicknamecount();
  inline void clear_has_modifynicknamecount();
  inline void set_has_prestige();
  inline void clear_has_prestige();
  inline void set_has_enterpvpcount();
  inline void clear_has_enterpvpcount();
  inline void set_has_pvpwincount();
  inline void clear_has_pvpwincount();
  inline void set_has_pvptop();
  inline void clear_has_pvptop();
  inline void set_has_governing();
  inline void clear_has_governing();
  inline void set_has_governinglimit();
  inline void clear_has_governinglimit();
  inline void set_has_speed();
  inline void clear_has_speed();
  inline void set_has_hp();
  inline void clear_has_hp();
  inline void set_has_roleteaminfo();
  inline void clear_has_roleteaminfo();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* nickname_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 exp_;
  ::std::string* ssid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 coins_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 country_;
  ::google::protobuf::int32 image_;
  ::google::protobuf::int32 power_;
  ::google::protobuf::int32 combatvalue_;
  ::std::string* pvprankname_;
  ::google::protobuf::int32 bagsize_;
  ::google::protobuf::int32 modifynicknamecount_;
  ::google::protobuf::int32 prestige_;
  ::google::protobuf::int32 enterpvpcount_;
  ::google::protobuf::int32 pvpwincount_;
  ::google::protobuf::int32 pvptop_;
  ::google::protobuf::int32 governing_;
  ::google::protobuf::int32 governinglimit_;
  ::google::protobuf::int32 speed_;
  ::google::protobuf::int32 hp_;
  ::main::RoleTeamInfo* roleteaminfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static RoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoleTeamInfo : public ::google::protobuf::MessageLite {
 public:
  RoleTeamInfo();
  virtual ~RoleTeamInfo();

  RoleTeamInfo(const RoleTeamInfo& from);

  inline RoleTeamInfo& operator=(const RoleTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const RoleTeamInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const RoleTeamInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(RoleTeamInfo* other);

  // implements Message ----------------------------------------------

  RoleTeamInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const RoleTeamInfo& from);
  void MergeFrom(const RoleTeamInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 redSoldierId = 1;
  inline bool has_redsoldierid() const;
  inline void clear_redsoldierid();
  static const int kRedSoldierIdFieldNumber = 1;
  inline ::google::protobuf::int32 redsoldierid() const;
  inline void set_redsoldierid(::google::protobuf::int32 value);

  // optional int32 greenSoldierId = 2;
  inline bool has_greensoldierid() const;
  inline void clear_greensoldierid();
  static const int kGreenSoldierIdFieldNumber = 2;
  inline ::google::protobuf::int32 greensoldierid() const;
  inline void set_greensoldierid(::google::protobuf::int32 value);

  // optional int32 blueSoldierId = 3;
  inline bool has_bluesoldierid() const;
  inline void clear_bluesoldierid();
  static const int kBlueSoldierIdFieldNumber = 3;
  inline ::google::protobuf::int32 bluesoldierid() const;
  inline void set_bluesoldierid(::google::protobuf::int32 value);

  // optional int32 lordOfficerId = 4;
  inline bool has_lordofficerid() const;
  inline void clear_lordofficerid();
  static const int kLordOfficerIdFieldNumber = 4;
  inline ::google::protobuf::int32 lordofficerid() const;
  inline void set_lordofficerid(::google::protobuf::int32 value);

  // repeated .main.SoldierCardItemProto soldierCardItemProto = 5;
  inline int soldiercarditemproto_size() const;
  inline void clear_soldiercarditemproto();
  static const int kSoldierCardItemProtoFieldNumber = 5;
  inline const ::main::SoldierCardItemProto& soldiercarditemproto(int index) const;
  inline ::main::SoldierCardItemProto* mutable_soldiercarditemproto(int index);
  inline ::main::SoldierCardItemProto* add_soldiercarditemproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::SoldierCardItemProto >&
      soldiercarditemproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::SoldierCardItemProto >*
      mutable_soldiercarditemproto();

  // repeated .main.TeamOfficerCardItemInfo teamOfficerCardItemInfo = 6;
  inline int teamofficercarditeminfo_size() const;
  inline void clear_teamofficercarditeminfo();
  static const int kTeamOfficerCardItemInfoFieldNumber = 6;
  inline const ::main::TeamOfficerCardItemInfo& teamofficercarditeminfo(int index) const;
  inline ::main::TeamOfficerCardItemInfo* mutable_teamofficercarditeminfo(int index);
  inline ::main::TeamOfficerCardItemInfo* add_teamofficercarditeminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::main::TeamOfficerCardItemInfo >&
      teamofficercarditeminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::TeamOfficerCardItemInfo >*
      mutable_teamofficercarditeminfo();

  // repeated .main.PvpOfficerCardItemInfo pvpOfficerCardItemInfo = 7;
  inline int pvpofficercarditeminfo_size() const;
  inline void clear_pvpofficercarditeminfo();
  static const int kPvpOfficerCardItemInfoFieldNumber = 7;
  inline const ::main::PvpOfficerCardItemInfo& pvpofficercarditeminfo(int index) const;
  inline ::main::PvpOfficerCardItemInfo* mutable_pvpofficercarditeminfo(int index);
  inline ::main::PvpOfficerCardItemInfo* add_pvpofficercarditeminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::main::PvpOfficerCardItemInfo >&
      pvpofficercarditeminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::PvpOfficerCardItemInfo >*
      mutable_pvpofficercarditeminfo();

  // @@protoc_insertion_point(class_scope:main.RoleTeamInfo)
 private:
  inline void set_has_redsoldierid();
  inline void clear_has_redsoldierid();
  inline void set_has_greensoldierid();
  inline void clear_has_greensoldierid();
  inline void set_has_bluesoldierid();
  inline void clear_has_bluesoldierid();
  inline void set_has_lordofficerid();
  inline void clear_has_lordofficerid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 redsoldierid_;
  ::google::protobuf::int32 greensoldierid_;
  ::google::protobuf::int32 bluesoldierid_;
  ::google::protobuf::int32 lordofficerid_;
  ::google::protobuf::RepeatedPtrField< ::main::SoldierCardItemProto > soldiercarditemproto_;
  ::google::protobuf::RepeatedPtrField< ::main::TeamOfficerCardItemInfo > teamofficercarditeminfo_;
  ::google::protobuf::RepeatedPtrField< ::main::PvpOfficerCardItemInfo > pvpofficercarditeminfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static RoleTeamInfo* default_instance_;
};
// -------------------------------------------------------------------

class TeamOfficerCardItemInfo : public ::google::protobuf::MessageLite {
 public:
  TeamOfficerCardItemInfo();
  virtual ~TeamOfficerCardItemInfo();

  TeamOfficerCardItemInfo(const TeamOfficerCardItemInfo& from);

  inline TeamOfficerCardItemInfo& operator=(const TeamOfficerCardItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TeamOfficerCardItemInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TeamOfficerCardItemInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TeamOfficerCardItemInfo* other);

  // implements Message ----------------------------------------------

  TeamOfficerCardItemInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TeamOfficerCardItemInfo& from);
  void MergeFrom(const TeamOfficerCardItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .main.OfficerCardItemProto baseOfficerCardInfoProto = 1;
  inline bool has_baseofficercardinfoproto() const;
  inline void clear_baseofficercardinfoproto();
  static const int kBaseOfficerCardInfoProtoFieldNumber = 1;
  inline const ::main::OfficerCardItemProto& baseofficercardinfoproto() const;
  inline ::main::OfficerCardItemProto* mutable_baseofficercardinfoproto();
  inline ::main::OfficerCardItemProto* release_baseofficercardinfoproto();
  inline void set_allocated_baseofficercardinfoproto(::main::OfficerCardItemProto* baseofficercardinfoproto);

  // repeated .main.EquipmentCardItemProto baseEquipmentCardItemProto = 2;
  inline int baseequipmentcarditemproto_size() const;
  inline void clear_baseequipmentcarditemproto();
  static const int kBaseEquipmentCardItemProtoFieldNumber = 2;
  inline const ::main::EquipmentCardItemProto& baseequipmentcarditemproto(int index) const;
  inline ::main::EquipmentCardItemProto* mutable_baseequipmentcarditemproto(int index);
  inline ::main::EquipmentCardItemProto* add_baseequipmentcarditemproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::EquipmentCardItemProto >&
      baseequipmentcarditemproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::EquipmentCardItemProto >*
      mutable_baseequipmentcarditemproto();

  // repeated .main.ReasonInfo reasonInfo = 3;
  inline int reasoninfo_size() const;
  inline void clear_reasoninfo();
  static const int kReasonInfoFieldNumber = 3;
  inline const ::main::ReasonInfo& reasoninfo(int index) const;
  inline ::main::ReasonInfo* mutable_reasoninfo(int index);
  inline ::main::ReasonInfo* add_reasoninfo();
  inline const ::google::protobuf::RepeatedPtrField< ::main::ReasonInfo >&
      reasoninfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::ReasonInfo >*
      mutable_reasoninfo();

  // @@protoc_insertion_point(class_scope:main.TeamOfficerCardItemInfo)
 private:
  inline void set_has_baseofficercardinfoproto();
  inline void clear_has_baseofficercardinfoproto();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::OfficerCardItemProto* baseofficercardinfoproto_;
  ::google::protobuf::RepeatedPtrField< ::main::EquipmentCardItemProto > baseequipmentcarditemproto_;
  ::google::protobuf::RepeatedPtrField< ::main::ReasonInfo > reasoninfo_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static TeamOfficerCardItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class PvpOfficerCardItemInfo : public ::google::protobuf::MessageLite {
 public:
  PvpOfficerCardItemInfo();
  virtual ~PvpOfficerCardItemInfo();

  PvpOfficerCardItemInfo(const PvpOfficerCardItemInfo& from);

  inline PvpOfficerCardItemInfo& operator=(const PvpOfficerCardItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PvpOfficerCardItemInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PvpOfficerCardItemInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PvpOfficerCardItemInfo* other);

  // implements Message ----------------------------------------------

  PvpOfficerCardItemInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PvpOfficerCardItemInfo& from);
  void MergeFrom(const PvpOfficerCardItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itmeId = 1;
  inline bool has_itmeid() const;
  inline void clear_itmeid();
  static const int kItmeIdFieldNumber = 1;
  inline ::google::protobuf::int32 itmeid() const;
  inline void set_itmeid(::google::protobuf::int32 value);

  // optional int32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.PvpOfficerCardItemInfo)
 private:
  inline void set_has_itmeid();
  inline void clear_has_itmeid();
  inline void set_has_level();
  inline void clear_has_level();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 itmeid_;
  ::google::protobuf::int32 level_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static PvpOfficerCardItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReasonInfo : public ::google::protobuf::MessageLite {
 public:
  ReasonInfo();
  virtual ~ReasonInfo();

  ReasonInfo(const ReasonInfo& from);

  inline ReasonInfo& operator=(const ReasonInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ReasonInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ReasonInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ReasonInfo* other);

  // implements Message ----------------------------------------------

  ReasonInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ReasonInfo& from);
  void MergeFrom(const ReasonInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 reasonId = 1;
  inline bool has_reasonid() const;
  inline void clear_reasonid();
  static const int kReasonIdFieldNumber = 1;
  inline ::google::protobuf::int32 reasonid() const;
  inline void set_reasonid(::google::protobuf::int32 value);

  // optional int32 isActivate = 2;
  inline bool has_isactivate() const;
  inline void clear_isactivate();
  static const int kIsActivateFieldNumber = 2;
  inline ::google::protobuf::int32 isactivate() const;
  inline void set_isactivate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ReasonInfo)
 private:
  inline void set_has_reasonid();
  inline void clear_has_reasonid();
  inline void set_has_isactivate();
  inline void clear_has_isactivate();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 reasonid_;
  ::google::protobuf::int32 isactivate_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static ReasonInfo* default_instance_;
};
// -------------------------------------------------------------------

class PowerGiftRequest : public ::google::protobuf::MessageLite {
 public:
  PowerGiftRequest();
  virtual ~PowerGiftRequest();

  PowerGiftRequest(const PowerGiftRequest& from);

  inline PowerGiftRequest& operator=(const PowerGiftRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PowerGiftRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PowerGiftRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PowerGiftRequest* other);

  // implements Message ----------------------------------------------

  PowerGiftRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PowerGiftRequest& from);
  void MergeFrom(const PowerGiftRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 friendId = 1;
  inline bool has_friendid() const;
  inline void clear_friendid();
  static const int kFriendIdFieldNumber = 1;
  inline ::google::protobuf::int32 friendid() const;
  inline void set_friendid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.PowerGiftRequest)
 private:
  inline void set_has_friendid();
  inline void clear_has_friendid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 friendid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static PowerGiftRequest* default_instance_;
};
// -------------------------------------------------------------------

class PowerGiftResponse : public ::google::protobuf::MessageLite {
 public:
  PowerGiftResponse();
  virtual ~PowerGiftResponse();

  PowerGiftResponse(const PowerGiftResponse& from);

  inline PowerGiftResponse& operator=(const PowerGiftResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PowerGiftResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PowerGiftResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PowerGiftResponse* other);

  // implements Message ----------------------------------------------

  PowerGiftResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PowerGiftResponse& from);
  void MergeFrom(const PowerGiftResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.PowerGiftResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static PowerGiftResponse* default_instance_;
};
// -------------------------------------------------------------------

class AcceptPowerGiftResponse : public ::google::protobuf::MessageLite {
 public:
  AcceptPowerGiftResponse();
  virtual ~AcceptPowerGiftResponse();

  AcceptPowerGiftResponse(const AcceptPowerGiftResponse& from);

  inline AcceptPowerGiftResponse& operator=(const AcceptPowerGiftResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AcceptPowerGiftResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AcceptPowerGiftResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AcceptPowerGiftResponse* other);

  // implements Message ----------------------------------------------

  AcceptPowerGiftResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AcceptPowerGiftResponse& from);
  void MergeFrom(const AcceptPowerGiftResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .main.PowerGiftProto powerGift = 1;
  inline bool has_powergift() const;
  inline void clear_powergift();
  static const int kPowerGiftFieldNumber = 1;
  inline const ::main::PowerGiftProto& powergift() const;
  inline ::main::PowerGiftProto* mutable_powergift();
  inline ::main::PowerGiftProto* release_powergift();
  inline void set_allocated_powergift(::main::PowerGiftProto* powergift);

  // @@protoc_insertion_point(class_scope:main.AcceptPowerGiftResponse)
 private:
  inline void set_has_powergift();
  inline void clear_has_powergift();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::PowerGiftProto* powergift_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static AcceptPowerGiftResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetPowerGiftRequest : public ::google::protobuf::MessageLite {
 public:
  GetPowerGiftRequest();
  virtual ~GetPowerGiftRequest();

  GetPowerGiftRequest(const GetPowerGiftRequest& from);

  inline GetPowerGiftRequest& operator=(const GetPowerGiftRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetPowerGiftRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetPowerGiftRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetPowerGiftRequest* other);

  // implements Message ----------------------------------------------

  GetPowerGiftRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetPowerGiftRequest& from);
  void MergeFrom(const GetPowerGiftRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 giftId = 1;
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIdFieldNumber = 1;
  inline ::google::protobuf::int32 giftid() const;
  inline void set_giftid(::google::protobuf::int32 value);

  // optional int64 giftTime = 2;
  inline bool has_gifttime() const;
  inline void clear_gifttime();
  static const int kGiftTimeFieldNumber = 2;
  inline ::google::protobuf::int64 gifttime() const;
  inline void set_gifttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:main.GetPowerGiftRequest)
 private:
  inline void set_has_giftid();
  inline void clear_has_giftid();
  inline void set_has_gifttime();
  inline void clear_has_gifttime();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 gifttime_;
  ::google::protobuf::int32 giftid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static GetPowerGiftRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetPowerGiftResponse : public ::google::protobuf::MessageLite {
 public:
  GetPowerGiftResponse();
  virtual ~GetPowerGiftResponse();

  GetPowerGiftResponse(const GetPowerGiftResponse& from);

  inline GetPowerGiftResponse& operator=(const GetPowerGiftResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetPowerGiftResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetPowerGiftResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetPowerGiftResponse* other);

  // implements Message ----------------------------------------------

  GetPowerGiftResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetPowerGiftResponse& from);
  void MergeFrom(const GetPowerGiftResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.GetPowerGiftResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static GetPowerGiftResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetAllPowerGiftRequest : public ::google::protobuf::MessageLite {
 public:
  GetAllPowerGiftRequest();
  virtual ~GetAllPowerGiftRequest();

  GetAllPowerGiftRequest(const GetAllPowerGiftRequest& from);

  inline GetAllPowerGiftRequest& operator=(const GetAllPowerGiftRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetAllPowerGiftRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetAllPowerGiftRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetAllPowerGiftRequest* other);

  // implements Message ----------------------------------------------

  GetAllPowerGiftRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetAllPowerGiftRequest& from);
  void MergeFrom(const GetAllPowerGiftRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:main.GetAllPowerGiftRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static GetAllPowerGiftRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetAllPowerGiftResponse : public ::google::protobuf::MessageLite {
 public:
  GetAllPowerGiftResponse();
  virtual ~GetAllPowerGiftResponse();

  GetAllPowerGiftResponse(const GetAllPowerGiftResponse& from);

  inline GetAllPowerGiftResponse& operator=(const GetAllPowerGiftResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const GetAllPowerGiftResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const GetAllPowerGiftResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(GetAllPowerGiftResponse* other);

  // implements Message ----------------------------------------------

  GetAllPowerGiftResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const GetAllPowerGiftResponse& from);
  void MergeFrom(const GetAllPowerGiftResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // repeated .main.PowerGiftProto powerGift = 2;
  inline int powergift_size() const;
  inline void clear_powergift();
  static const int kPowerGiftFieldNumber = 2;
  inline const ::main::PowerGiftProto& powergift(int index) const;
  inline ::main::PowerGiftProto* mutable_powergift(int index);
  inline ::main::PowerGiftProto* add_powergift();
  inline const ::google::protobuf::RepeatedPtrField< ::main::PowerGiftProto >&
      powergift() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::PowerGiftProto >*
      mutable_powergift();

  // @@protoc_insertion_point(class_scope:main.GetAllPowerGiftResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::PowerGiftProto > powergift_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static GetAllPowerGiftResponse* default_instance_;
};
// -------------------------------------------------------------------

class PowerGiftListResponse : public ::google::protobuf::MessageLite {
 public:
  PowerGiftListResponse();
  virtual ~PowerGiftListResponse();

  PowerGiftListResponse(const PowerGiftListResponse& from);

  inline PowerGiftListResponse& operator=(const PowerGiftListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PowerGiftListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PowerGiftListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PowerGiftListResponse* other);

  // implements Message ----------------------------------------------

  PowerGiftListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PowerGiftListResponse& from);
  void MergeFrom(const PowerGiftListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.PowerGiftProto powerGift = 1;
  inline int powergift_size() const;
  inline void clear_powergift();
  static const int kPowerGiftFieldNumber = 1;
  inline const ::main::PowerGiftProto& powergift(int index) const;
  inline ::main::PowerGiftProto* mutable_powergift(int index);
  inline ::main::PowerGiftProto* add_powergift();
  inline const ::google::protobuf::RepeatedPtrField< ::main::PowerGiftProto >&
      powergift() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::PowerGiftProto >*
      mutable_powergift();

  // @@protoc_insertion_point(class_scope:main.PowerGiftListResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::PowerGiftProto > powergift_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static PowerGiftListResponse* default_instance_;
};
// -------------------------------------------------------------------

class PowerGiftProto : public ::google::protobuf::MessageLite {
 public:
  PowerGiftProto();
  virtual ~PowerGiftProto();

  PowerGiftProto(const PowerGiftProto& from);

  inline PowerGiftProto& operator=(const PowerGiftProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const PowerGiftProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const PowerGiftProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(PowerGiftProto* other);

  // implements Message ----------------------------------------------

  PowerGiftProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const PowerGiftProto& from);
  void MergeFrom(const PowerGiftProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional int32 giftId = 2;
  inline bool has_giftid() const;
  inline void clear_giftid();
  static const int kGiftIdFieldNumber = 2;
  inline ::google::protobuf::int32 giftid() const;
  inline void set_giftid(::google::protobuf::int32 value);

  // optional int64 giftTime = 3;
  inline bool has_gifttime() const;
  inline void clear_gifttime();
  static const int kGiftTimeFieldNumber = 3;
  inline ::google::protobuf::int64 gifttime() const;
  inline void set_gifttime(::google::protobuf::int64 value);

  // optional string giftName = 4;
  inline bool has_giftname() const;
  inline void clear_giftname();
  static const int kGiftNameFieldNumber = 4;
  inline const ::std::string& giftname() const;
  inline void set_giftname(const ::std::string& value);
  inline void set_giftname(const char* value);
  inline void set_giftname(const char* value, size_t size);
  inline ::std::string* mutable_giftname();
  inline ::std::string* release_giftname();
  inline void set_allocated_giftname(::std::string* giftname);

  // optional int32 giftLevel = 5;
  inline bool has_giftlevel() const;
  inline void clear_giftlevel();
  static const int kGiftLevelFieldNumber = 5;
  inline ::google::protobuf::int32 giftlevel() const;
  inline void set_giftlevel(::google::protobuf::int32 value);

  // optional int32 giftImage = 6;
  inline bool has_giftimage() const;
  inline void clear_giftimage();
  static const int kGiftImageFieldNumber = 6;
  inline ::google::protobuf::int32 giftimage() const;
  inline void set_giftimage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.PowerGiftProto)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_giftid();
  inline void clear_has_giftid();
  inline void set_has_gifttime();
  inline void clear_has_gifttime();
  inline void set_has_giftname();
  inline void clear_has_giftname();
  inline void set_has_giftlevel();
  inline void clear_has_giftlevel();
  inline void set_has_giftimage();
  inline void clear_has_giftimage();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 giftid_;
  ::google::protobuf::int64 gifttime_;
  ::std::string* giftname_;
  ::google::protobuf::int32 giftlevel_;
  ::google::protobuf::int32 giftimage_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_FriendModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_FriendModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_FriendModule_2eproto();
  friend void protobuf_ShutdownFile_FriendModule_2eproto();

  void InitAsDefaultInstance();
  static PowerGiftProto* default_instance_;
};
// ===================================================================


// ===================================================================

// AddFriendRequest

// optional int32 friendRoleId = 1;
inline bool AddFriendRequest::has_friendroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendRequest::set_has_friendroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendRequest::clear_has_friendroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendRequest::clear_friendroleid() {
  friendroleid_ = 0;
  clear_has_friendroleid();
}
inline ::google::protobuf::int32 AddFriendRequest::friendroleid() const {
  // @@protoc_insertion_point(field_get:main.AddFriendRequest.friendRoleId)
  return friendroleid_;
}
inline void AddFriendRequest::set_friendroleid(::google::protobuf::int32 value) {
  set_has_friendroleid();
  friendroleid_ = value;
  // @@protoc_insertion_point(field_set:main.AddFriendRequest.friendRoleId)
}

// -------------------------------------------------------------------

// AddFriendResponse

// optional int32 state = 1;
inline bool AddFriendResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFriendResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFriendResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFriendResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AddFriendResponse::state() const {
  // @@protoc_insertion_point(field_get:main.AddFriendResponse.state)
  return state_;
}
inline void AddFriendResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.AddFriendResponse.state)
}

// optional .main.FriendProto friendProto = 2;
inline bool AddFriendResponse::has_friendproto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFriendResponse::set_has_friendproto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFriendResponse::clear_has_friendproto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFriendResponse::clear_friendproto() {
  if (friendproto_ != NULL) friendproto_->::main::FriendProto::Clear();
  clear_has_friendproto();
}
inline const ::main::FriendProto& AddFriendResponse::friendproto() const {
  // @@protoc_insertion_point(field_get:main.AddFriendResponse.friendProto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return friendproto_ != NULL ? *friendproto_ : *default_instance().friendproto_;
#else
  return friendproto_ != NULL ? *friendproto_ : *default_instance_->friendproto_;
#endif
}
inline ::main::FriendProto* AddFriendResponse::mutable_friendproto() {
  set_has_friendproto();
  if (friendproto_ == NULL) friendproto_ = new ::main::FriendProto;
  // @@protoc_insertion_point(field_mutable:main.AddFriendResponse.friendProto)
  return friendproto_;
}
inline ::main::FriendProto* AddFriendResponse::release_friendproto() {
  clear_has_friendproto();
  ::main::FriendProto* temp = friendproto_;
  friendproto_ = NULL;
  return temp;
}
inline void AddFriendResponse::set_allocated_friendproto(::main::FriendProto* friendproto) {
  delete friendproto_;
  friendproto_ = friendproto;
  if (friendproto) {
    set_has_friendproto();
  } else {
    clear_has_friendproto();
  }
  // @@protoc_insertion_point(field_set_allocated:main.AddFriendResponse.friendProto)
}

// -------------------------------------------------------------------

// SearchFriendByNameRequest

// optional string nickName = 1;
inline bool SearchFriendByNameRequest::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchFriendByNameRequest::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchFriendByNameRequest::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchFriendByNameRequest::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& SearchFriendByNameRequest::nickname() const {
  // @@protoc_insertion_point(field_get:main.SearchFriendByNameRequest.nickName)
  return *nickname_;
}
inline void SearchFriendByNameRequest::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:main.SearchFriendByNameRequest.nickName)
}
inline void SearchFriendByNameRequest::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SearchFriendByNameRequest.nickName)
}
inline void SearchFriendByNameRequest::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SearchFriendByNameRequest.nickName)
}
inline ::std::string* SearchFriendByNameRequest::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SearchFriendByNameRequest.nickName)
  return nickname_;
}
inline ::std::string* SearchFriendByNameRequest::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SearchFriendByNameRequest::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SearchFriendByNameRequest.nickName)
}

// optional int32 pageNum = 2;
inline bool SearchFriendByNameRequest::has_pagenum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SearchFriendByNameRequest::set_has_pagenum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SearchFriendByNameRequest::clear_has_pagenum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SearchFriendByNameRequest::clear_pagenum() {
  pagenum_ = 0;
  clear_has_pagenum();
}
inline ::google::protobuf::int32 SearchFriendByNameRequest::pagenum() const {
  // @@protoc_insertion_point(field_get:main.SearchFriendByNameRequest.pageNum)
  return pagenum_;
}
inline void SearchFriendByNameRequest::set_pagenum(::google::protobuf::int32 value) {
  set_has_pagenum();
  pagenum_ = value;
  // @@protoc_insertion_point(field_set:main.SearchFriendByNameRequest.pageNum)
}

// -------------------------------------------------------------------

// SearchFriendByNameResponse

// repeated .main.FriendProto FriendList = 1;
inline int SearchFriendByNameResponse::friendlist_size() const {
  return friendlist_.size();
}
inline void SearchFriendByNameResponse::clear_friendlist() {
  friendlist_.Clear();
}
inline const ::main::FriendProto& SearchFriendByNameResponse::friendlist(int index) const {
  // @@protoc_insertion_point(field_get:main.SearchFriendByNameResponse.FriendList)
  return friendlist_.Get(index);
}
inline ::main::FriendProto* SearchFriendByNameResponse::mutable_friendlist(int index) {
  // @@protoc_insertion_point(field_mutable:main.SearchFriendByNameResponse.FriendList)
  return friendlist_.Mutable(index);
}
inline ::main::FriendProto* SearchFriendByNameResponse::add_friendlist() {
  // @@protoc_insertion_point(field_add:main.SearchFriendByNameResponse.FriendList)
  return friendlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::FriendProto >&
SearchFriendByNameResponse::friendlist() const {
  // @@protoc_insertion_point(field_list:main.SearchFriendByNameResponse.FriendList)
  return friendlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::FriendProto >*
SearchFriendByNameResponse::mutable_friendlist() {
  // @@protoc_insertion_point(field_mutable_list:main.SearchFriendByNameResponse.FriendList)
  return &friendlist_;
}

// -------------------------------------------------------------------

// SearchFriendByInviteCodeRequest

// optional string inviteCode = 1;
inline bool SearchFriendByInviteCodeRequest::has_invitecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchFriendByInviteCodeRequest::set_has_invitecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchFriendByInviteCodeRequest::clear_has_invitecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchFriendByInviteCodeRequest::clear_invitecode() {
  if (invitecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_->clear();
  }
  clear_has_invitecode();
}
inline const ::std::string& SearchFriendByInviteCodeRequest::invitecode() const {
  // @@protoc_insertion_point(field_get:main.SearchFriendByInviteCodeRequest.inviteCode)
  return *invitecode_;
}
inline void SearchFriendByInviteCodeRequest::set_invitecode(const ::std::string& value) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(value);
  // @@protoc_insertion_point(field_set:main.SearchFriendByInviteCodeRequest.inviteCode)
}
inline void SearchFriendByInviteCodeRequest::set_invitecode(const char* value) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SearchFriendByInviteCodeRequest.inviteCode)
}
inline void SearchFriendByInviteCodeRequest::set_invitecode(const char* value, size_t size) {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  invitecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SearchFriendByInviteCodeRequest.inviteCode)
}
inline ::std::string* SearchFriendByInviteCodeRequest::mutable_invitecode() {
  set_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    invitecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SearchFriendByInviteCodeRequest.inviteCode)
  return invitecode_;
}
inline ::std::string* SearchFriendByInviteCodeRequest::release_invitecode() {
  clear_has_invitecode();
  if (invitecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = invitecode_;
    invitecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SearchFriendByInviteCodeRequest::set_allocated_invitecode(::std::string* invitecode) {
  if (invitecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete invitecode_;
  }
  if (invitecode) {
    set_has_invitecode();
    invitecode_ = invitecode;
  } else {
    clear_has_invitecode();
    invitecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SearchFriendByInviteCodeRequest.inviteCode)
}

// -------------------------------------------------------------------

// SearchFriendByInviteCodeResponse

// optional .main.FriendProto friend = 1;
inline bool SearchFriendByInviteCodeResponse::has_friend_() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SearchFriendByInviteCodeResponse::set_has_friend_() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SearchFriendByInviteCodeResponse::clear_has_friend_() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SearchFriendByInviteCodeResponse::clear_friend_() {
  if (friend__ != NULL) friend__->::main::FriendProto::Clear();
  clear_has_friend_();
}
inline const ::main::FriendProto& SearchFriendByInviteCodeResponse::friend_() const {
  // @@protoc_insertion_point(field_get:main.SearchFriendByInviteCodeResponse.friend)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return friend__ != NULL ? *friend__ : *default_instance().friend__;
#else
  return friend__ != NULL ? *friend__ : *default_instance_->friend__;
#endif
}
inline ::main::FriendProto* SearchFriendByInviteCodeResponse::mutable_friend_() {
  set_has_friend_();
  if (friend__ == NULL) friend__ = new ::main::FriendProto;
  // @@protoc_insertion_point(field_mutable:main.SearchFriendByInviteCodeResponse.friend)
  return friend__;
}
inline ::main::FriendProto* SearchFriendByInviteCodeResponse::release_friend_() {
  clear_has_friend_();
  ::main::FriendProto* temp = friend__;
  friend__ = NULL;
  return temp;
}
inline void SearchFriendByInviteCodeResponse::set_allocated_friend_(::main::FriendProto* friend_) {
  delete friend__;
  friend__ = friend_;
  if (friend_) {
    set_has_friend_();
  } else {
    clear_has_friend_();
  }
  // @@protoc_insertion_point(field_set_allocated:main.SearchFriendByInviteCodeResponse.friend)
}

// -------------------------------------------------------------------

// FriendInfoRequest

// optional int32 friendId = 1;
inline bool FriendInfoRequest::has_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendInfoRequest::set_has_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendInfoRequest::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendInfoRequest::clear_friendid() {
  friendid_ = 0;
  clear_has_friendid();
}
inline ::google::protobuf::int32 FriendInfoRequest::friendid() const {
  // @@protoc_insertion_point(field_get:main.FriendInfoRequest.friendId)
  return friendid_;
}
inline void FriendInfoRequest::set_friendid(::google::protobuf::int32 value) {
  set_has_friendid();
  friendid_ = value;
  // @@protoc_insertion_point(field_set:main.FriendInfoRequest.friendId)
}

// optional int32 type = 2;
inline bool FriendInfoRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendInfoRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendInfoRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendInfoRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 FriendInfoRequest::type() const {
  // @@protoc_insertion_point(field_get:main.FriendInfoRequest.type)
  return type_;
}
inline void FriendInfoRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:main.FriendInfoRequest.type)
}

// optional int32 origin = 3;
inline bool FriendInfoRequest::has_origin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendInfoRequest::set_has_origin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendInfoRequest::clear_has_origin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendInfoRequest::clear_origin() {
  origin_ = 0;
  clear_has_origin();
}
inline ::google::protobuf::int32 FriendInfoRequest::origin() const {
  // @@protoc_insertion_point(field_get:main.FriendInfoRequest.origin)
  return origin_;
}
inline void FriendInfoRequest::set_origin(::google::protobuf::int32 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:main.FriendInfoRequest.origin)
}

// -------------------------------------------------------------------

// FriendInfoResponse

// optional .main.RoleInfo role = 1;
inline bool FriendInfoResponse::has_role() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendInfoResponse::set_has_role() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendInfoResponse::clear_has_role() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendInfoResponse::clear_role() {
  if (role_ != NULL) role_->::main::RoleInfo::Clear();
  clear_has_role();
}
inline const ::main::RoleInfo& FriendInfoResponse::role() const {
  // @@protoc_insertion_point(field_get:main.FriendInfoResponse.role)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return role_ != NULL ? *role_ : *default_instance().role_;
#else
  return role_ != NULL ? *role_ : *default_instance_->role_;
#endif
}
inline ::main::RoleInfo* FriendInfoResponse::mutable_role() {
  set_has_role();
  if (role_ == NULL) role_ = new ::main::RoleInfo;
  // @@protoc_insertion_point(field_mutable:main.FriendInfoResponse.role)
  return role_;
}
inline ::main::RoleInfo* FriendInfoResponse::release_role() {
  clear_has_role();
  ::main::RoleInfo* temp = role_;
  role_ = NULL;
  return temp;
}
inline void FriendInfoResponse::set_allocated_role(::main::RoleInfo* role) {
  delete role_;
  role_ = role;
  if (role) {
    set_has_role();
  } else {
    clear_has_role();
  }
  // @@protoc_insertion_point(field_set_allocated:main.FriendInfoResponse.role)
}

// -------------------------------------------------------------------

// AgreeFriendRequest

// optional int32 friendRoleId = 1;
inline bool AgreeFriendRequest::has_friendroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AgreeFriendRequest::set_has_friendroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AgreeFriendRequest::clear_has_friendroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AgreeFriendRequest::clear_friendroleid() {
  friendroleid_ = 0;
  clear_has_friendroleid();
}
inline ::google::protobuf::int32 AgreeFriendRequest::friendroleid() const {
  // @@protoc_insertion_point(field_get:main.AgreeFriendRequest.friendRoleId)
  return friendroleid_;
}
inline void AgreeFriendRequest::set_friendroleid(::google::protobuf::int32 value) {
  set_has_friendroleid();
  friendroleid_ = value;
  // @@protoc_insertion_point(field_set:main.AgreeFriendRequest.friendRoleId)
}

// -------------------------------------------------------------------

// AgreeFriendResponse

// optional int32 state = 1;
inline bool AgreeFriendResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AgreeFriendResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AgreeFriendResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AgreeFriendResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AgreeFriendResponse::state() const {
  // @@protoc_insertion_point(field_get:main.AgreeFriendResponse.state)
  return state_;
}
inline void AgreeFriendResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.AgreeFriendResponse.state)
}

// optional .main.FriendProto friendProto = 2;
inline bool AgreeFriendResponse::has_friendproto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AgreeFriendResponse::set_has_friendproto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AgreeFriendResponse::clear_has_friendproto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AgreeFriendResponse::clear_friendproto() {
  if (friendproto_ != NULL) friendproto_->::main::FriendProto::Clear();
  clear_has_friendproto();
}
inline const ::main::FriendProto& AgreeFriendResponse::friendproto() const {
  // @@protoc_insertion_point(field_get:main.AgreeFriendResponse.friendProto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return friendproto_ != NULL ? *friendproto_ : *default_instance().friendproto_;
#else
  return friendproto_ != NULL ? *friendproto_ : *default_instance_->friendproto_;
#endif
}
inline ::main::FriendProto* AgreeFriendResponse::mutable_friendproto() {
  set_has_friendproto();
  if (friendproto_ == NULL) friendproto_ = new ::main::FriendProto;
  // @@protoc_insertion_point(field_mutable:main.AgreeFriendResponse.friendProto)
  return friendproto_;
}
inline ::main::FriendProto* AgreeFriendResponse::release_friendproto() {
  clear_has_friendproto();
  ::main::FriendProto* temp = friendproto_;
  friendproto_ = NULL;
  return temp;
}
inline void AgreeFriendResponse::set_allocated_friendproto(::main::FriendProto* friendproto) {
  delete friendproto_;
  friendproto_ = friendproto;
  if (friendproto) {
    set_has_friendproto();
  } else {
    clear_has_friendproto();
  }
  // @@protoc_insertion_point(field_set_allocated:main.AgreeFriendResponse.friendProto)
}

// -------------------------------------------------------------------

// AddBlockRequest

// optional int32 friendRoleId = 1;
inline bool AddBlockRequest::has_friendroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddBlockRequest::set_has_friendroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddBlockRequest::clear_has_friendroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddBlockRequest::clear_friendroleid() {
  friendroleid_ = 0;
  clear_has_friendroleid();
}
inline ::google::protobuf::int32 AddBlockRequest::friendroleid() const {
  // @@protoc_insertion_point(field_get:main.AddBlockRequest.friendRoleId)
  return friendroleid_;
}
inline void AddBlockRequest::set_friendroleid(::google::protobuf::int32 value) {
  set_has_friendroleid();
  friendroleid_ = value;
  // @@protoc_insertion_point(field_set:main.AddBlockRequest.friendRoleId)
}

// -------------------------------------------------------------------

// AddBlockResponse

// optional int32 state = 1;
inline bool AddBlockResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddBlockResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddBlockResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddBlockResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 AddBlockResponse::state() const {
  // @@protoc_insertion_point(field_get:main.AddBlockResponse.state)
  return state_;
}
inline void AddBlockResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.AddBlockResponse.state)
}

// optional .main.FriendProto friendProto = 2;
inline bool AddBlockResponse::has_friendproto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddBlockResponse::set_has_friendproto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddBlockResponse::clear_has_friendproto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddBlockResponse::clear_friendproto() {
  if (friendproto_ != NULL) friendproto_->::main::FriendProto::Clear();
  clear_has_friendproto();
}
inline const ::main::FriendProto& AddBlockResponse::friendproto() const {
  // @@protoc_insertion_point(field_get:main.AddBlockResponse.friendProto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return friendproto_ != NULL ? *friendproto_ : *default_instance().friendproto_;
#else
  return friendproto_ != NULL ? *friendproto_ : *default_instance_->friendproto_;
#endif
}
inline ::main::FriendProto* AddBlockResponse::mutable_friendproto() {
  set_has_friendproto();
  if (friendproto_ == NULL) friendproto_ = new ::main::FriendProto;
  // @@protoc_insertion_point(field_mutable:main.AddBlockResponse.friendProto)
  return friendproto_;
}
inline ::main::FriendProto* AddBlockResponse::release_friendproto() {
  clear_has_friendproto();
  ::main::FriendProto* temp = friendproto_;
  friendproto_ = NULL;
  return temp;
}
inline void AddBlockResponse::set_allocated_friendproto(::main::FriendProto* friendproto) {
  delete friendproto_;
  friendproto_ = friendproto;
  if (friendproto) {
    set_has_friendproto();
  } else {
    clear_has_friendproto();
  }
  // @@protoc_insertion_point(field_set_allocated:main.AddBlockResponse.friendProto)
}

// -------------------------------------------------------------------

// UnagreeFriendRequest

// optional int32 friendRoleId = 1;
inline bool UnagreeFriendRequest::has_friendroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnagreeFriendRequest::set_has_friendroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnagreeFriendRequest::clear_has_friendroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnagreeFriendRequest::clear_friendroleid() {
  friendroleid_ = 0;
  clear_has_friendroleid();
}
inline ::google::protobuf::int32 UnagreeFriendRequest::friendroleid() const {
  // @@protoc_insertion_point(field_get:main.UnagreeFriendRequest.friendRoleId)
  return friendroleid_;
}
inline void UnagreeFriendRequest::set_friendroleid(::google::protobuf::int32 value) {
  set_has_friendroleid();
  friendroleid_ = value;
  // @@protoc_insertion_point(field_set:main.UnagreeFriendRequest.friendRoleId)
}

// -------------------------------------------------------------------

// UnagreeFriendResponse

// optional int32 state = 1;
inline bool UnagreeFriendResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnagreeFriendResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnagreeFriendResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnagreeFriendResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 UnagreeFriendResponse::state() const {
  // @@protoc_insertion_point(field_get:main.UnagreeFriendResponse.state)
  return state_;
}
inline void UnagreeFriendResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.UnagreeFriendResponse.state)
}

// -------------------------------------------------------------------

// DeleteBlockRequest

// optional int32 friendRoleId = 1;
inline bool DeleteBlockRequest::has_friendroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteBlockRequest::set_has_friendroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteBlockRequest::clear_has_friendroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteBlockRequest::clear_friendroleid() {
  friendroleid_ = 0;
  clear_has_friendroleid();
}
inline ::google::protobuf::int32 DeleteBlockRequest::friendroleid() const {
  // @@protoc_insertion_point(field_get:main.DeleteBlockRequest.friendRoleId)
  return friendroleid_;
}
inline void DeleteBlockRequest::set_friendroleid(::google::protobuf::int32 value) {
  set_has_friendroleid();
  friendroleid_ = value;
  // @@protoc_insertion_point(field_set:main.DeleteBlockRequest.friendRoleId)
}

// -------------------------------------------------------------------

// DeleteBlockResponse

// optional int32 state = 1;
inline bool DeleteBlockResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteBlockResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteBlockResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteBlockResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DeleteBlockResponse::state() const {
  // @@protoc_insertion_point(field_get:main.DeleteBlockResponse.state)
  return state_;
}
inline void DeleteBlockResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.DeleteBlockResponse.state)
}

// -------------------------------------------------------------------

// DeleteFriendRequest

// optional int32 friendRoleId = 1;
inline bool DeleteFriendRequest::has_friendroleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteFriendRequest::set_has_friendroleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteFriendRequest::clear_has_friendroleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteFriendRequest::clear_friendroleid() {
  friendroleid_ = 0;
  clear_has_friendroleid();
}
inline ::google::protobuf::int32 DeleteFriendRequest::friendroleid() const {
  // @@protoc_insertion_point(field_get:main.DeleteFriendRequest.friendRoleId)
  return friendroleid_;
}
inline void DeleteFriendRequest::set_friendroleid(::google::protobuf::int32 value) {
  set_has_friendroleid();
  friendroleid_ = value;
  // @@protoc_insertion_point(field_set:main.DeleteFriendRequest.friendRoleId)
}

// -------------------------------------------------------------------

// DeleteFriendResponse

// optional int32 state = 1;
inline bool DeleteFriendResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteFriendResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteFriendResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteFriendResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DeleteFriendResponse::state() const {
  // @@protoc_insertion_point(field_get:main.DeleteFriendResponse.state)
  return state_;
}
inline void DeleteFriendResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.DeleteFriendResponse.state)
}

// optional .main.FriendProto friendProto = 2;
inline bool DeleteFriendResponse::has_friendproto() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeleteFriendResponse::set_has_friendproto() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeleteFriendResponse::clear_has_friendproto() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeleteFriendResponse::clear_friendproto() {
  if (friendproto_ != NULL) friendproto_->::main::FriendProto::Clear();
  clear_has_friendproto();
}
inline const ::main::FriendProto& DeleteFriendResponse::friendproto() const {
  // @@protoc_insertion_point(field_get:main.DeleteFriendResponse.friendProto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return friendproto_ != NULL ? *friendproto_ : *default_instance().friendproto_;
#else
  return friendproto_ != NULL ? *friendproto_ : *default_instance_->friendproto_;
#endif
}
inline ::main::FriendProto* DeleteFriendResponse::mutable_friendproto() {
  set_has_friendproto();
  if (friendproto_ == NULL) friendproto_ = new ::main::FriendProto;
  // @@protoc_insertion_point(field_mutable:main.DeleteFriendResponse.friendProto)
  return friendproto_;
}
inline ::main::FriendProto* DeleteFriendResponse::release_friendproto() {
  clear_has_friendproto();
  ::main::FriendProto* temp = friendproto_;
  friendproto_ = NULL;
  return temp;
}
inline void DeleteFriendResponse::set_allocated_friendproto(::main::FriendProto* friendproto) {
  delete friendproto_;
  friendproto_ = friendproto;
  if (friendproto) {
    set_has_friendproto();
  } else {
    clear_has_friendproto();
  }
  // @@protoc_insertion_point(field_set_allocated:main.DeleteFriendResponse.friendProto)
}

// -------------------------------------------------------------------

// expandFriendRequest

// -------------------------------------------------------------------

// expandFriendResponse

// optional int32 state = 1;
inline bool expandFriendResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void expandFriendResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void expandFriendResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void expandFriendResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 expandFriendResponse::state() const {
  // @@protoc_insertion_point(field_get:main.expandFriendResponse.state)
  return state_;
}
inline void expandFriendResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.expandFriendResponse.state)
}

// -------------------------------------------------------------------

// FriendProto

// optional int32 roleId = 1;
inline bool FriendProto::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FriendProto::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FriendProto::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FriendProto::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 FriendProto::roleid() const {
  // @@protoc_insertion_point(field_get:main.FriendProto.roleId)
  return roleid_;
}
inline void FriendProto::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:main.FriendProto.roleId)
}

// optional int32 friendId = 2;
inline bool FriendProto::has_friendid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FriendProto::set_has_friendid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FriendProto::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FriendProto::clear_friendid() {
  friendid_ = 0;
  clear_has_friendid();
}
inline ::google::protobuf::int32 FriendProto::friendid() const {
  // @@protoc_insertion_point(field_get:main.FriendProto.friendId)
  return friendid_;
}
inline void FriendProto::set_friendid(::google::protobuf::int32 value) {
  set_has_friendid();
  friendid_ = value;
  // @@protoc_insertion_point(field_set:main.FriendProto.friendId)
}

// optional string friendName = 3;
inline bool FriendProto::has_friendname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FriendProto::set_has_friendname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FriendProto::clear_has_friendname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FriendProto::clear_friendname() {
  if (friendname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendname_->clear();
  }
  clear_has_friendname();
}
inline const ::std::string& FriendProto::friendname() const {
  // @@protoc_insertion_point(field_get:main.FriendProto.friendName)
  return *friendname_;
}
inline void FriendProto::set_friendname(const ::std::string& value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
  // @@protoc_insertion_point(field_set:main.FriendProto.friendName)
}
inline void FriendProto::set_friendname(const char* value) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.FriendProto.friendName)
}
inline void FriendProto::set_friendname(const char* value, size_t size) {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendname_ = new ::std::string;
  }
  friendname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.FriendProto.friendName)
}
inline ::std::string* FriendProto::mutable_friendname() {
  set_has_friendname();
  if (friendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    friendname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.FriendProto.friendName)
  return friendname_;
}
inline ::std::string* FriendProto::release_friendname() {
  clear_has_friendname();
  if (friendname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = friendname_;
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void FriendProto::set_allocated_friendname(::std::string* friendname) {
  if (friendname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete friendname_;
  }
  if (friendname) {
    set_has_friendname();
    friendname_ = friendname;
  } else {
    clear_has_friendname();
    friendname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.FriendProto.friendName)
}

// optional int32 typeId = 4;
inline bool FriendProto::has_typeid_() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FriendProto::set_has_typeid_() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FriendProto::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FriendProto::clear_typeid_() {
  typeid__ = 0;
  clear_has_typeid_();
}
inline ::google::protobuf::int32 FriendProto::typeid_() const {
  // @@protoc_insertion_point(field_get:main.FriendProto.typeId)
  return typeid__;
}
inline void FriendProto::set_typeid_(::google::protobuf::int32 value) {
  set_has_typeid_();
  typeid__ = value;
  // @@protoc_insertion_point(field_set:main.FriendProto.typeId)
}

// optional bool isOnline = 5;
inline bool FriendProto::has_isonline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FriendProto::set_has_isonline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FriendProto::clear_has_isonline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FriendProto::clear_isonline() {
  isonline_ = false;
  clear_has_isonline();
}
inline bool FriendProto::isonline() const {
  // @@protoc_insertion_point(field_get:main.FriendProto.isOnline)
  return isonline_;
}
inline void FriendProto::set_isonline(bool value) {
  set_has_isonline();
  isonline_ = value;
  // @@protoc_insertion_point(field_set:main.FriendProto.isOnline)
}

// optional int32 level = 6;
inline bool FriendProto::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FriendProto::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FriendProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FriendProto::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 FriendProto::level() const {
  // @@protoc_insertion_point(field_get:main.FriendProto.level)
  return level_;
}
inline void FriendProto::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:main.FriendProto.level)
}

// optional int64 time = 7;
inline bool FriendProto::has_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FriendProto::set_has_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FriendProto::clear_has_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FriendProto::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 FriendProto::time() const {
  // @@protoc_insertion_point(field_get:main.FriendProto.time)
  return time_;
}
inline void FriendProto::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:main.FriendProto.time)
}

// optional int32 image = 8;
inline bool FriendProto::has_image() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FriendProto::set_has_image() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FriendProto::clear_has_image() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FriendProto::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 FriendProto::image() const {
  // @@protoc_insertion_point(field_get:main.FriendProto.image)
  return image_;
}
inline void FriendProto::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
  // @@protoc_insertion_point(field_set:main.FriendProto.image)
}

// optional int32 isGiftPower = 9;
inline bool FriendProto::has_isgiftpower() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FriendProto::set_has_isgiftpower() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FriendProto::clear_has_isgiftpower() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FriendProto::clear_isgiftpower() {
  isgiftpower_ = 0;
  clear_has_isgiftpower();
}
inline ::google::protobuf::int32 FriendProto::isgiftpower() const {
  // @@protoc_insertion_point(field_get:main.FriendProto.isGiftPower)
  return isgiftpower_;
}
inline void FriendProto::set_isgiftpower(::google::protobuf::int32 value) {
  set_has_isgiftpower();
  isgiftpower_ = value;
  // @@protoc_insertion_point(field_set:main.FriendProto.isGiftPower)
}

// -------------------------------------------------------------------

// RoleInfo

// optional int32 roleId = 1;
inline bool RoleInfo::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleInfo::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleInfo::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleInfo::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 RoleInfo::roleid() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.roleId)
  return roleid_;
}
inline void RoleInfo::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.roleId)
}

// optional string name = 2;
inline bool RoleInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleInfo::name() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.name)
  return *name_;
}
inline void RoleInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleInfo.name)
}
inline void RoleInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleInfo.name)
}
inline void RoleInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleInfo.name)
}
inline ::std::string* RoleInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleInfo.name)
  return name_;
}
inline ::std::string* RoleInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleInfo.name)
}

// optional string nickname = 3;
inline bool RoleInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& RoleInfo::nickname() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.nickname)
  return *nickname_;
}
inline void RoleInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleInfo.nickname)
}
inline void RoleInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleInfo.nickname)
}
inline void RoleInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleInfo.nickname)
}
inline ::std::string* RoleInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleInfo.nickname)
  return nickname_;
}
inline ::std::string* RoleInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleInfo.nickname)
}

// optional string ssid = 4;
inline bool RoleInfo::has_ssid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleInfo::set_has_ssid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleInfo::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleInfo::clear_ssid() {
  if (ssid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssid_->clear();
  }
  clear_has_ssid();
}
inline const ::std::string& RoleInfo::ssid() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.ssid)
  return *ssid_;
}
inline void RoleInfo::set_ssid(const ::std::string& value) {
  set_has_ssid();
  if (ssid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssid_ = new ::std::string;
  }
  ssid_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleInfo.ssid)
}
inline void RoleInfo::set_ssid(const char* value) {
  set_has_ssid();
  if (ssid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssid_ = new ::std::string;
  }
  ssid_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleInfo.ssid)
}
inline void RoleInfo::set_ssid(const char* value, size_t size) {
  set_has_ssid();
  if (ssid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssid_ = new ::std::string;
  }
  ssid_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleInfo.ssid)
}
inline ::std::string* RoleInfo::mutable_ssid() {
  set_has_ssid();
  if (ssid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ssid_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleInfo.ssid)
  return ssid_;
}
inline ::std::string* RoleInfo::release_ssid() {
  clear_has_ssid();
  if (ssid_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ssid_;
    ssid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleInfo::set_allocated_ssid(::std::string* ssid) {
  if (ssid_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ssid_;
  }
  if (ssid) {
    set_has_ssid();
    ssid_ = ssid;
  } else {
    clear_has_ssid();
    ssid_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleInfo.ssid)
}

// optional int32 exp = 5;
inline bool RoleInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleInfo::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 RoleInfo::exp() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.exp)
  return exp_;
}
inline void RoleInfo::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.exp)
}

// optional int32 level = 6;
inline bool RoleInfo::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleInfo::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 RoleInfo::level() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.level)
  return level_;
}
inline void RoleInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.level)
}

// optional int32 vipLevel = 7;
inline bool RoleInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleInfo::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 RoleInfo::viplevel() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.vipLevel)
  return viplevel_;
}
inline void RoleInfo::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.vipLevel)
}

// optional int32 coins = 8;
inline bool RoleInfo::has_coins() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleInfo::set_has_coins() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleInfo::clear_has_coins() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleInfo::clear_coins() {
  coins_ = 0;
  clear_has_coins();
}
inline ::google::protobuf::int32 RoleInfo::coins() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.coins)
  return coins_;
}
inline void RoleInfo::set_coins(::google::protobuf::int32 value) {
  set_has_coins();
  coins_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.coins)
}

// optional int32 gold = 9;
inline bool RoleInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 RoleInfo::gold() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.gold)
  return gold_;
}
inline void RoleInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.gold)
}

// optional int32 country = 10;
inline bool RoleInfo::has_country() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RoleInfo::set_has_country() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RoleInfo::clear_has_country() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RoleInfo::clear_country() {
  country_ = 0;
  clear_has_country();
}
inline ::google::protobuf::int32 RoleInfo::country() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.country)
  return country_;
}
inline void RoleInfo::set_country(::google::protobuf::int32 value) {
  set_has_country();
  country_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.country)
}

// optional int32 image = 11;
inline bool RoleInfo::has_image() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RoleInfo::set_has_image() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RoleInfo::clear_has_image() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RoleInfo::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 RoleInfo::image() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.image)
  return image_;
}
inline void RoleInfo::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.image)
}

// optional int32 power = 12;
inline bool RoleInfo::has_power() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleInfo::set_has_power() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleInfo::clear_has_power() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleInfo::clear_power() {
  power_ = 0;
  clear_has_power();
}
inline ::google::protobuf::int32 RoleInfo::power() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.power)
  return power_;
}
inline void RoleInfo::set_power(::google::protobuf::int32 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.power)
}

// optional int32 combatValue = 13;
inline bool RoleInfo::has_combatvalue() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleInfo::set_has_combatvalue() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleInfo::clear_has_combatvalue() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleInfo::clear_combatvalue() {
  combatvalue_ = 0;
  clear_has_combatvalue();
}
inline ::google::protobuf::int32 RoleInfo::combatvalue() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.combatValue)
  return combatvalue_;
}
inline void RoleInfo::set_combatvalue(::google::protobuf::int32 value) {
  set_has_combatvalue();
  combatvalue_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.combatValue)
}

// optional int32 bagSize = 14;
inline bool RoleInfo::has_bagsize() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RoleInfo::set_has_bagsize() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RoleInfo::clear_has_bagsize() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RoleInfo::clear_bagsize() {
  bagsize_ = 0;
  clear_has_bagsize();
}
inline ::google::protobuf::int32 RoleInfo::bagsize() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.bagSize)
  return bagsize_;
}
inline void RoleInfo::set_bagsize(::google::protobuf::int32 value) {
  set_has_bagsize();
  bagsize_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.bagSize)
}

// optional string pvpRankName = 15;
inline bool RoleInfo::has_pvprankname() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RoleInfo::set_has_pvprankname() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RoleInfo::clear_has_pvprankname() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RoleInfo::clear_pvprankname() {
  if (pvprankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvprankname_->clear();
  }
  clear_has_pvprankname();
}
inline const ::std::string& RoleInfo::pvprankname() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.pvpRankName)
  return *pvprankname_;
}
inline void RoleInfo::set_pvprankname(const ::std::string& value) {
  set_has_pvprankname();
  if (pvprankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvprankname_ = new ::std::string;
  }
  pvprankname_->assign(value);
  // @@protoc_insertion_point(field_set:main.RoleInfo.pvpRankName)
}
inline void RoleInfo::set_pvprankname(const char* value) {
  set_has_pvprankname();
  if (pvprankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvprankname_ = new ::std::string;
  }
  pvprankname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.RoleInfo.pvpRankName)
}
inline void RoleInfo::set_pvprankname(const char* value, size_t size) {
  set_has_pvprankname();
  if (pvprankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvprankname_ = new ::std::string;
  }
  pvprankname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.RoleInfo.pvpRankName)
}
inline ::std::string* RoleInfo::mutable_pvprankname() {
  set_has_pvprankname();
  if (pvprankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pvprankname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.RoleInfo.pvpRankName)
  return pvprankname_;
}
inline ::std::string* RoleInfo::release_pvprankname() {
  clear_has_pvprankname();
  if (pvprankname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pvprankname_;
    pvprankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RoleInfo::set_allocated_pvprankname(::std::string* pvprankname) {
  if (pvprankname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pvprankname_;
  }
  if (pvprankname) {
    set_has_pvprankname();
    pvprankname_ = pvprankname;
  } else {
    clear_has_pvprankname();
    pvprankname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleInfo.pvpRankName)
}

// optional int32 modifyNickNameCount = 16;
inline bool RoleInfo::has_modifynicknamecount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RoleInfo::set_has_modifynicknamecount() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RoleInfo::clear_has_modifynicknamecount() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RoleInfo::clear_modifynicknamecount() {
  modifynicknamecount_ = 0;
  clear_has_modifynicknamecount();
}
inline ::google::protobuf::int32 RoleInfo::modifynicknamecount() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.modifyNickNameCount)
  return modifynicknamecount_;
}
inline void RoleInfo::set_modifynicknamecount(::google::protobuf::int32 value) {
  set_has_modifynicknamecount();
  modifynicknamecount_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.modifyNickNameCount)
}

// optional int32 prestige = 17;
inline bool RoleInfo::has_prestige() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RoleInfo::set_has_prestige() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RoleInfo::clear_has_prestige() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RoleInfo::clear_prestige() {
  prestige_ = 0;
  clear_has_prestige();
}
inline ::google::protobuf::int32 RoleInfo::prestige() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.prestige)
  return prestige_;
}
inline void RoleInfo::set_prestige(::google::protobuf::int32 value) {
  set_has_prestige();
  prestige_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.prestige)
}

// optional int32 enterPVPCount = 18;
inline bool RoleInfo::has_enterpvpcount() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RoleInfo::set_has_enterpvpcount() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RoleInfo::clear_has_enterpvpcount() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RoleInfo::clear_enterpvpcount() {
  enterpvpcount_ = 0;
  clear_has_enterpvpcount();
}
inline ::google::protobuf::int32 RoleInfo::enterpvpcount() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.enterPVPCount)
  return enterpvpcount_;
}
inline void RoleInfo::set_enterpvpcount(::google::protobuf::int32 value) {
  set_has_enterpvpcount();
  enterpvpcount_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.enterPVPCount)
}

// optional int32 pvpWinCount = 19;
inline bool RoleInfo::has_pvpwincount() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void RoleInfo::set_has_pvpwincount() {
  _has_bits_[0] |= 0x00040000u;
}
inline void RoleInfo::clear_has_pvpwincount() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void RoleInfo::clear_pvpwincount() {
  pvpwincount_ = 0;
  clear_has_pvpwincount();
}
inline ::google::protobuf::int32 RoleInfo::pvpwincount() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.pvpWinCount)
  return pvpwincount_;
}
inline void RoleInfo::set_pvpwincount(::google::protobuf::int32 value) {
  set_has_pvpwincount();
  pvpwincount_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.pvpWinCount)
}

// optional int32 pvpTop = 20;
inline bool RoleInfo::has_pvptop() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void RoleInfo::set_has_pvptop() {
  _has_bits_[0] |= 0x00080000u;
}
inline void RoleInfo::clear_has_pvptop() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void RoleInfo::clear_pvptop() {
  pvptop_ = 0;
  clear_has_pvptop();
}
inline ::google::protobuf::int32 RoleInfo::pvptop() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.pvpTop)
  return pvptop_;
}
inline void RoleInfo::set_pvptop(::google::protobuf::int32 value) {
  set_has_pvptop();
  pvptop_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.pvpTop)
}

// optional int32 governing = 21;
inline bool RoleInfo::has_governing() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void RoleInfo::set_has_governing() {
  _has_bits_[0] |= 0x00100000u;
}
inline void RoleInfo::clear_has_governing() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void RoleInfo::clear_governing() {
  governing_ = 0;
  clear_has_governing();
}
inline ::google::protobuf::int32 RoleInfo::governing() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.governing)
  return governing_;
}
inline void RoleInfo::set_governing(::google::protobuf::int32 value) {
  set_has_governing();
  governing_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.governing)
}

// optional int32 GoverningLimit = 22;
inline bool RoleInfo::has_governinglimit() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void RoleInfo::set_has_governinglimit() {
  _has_bits_[0] |= 0x00200000u;
}
inline void RoleInfo::clear_has_governinglimit() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void RoleInfo::clear_governinglimit() {
  governinglimit_ = 0;
  clear_has_governinglimit();
}
inline ::google::protobuf::int32 RoleInfo::governinglimit() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.GoverningLimit)
  return governinglimit_;
}
inline void RoleInfo::set_governinglimit(::google::protobuf::int32 value) {
  set_has_governinglimit();
  governinglimit_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.GoverningLimit)
}

// optional int32 speed = 23;
inline bool RoleInfo::has_speed() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void RoleInfo::set_has_speed() {
  _has_bits_[0] |= 0x00400000u;
}
inline void RoleInfo::clear_has_speed() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void RoleInfo::clear_speed() {
  speed_ = 0;
  clear_has_speed();
}
inline ::google::protobuf::int32 RoleInfo::speed() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.speed)
  return speed_;
}
inline void RoleInfo::set_speed(::google::protobuf::int32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.speed)
}

// optional int32 hp = 24;
inline bool RoleInfo::has_hp() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void RoleInfo::set_has_hp() {
  _has_bits_[0] |= 0x00800000u;
}
inline void RoleInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void RoleInfo::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline ::google::protobuf::int32 RoleInfo::hp() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.hp)
  return hp_;
}
inline void RoleInfo::set_hp(::google::protobuf::int32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:main.RoleInfo.hp)
}

// optional .main.RoleTeamInfo roleTeamInfo = 25;
inline bool RoleInfo::has_roleteaminfo() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void RoleInfo::set_has_roleteaminfo() {
  _has_bits_[0] |= 0x01000000u;
}
inline void RoleInfo::clear_has_roleteaminfo() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void RoleInfo::clear_roleteaminfo() {
  if (roleteaminfo_ != NULL) roleteaminfo_->::main::RoleTeamInfo::Clear();
  clear_has_roleteaminfo();
}
inline const ::main::RoleTeamInfo& RoleInfo::roleteaminfo() const {
  // @@protoc_insertion_point(field_get:main.RoleInfo.roleTeamInfo)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return roleteaminfo_ != NULL ? *roleteaminfo_ : *default_instance().roleteaminfo_;
#else
  return roleteaminfo_ != NULL ? *roleteaminfo_ : *default_instance_->roleteaminfo_;
#endif
}
inline ::main::RoleTeamInfo* RoleInfo::mutable_roleteaminfo() {
  set_has_roleteaminfo();
  if (roleteaminfo_ == NULL) roleteaminfo_ = new ::main::RoleTeamInfo;
  // @@protoc_insertion_point(field_mutable:main.RoleInfo.roleTeamInfo)
  return roleteaminfo_;
}
inline ::main::RoleTeamInfo* RoleInfo::release_roleteaminfo() {
  clear_has_roleteaminfo();
  ::main::RoleTeamInfo* temp = roleteaminfo_;
  roleteaminfo_ = NULL;
  return temp;
}
inline void RoleInfo::set_allocated_roleteaminfo(::main::RoleTeamInfo* roleteaminfo) {
  delete roleteaminfo_;
  roleteaminfo_ = roleteaminfo;
  if (roleteaminfo) {
    set_has_roleteaminfo();
  } else {
    clear_has_roleteaminfo();
  }
  // @@protoc_insertion_point(field_set_allocated:main.RoleInfo.roleTeamInfo)
}

// -------------------------------------------------------------------

// RoleTeamInfo

// optional int32 redSoldierId = 1;
inline bool RoleTeamInfo::has_redsoldierid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleTeamInfo::set_has_redsoldierid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleTeamInfo::clear_has_redsoldierid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleTeamInfo::clear_redsoldierid() {
  redsoldierid_ = 0;
  clear_has_redsoldierid();
}
inline ::google::protobuf::int32 RoleTeamInfo::redsoldierid() const {
  // @@protoc_insertion_point(field_get:main.RoleTeamInfo.redSoldierId)
  return redsoldierid_;
}
inline void RoleTeamInfo::set_redsoldierid(::google::protobuf::int32 value) {
  set_has_redsoldierid();
  redsoldierid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleTeamInfo.redSoldierId)
}

// optional int32 greenSoldierId = 2;
inline bool RoleTeamInfo::has_greensoldierid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleTeamInfo::set_has_greensoldierid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleTeamInfo::clear_has_greensoldierid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleTeamInfo::clear_greensoldierid() {
  greensoldierid_ = 0;
  clear_has_greensoldierid();
}
inline ::google::protobuf::int32 RoleTeamInfo::greensoldierid() const {
  // @@protoc_insertion_point(field_get:main.RoleTeamInfo.greenSoldierId)
  return greensoldierid_;
}
inline void RoleTeamInfo::set_greensoldierid(::google::protobuf::int32 value) {
  set_has_greensoldierid();
  greensoldierid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleTeamInfo.greenSoldierId)
}

// optional int32 blueSoldierId = 3;
inline bool RoleTeamInfo::has_bluesoldierid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleTeamInfo::set_has_bluesoldierid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleTeamInfo::clear_has_bluesoldierid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleTeamInfo::clear_bluesoldierid() {
  bluesoldierid_ = 0;
  clear_has_bluesoldierid();
}
inline ::google::protobuf::int32 RoleTeamInfo::bluesoldierid() const {
  // @@protoc_insertion_point(field_get:main.RoleTeamInfo.blueSoldierId)
  return bluesoldierid_;
}
inline void RoleTeamInfo::set_bluesoldierid(::google::protobuf::int32 value) {
  set_has_bluesoldierid();
  bluesoldierid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleTeamInfo.blueSoldierId)
}

// optional int32 lordOfficerId = 4;
inline bool RoleTeamInfo::has_lordofficerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleTeamInfo::set_has_lordofficerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleTeamInfo::clear_has_lordofficerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleTeamInfo::clear_lordofficerid() {
  lordofficerid_ = 0;
  clear_has_lordofficerid();
}
inline ::google::protobuf::int32 RoleTeamInfo::lordofficerid() const {
  // @@protoc_insertion_point(field_get:main.RoleTeamInfo.lordOfficerId)
  return lordofficerid_;
}
inline void RoleTeamInfo::set_lordofficerid(::google::protobuf::int32 value) {
  set_has_lordofficerid();
  lordofficerid_ = value;
  // @@protoc_insertion_point(field_set:main.RoleTeamInfo.lordOfficerId)
}

// repeated .main.SoldierCardItemProto soldierCardItemProto = 5;
inline int RoleTeamInfo::soldiercarditemproto_size() const {
  return soldiercarditemproto_.size();
}
inline void RoleTeamInfo::clear_soldiercarditemproto() {
  soldiercarditemproto_.Clear();
}
inline const ::main::SoldierCardItemProto& RoleTeamInfo::soldiercarditemproto(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleTeamInfo.soldierCardItemProto)
  return soldiercarditemproto_.Get(index);
}
inline ::main::SoldierCardItemProto* RoleTeamInfo::mutable_soldiercarditemproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleTeamInfo.soldierCardItemProto)
  return soldiercarditemproto_.Mutable(index);
}
inline ::main::SoldierCardItemProto* RoleTeamInfo::add_soldiercarditemproto() {
  // @@protoc_insertion_point(field_add:main.RoleTeamInfo.soldierCardItemProto)
  return soldiercarditemproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::SoldierCardItemProto >&
RoleTeamInfo::soldiercarditemproto() const {
  // @@protoc_insertion_point(field_list:main.RoleTeamInfo.soldierCardItemProto)
  return soldiercarditemproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::SoldierCardItemProto >*
RoleTeamInfo::mutable_soldiercarditemproto() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleTeamInfo.soldierCardItemProto)
  return &soldiercarditemproto_;
}

// repeated .main.TeamOfficerCardItemInfo teamOfficerCardItemInfo = 6;
inline int RoleTeamInfo::teamofficercarditeminfo_size() const {
  return teamofficercarditeminfo_.size();
}
inline void RoleTeamInfo::clear_teamofficercarditeminfo() {
  teamofficercarditeminfo_.Clear();
}
inline const ::main::TeamOfficerCardItemInfo& RoleTeamInfo::teamofficercarditeminfo(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleTeamInfo.teamOfficerCardItemInfo)
  return teamofficercarditeminfo_.Get(index);
}
inline ::main::TeamOfficerCardItemInfo* RoleTeamInfo::mutable_teamofficercarditeminfo(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleTeamInfo.teamOfficerCardItemInfo)
  return teamofficercarditeminfo_.Mutable(index);
}
inline ::main::TeamOfficerCardItemInfo* RoleTeamInfo::add_teamofficercarditeminfo() {
  // @@protoc_insertion_point(field_add:main.RoleTeamInfo.teamOfficerCardItemInfo)
  return teamofficercarditeminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::TeamOfficerCardItemInfo >&
RoleTeamInfo::teamofficercarditeminfo() const {
  // @@protoc_insertion_point(field_list:main.RoleTeamInfo.teamOfficerCardItemInfo)
  return teamofficercarditeminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::TeamOfficerCardItemInfo >*
RoleTeamInfo::mutable_teamofficercarditeminfo() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleTeamInfo.teamOfficerCardItemInfo)
  return &teamofficercarditeminfo_;
}

// repeated .main.PvpOfficerCardItemInfo pvpOfficerCardItemInfo = 7;
inline int RoleTeamInfo::pvpofficercarditeminfo_size() const {
  return pvpofficercarditeminfo_.size();
}
inline void RoleTeamInfo::clear_pvpofficercarditeminfo() {
  pvpofficercarditeminfo_.Clear();
}
inline const ::main::PvpOfficerCardItemInfo& RoleTeamInfo::pvpofficercarditeminfo(int index) const {
  // @@protoc_insertion_point(field_get:main.RoleTeamInfo.pvpOfficerCardItemInfo)
  return pvpofficercarditeminfo_.Get(index);
}
inline ::main::PvpOfficerCardItemInfo* RoleTeamInfo::mutable_pvpofficercarditeminfo(int index) {
  // @@protoc_insertion_point(field_mutable:main.RoleTeamInfo.pvpOfficerCardItemInfo)
  return pvpofficercarditeminfo_.Mutable(index);
}
inline ::main::PvpOfficerCardItemInfo* RoleTeamInfo::add_pvpofficercarditeminfo() {
  // @@protoc_insertion_point(field_add:main.RoleTeamInfo.pvpOfficerCardItemInfo)
  return pvpofficercarditeminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::PvpOfficerCardItemInfo >&
RoleTeamInfo::pvpofficercarditeminfo() const {
  // @@protoc_insertion_point(field_list:main.RoleTeamInfo.pvpOfficerCardItemInfo)
  return pvpofficercarditeminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::PvpOfficerCardItemInfo >*
RoleTeamInfo::mutable_pvpofficercarditeminfo() {
  // @@protoc_insertion_point(field_mutable_list:main.RoleTeamInfo.pvpOfficerCardItemInfo)
  return &pvpofficercarditeminfo_;
}

// -------------------------------------------------------------------

// TeamOfficerCardItemInfo

// optional .main.OfficerCardItemProto baseOfficerCardInfoProto = 1;
inline bool TeamOfficerCardItemInfo::has_baseofficercardinfoproto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamOfficerCardItemInfo::set_has_baseofficercardinfoproto() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamOfficerCardItemInfo::clear_has_baseofficercardinfoproto() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamOfficerCardItemInfo::clear_baseofficercardinfoproto() {
  if (baseofficercardinfoproto_ != NULL) baseofficercardinfoproto_->::main::OfficerCardItemProto::Clear();
  clear_has_baseofficercardinfoproto();
}
inline const ::main::OfficerCardItemProto& TeamOfficerCardItemInfo::baseofficercardinfoproto() const {
  // @@protoc_insertion_point(field_get:main.TeamOfficerCardItemInfo.baseOfficerCardInfoProto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return baseofficercardinfoproto_ != NULL ? *baseofficercardinfoproto_ : *default_instance().baseofficercardinfoproto_;
#else
  return baseofficercardinfoproto_ != NULL ? *baseofficercardinfoproto_ : *default_instance_->baseofficercardinfoproto_;
#endif
}
inline ::main::OfficerCardItemProto* TeamOfficerCardItemInfo::mutable_baseofficercardinfoproto() {
  set_has_baseofficercardinfoproto();
  if (baseofficercardinfoproto_ == NULL) baseofficercardinfoproto_ = new ::main::OfficerCardItemProto;
  // @@protoc_insertion_point(field_mutable:main.TeamOfficerCardItemInfo.baseOfficerCardInfoProto)
  return baseofficercardinfoproto_;
}
inline ::main::OfficerCardItemProto* TeamOfficerCardItemInfo::release_baseofficercardinfoproto() {
  clear_has_baseofficercardinfoproto();
  ::main::OfficerCardItemProto* temp = baseofficercardinfoproto_;
  baseofficercardinfoproto_ = NULL;
  return temp;
}
inline void TeamOfficerCardItemInfo::set_allocated_baseofficercardinfoproto(::main::OfficerCardItemProto* baseofficercardinfoproto) {
  delete baseofficercardinfoproto_;
  baseofficercardinfoproto_ = baseofficercardinfoproto;
  if (baseofficercardinfoproto) {
    set_has_baseofficercardinfoproto();
  } else {
    clear_has_baseofficercardinfoproto();
  }
  // @@protoc_insertion_point(field_set_allocated:main.TeamOfficerCardItemInfo.baseOfficerCardInfoProto)
}

// repeated .main.EquipmentCardItemProto baseEquipmentCardItemProto = 2;
inline int TeamOfficerCardItemInfo::baseequipmentcarditemproto_size() const {
  return baseequipmentcarditemproto_.size();
}
inline void TeamOfficerCardItemInfo::clear_baseequipmentcarditemproto() {
  baseequipmentcarditemproto_.Clear();
}
inline const ::main::EquipmentCardItemProto& TeamOfficerCardItemInfo::baseequipmentcarditemproto(int index) const {
  // @@protoc_insertion_point(field_get:main.TeamOfficerCardItemInfo.baseEquipmentCardItemProto)
  return baseequipmentcarditemproto_.Get(index);
}
inline ::main::EquipmentCardItemProto* TeamOfficerCardItemInfo::mutable_baseequipmentcarditemproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.TeamOfficerCardItemInfo.baseEquipmentCardItemProto)
  return baseequipmentcarditemproto_.Mutable(index);
}
inline ::main::EquipmentCardItemProto* TeamOfficerCardItemInfo::add_baseequipmentcarditemproto() {
  // @@protoc_insertion_point(field_add:main.TeamOfficerCardItemInfo.baseEquipmentCardItemProto)
  return baseequipmentcarditemproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::EquipmentCardItemProto >&
TeamOfficerCardItemInfo::baseequipmentcarditemproto() const {
  // @@protoc_insertion_point(field_list:main.TeamOfficerCardItemInfo.baseEquipmentCardItemProto)
  return baseequipmentcarditemproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::EquipmentCardItemProto >*
TeamOfficerCardItemInfo::mutable_baseequipmentcarditemproto() {
  // @@protoc_insertion_point(field_mutable_list:main.TeamOfficerCardItemInfo.baseEquipmentCardItemProto)
  return &baseequipmentcarditemproto_;
}

// repeated .main.ReasonInfo reasonInfo = 3;
inline int TeamOfficerCardItemInfo::reasoninfo_size() const {
  return reasoninfo_.size();
}
inline void TeamOfficerCardItemInfo::clear_reasoninfo() {
  reasoninfo_.Clear();
}
inline const ::main::ReasonInfo& TeamOfficerCardItemInfo::reasoninfo(int index) const {
  // @@protoc_insertion_point(field_get:main.TeamOfficerCardItemInfo.reasonInfo)
  return reasoninfo_.Get(index);
}
inline ::main::ReasonInfo* TeamOfficerCardItemInfo::mutable_reasoninfo(int index) {
  // @@protoc_insertion_point(field_mutable:main.TeamOfficerCardItemInfo.reasonInfo)
  return reasoninfo_.Mutable(index);
}
inline ::main::ReasonInfo* TeamOfficerCardItemInfo::add_reasoninfo() {
  // @@protoc_insertion_point(field_add:main.TeamOfficerCardItemInfo.reasonInfo)
  return reasoninfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::ReasonInfo >&
TeamOfficerCardItemInfo::reasoninfo() const {
  // @@protoc_insertion_point(field_list:main.TeamOfficerCardItemInfo.reasonInfo)
  return reasoninfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::ReasonInfo >*
TeamOfficerCardItemInfo::mutable_reasoninfo() {
  // @@protoc_insertion_point(field_mutable_list:main.TeamOfficerCardItemInfo.reasonInfo)
  return &reasoninfo_;
}

// -------------------------------------------------------------------

// PvpOfficerCardItemInfo

// optional int32 itmeId = 1;
inline bool PvpOfficerCardItemInfo::has_itmeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PvpOfficerCardItemInfo::set_has_itmeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PvpOfficerCardItemInfo::clear_has_itmeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PvpOfficerCardItemInfo::clear_itmeid() {
  itmeid_ = 0;
  clear_has_itmeid();
}
inline ::google::protobuf::int32 PvpOfficerCardItemInfo::itmeid() const {
  // @@protoc_insertion_point(field_get:main.PvpOfficerCardItemInfo.itmeId)
  return itmeid_;
}
inline void PvpOfficerCardItemInfo::set_itmeid(::google::protobuf::int32 value) {
  set_has_itmeid();
  itmeid_ = value;
  // @@protoc_insertion_point(field_set:main.PvpOfficerCardItemInfo.itmeId)
}

// optional int32 level = 2;
inline bool PvpOfficerCardItemInfo::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PvpOfficerCardItemInfo::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PvpOfficerCardItemInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PvpOfficerCardItemInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PvpOfficerCardItemInfo::level() const {
  // @@protoc_insertion_point(field_get:main.PvpOfficerCardItemInfo.level)
  return level_;
}
inline void PvpOfficerCardItemInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:main.PvpOfficerCardItemInfo.level)
}

// -------------------------------------------------------------------

// ReasonInfo

// optional int32 reasonId = 1;
inline bool ReasonInfo::has_reasonid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReasonInfo::set_has_reasonid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReasonInfo::clear_has_reasonid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReasonInfo::clear_reasonid() {
  reasonid_ = 0;
  clear_has_reasonid();
}
inline ::google::protobuf::int32 ReasonInfo::reasonid() const {
  // @@protoc_insertion_point(field_get:main.ReasonInfo.reasonId)
  return reasonid_;
}
inline void ReasonInfo::set_reasonid(::google::protobuf::int32 value) {
  set_has_reasonid();
  reasonid_ = value;
  // @@protoc_insertion_point(field_set:main.ReasonInfo.reasonId)
}

// optional int32 isActivate = 2;
inline bool ReasonInfo::has_isactivate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReasonInfo::set_has_isactivate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReasonInfo::clear_has_isactivate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReasonInfo::clear_isactivate() {
  isactivate_ = 0;
  clear_has_isactivate();
}
inline ::google::protobuf::int32 ReasonInfo::isactivate() const {
  // @@protoc_insertion_point(field_get:main.ReasonInfo.isActivate)
  return isactivate_;
}
inline void ReasonInfo::set_isactivate(::google::protobuf::int32 value) {
  set_has_isactivate();
  isactivate_ = value;
  // @@protoc_insertion_point(field_set:main.ReasonInfo.isActivate)
}

// -------------------------------------------------------------------

// PowerGiftRequest

// optional int32 friendId = 1;
inline bool PowerGiftRequest::has_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerGiftRequest::set_has_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PowerGiftRequest::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PowerGiftRequest::clear_friendid() {
  friendid_ = 0;
  clear_has_friendid();
}
inline ::google::protobuf::int32 PowerGiftRequest::friendid() const {
  // @@protoc_insertion_point(field_get:main.PowerGiftRequest.friendId)
  return friendid_;
}
inline void PowerGiftRequest::set_friendid(::google::protobuf::int32 value) {
  set_has_friendid();
  friendid_ = value;
  // @@protoc_insertion_point(field_set:main.PowerGiftRequest.friendId)
}

// -------------------------------------------------------------------

// PowerGiftResponse

// optional int32 state = 1;
inline bool PowerGiftResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerGiftResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PowerGiftResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PowerGiftResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 PowerGiftResponse::state() const {
  // @@protoc_insertion_point(field_get:main.PowerGiftResponse.state)
  return state_;
}
inline void PowerGiftResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.PowerGiftResponse.state)
}

// -------------------------------------------------------------------

// AcceptPowerGiftResponse

// optional .main.PowerGiftProto powerGift = 1;
inline bool AcceptPowerGiftResponse::has_powergift() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptPowerGiftResponse::set_has_powergift() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptPowerGiftResponse::clear_has_powergift() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptPowerGiftResponse::clear_powergift() {
  if (powergift_ != NULL) powergift_->::main::PowerGiftProto::Clear();
  clear_has_powergift();
}
inline const ::main::PowerGiftProto& AcceptPowerGiftResponse::powergift() const {
  // @@protoc_insertion_point(field_get:main.AcceptPowerGiftResponse.powerGift)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return powergift_ != NULL ? *powergift_ : *default_instance().powergift_;
#else
  return powergift_ != NULL ? *powergift_ : *default_instance_->powergift_;
#endif
}
inline ::main::PowerGiftProto* AcceptPowerGiftResponse::mutable_powergift() {
  set_has_powergift();
  if (powergift_ == NULL) powergift_ = new ::main::PowerGiftProto;
  // @@protoc_insertion_point(field_mutable:main.AcceptPowerGiftResponse.powerGift)
  return powergift_;
}
inline ::main::PowerGiftProto* AcceptPowerGiftResponse::release_powergift() {
  clear_has_powergift();
  ::main::PowerGiftProto* temp = powergift_;
  powergift_ = NULL;
  return temp;
}
inline void AcceptPowerGiftResponse::set_allocated_powergift(::main::PowerGiftProto* powergift) {
  delete powergift_;
  powergift_ = powergift;
  if (powergift) {
    set_has_powergift();
  } else {
    clear_has_powergift();
  }
  // @@protoc_insertion_point(field_set_allocated:main.AcceptPowerGiftResponse.powerGift)
}

// -------------------------------------------------------------------

// GetPowerGiftRequest

// optional int32 giftId = 1;
inline bool GetPowerGiftRequest::has_giftid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPowerGiftRequest::set_has_giftid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPowerGiftRequest::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPowerGiftRequest::clear_giftid() {
  giftid_ = 0;
  clear_has_giftid();
}
inline ::google::protobuf::int32 GetPowerGiftRequest::giftid() const {
  // @@protoc_insertion_point(field_get:main.GetPowerGiftRequest.giftId)
  return giftid_;
}
inline void GetPowerGiftRequest::set_giftid(::google::protobuf::int32 value) {
  set_has_giftid();
  giftid_ = value;
  // @@protoc_insertion_point(field_set:main.GetPowerGiftRequest.giftId)
}

// optional int64 giftTime = 2;
inline bool GetPowerGiftRequest::has_gifttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetPowerGiftRequest::set_has_gifttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetPowerGiftRequest::clear_has_gifttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetPowerGiftRequest::clear_gifttime() {
  gifttime_ = GOOGLE_LONGLONG(0);
  clear_has_gifttime();
}
inline ::google::protobuf::int64 GetPowerGiftRequest::gifttime() const {
  // @@protoc_insertion_point(field_get:main.GetPowerGiftRequest.giftTime)
  return gifttime_;
}
inline void GetPowerGiftRequest::set_gifttime(::google::protobuf::int64 value) {
  set_has_gifttime();
  gifttime_ = value;
  // @@protoc_insertion_point(field_set:main.GetPowerGiftRequest.giftTime)
}

// -------------------------------------------------------------------

// GetPowerGiftResponse

// optional int32 state = 1;
inline bool GetPowerGiftResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPowerGiftResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPowerGiftResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPowerGiftResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GetPowerGiftResponse::state() const {
  // @@protoc_insertion_point(field_get:main.GetPowerGiftResponse.state)
  return state_;
}
inline void GetPowerGiftResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.GetPowerGiftResponse.state)
}

// -------------------------------------------------------------------

// GetAllPowerGiftRequest

// -------------------------------------------------------------------

// GetAllPowerGiftResponse

// optional int32 state = 1;
inline bool GetAllPowerGiftResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAllPowerGiftResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAllPowerGiftResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAllPowerGiftResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 GetAllPowerGiftResponse::state() const {
  // @@protoc_insertion_point(field_get:main.GetAllPowerGiftResponse.state)
  return state_;
}
inline void GetAllPowerGiftResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.GetAllPowerGiftResponse.state)
}

// repeated .main.PowerGiftProto powerGift = 2;
inline int GetAllPowerGiftResponse::powergift_size() const {
  return powergift_.size();
}
inline void GetAllPowerGiftResponse::clear_powergift() {
  powergift_.Clear();
}
inline const ::main::PowerGiftProto& GetAllPowerGiftResponse::powergift(int index) const {
  // @@protoc_insertion_point(field_get:main.GetAllPowerGiftResponse.powerGift)
  return powergift_.Get(index);
}
inline ::main::PowerGiftProto* GetAllPowerGiftResponse::mutable_powergift(int index) {
  // @@protoc_insertion_point(field_mutable:main.GetAllPowerGiftResponse.powerGift)
  return powergift_.Mutable(index);
}
inline ::main::PowerGiftProto* GetAllPowerGiftResponse::add_powergift() {
  // @@protoc_insertion_point(field_add:main.GetAllPowerGiftResponse.powerGift)
  return powergift_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::PowerGiftProto >&
GetAllPowerGiftResponse::powergift() const {
  // @@protoc_insertion_point(field_list:main.GetAllPowerGiftResponse.powerGift)
  return powergift_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::PowerGiftProto >*
GetAllPowerGiftResponse::mutable_powergift() {
  // @@protoc_insertion_point(field_mutable_list:main.GetAllPowerGiftResponse.powerGift)
  return &powergift_;
}

// -------------------------------------------------------------------

// PowerGiftListResponse

// repeated .main.PowerGiftProto powerGift = 1;
inline int PowerGiftListResponse::powergift_size() const {
  return powergift_.size();
}
inline void PowerGiftListResponse::clear_powergift() {
  powergift_.Clear();
}
inline const ::main::PowerGiftProto& PowerGiftListResponse::powergift(int index) const {
  // @@protoc_insertion_point(field_get:main.PowerGiftListResponse.powerGift)
  return powergift_.Get(index);
}
inline ::main::PowerGiftProto* PowerGiftListResponse::mutable_powergift(int index) {
  // @@protoc_insertion_point(field_mutable:main.PowerGiftListResponse.powerGift)
  return powergift_.Mutable(index);
}
inline ::main::PowerGiftProto* PowerGiftListResponse::add_powergift() {
  // @@protoc_insertion_point(field_add:main.PowerGiftListResponse.powerGift)
  return powergift_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::PowerGiftProto >&
PowerGiftListResponse::powergift() const {
  // @@protoc_insertion_point(field_list:main.PowerGiftListResponse.powerGift)
  return powergift_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::PowerGiftProto >*
PowerGiftListResponse::mutable_powergift() {
  // @@protoc_insertion_point(field_mutable_list:main.PowerGiftListResponse.powerGift)
  return &powergift_;
}

// -------------------------------------------------------------------

// PowerGiftProto

// optional int32 roleId = 1;
inline bool PowerGiftProto::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PowerGiftProto::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PowerGiftProto::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PowerGiftProto::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 PowerGiftProto::roleid() const {
  // @@protoc_insertion_point(field_get:main.PowerGiftProto.roleId)
  return roleid_;
}
inline void PowerGiftProto::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:main.PowerGiftProto.roleId)
}

// optional int32 giftId = 2;
inline bool PowerGiftProto::has_giftid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PowerGiftProto::set_has_giftid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PowerGiftProto::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PowerGiftProto::clear_giftid() {
  giftid_ = 0;
  clear_has_giftid();
}
inline ::google::protobuf::int32 PowerGiftProto::giftid() const {
  // @@protoc_insertion_point(field_get:main.PowerGiftProto.giftId)
  return giftid_;
}
inline void PowerGiftProto::set_giftid(::google::protobuf::int32 value) {
  set_has_giftid();
  giftid_ = value;
  // @@protoc_insertion_point(field_set:main.PowerGiftProto.giftId)
}

// optional int64 giftTime = 3;
inline bool PowerGiftProto::has_gifttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PowerGiftProto::set_has_gifttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PowerGiftProto::clear_has_gifttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PowerGiftProto::clear_gifttime() {
  gifttime_ = GOOGLE_LONGLONG(0);
  clear_has_gifttime();
}
inline ::google::protobuf::int64 PowerGiftProto::gifttime() const {
  // @@protoc_insertion_point(field_get:main.PowerGiftProto.giftTime)
  return gifttime_;
}
inline void PowerGiftProto::set_gifttime(::google::protobuf::int64 value) {
  set_has_gifttime();
  gifttime_ = value;
  // @@protoc_insertion_point(field_set:main.PowerGiftProto.giftTime)
}

// optional string giftName = 4;
inline bool PowerGiftProto::has_giftname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PowerGiftProto::set_has_giftname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PowerGiftProto::clear_has_giftname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PowerGiftProto::clear_giftname() {
  if (giftname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    giftname_->clear();
  }
  clear_has_giftname();
}
inline const ::std::string& PowerGiftProto::giftname() const {
  // @@protoc_insertion_point(field_get:main.PowerGiftProto.giftName)
  return *giftname_;
}
inline void PowerGiftProto::set_giftname(const ::std::string& value) {
  set_has_giftname();
  if (giftname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    giftname_ = new ::std::string;
  }
  giftname_->assign(value);
  // @@protoc_insertion_point(field_set:main.PowerGiftProto.giftName)
}
inline void PowerGiftProto::set_giftname(const char* value) {
  set_has_giftname();
  if (giftname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    giftname_ = new ::std::string;
  }
  giftname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.PowerGiftProto.giftName)
}
inline void PowerGiftProto::set_giftname(const char* value, size_t size) {
  set_has_giftname();
  if (giftname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    giftname_ = new ::std::string;
  }
  giftname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.PowerGiftProto.giftName)
}
inline ::std::string* PowerGiftProto::mutable_giftname() {
  set_has_giftname();
  if (giftname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    giftname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.PowerGiftProto.giftName)
  return giftname_;
}
inline ::std::string* PowerGiftProto::release_giftname() {
  clear_has_giftname();
  if (giftname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = giftname_;
    giftname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PowerGiftProto::set_allocated_giftname(::std::string* giftname) {
  if (giftname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete giftname_;
  }
  if (giftname) {
    set_has_giftname();
    giftname_ = giftname;
  } else {
    clear_has_giftname();
    giftname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.PowerGiftProto.giftName)
}

// optional int32 giftLevel = 5;
inline bool PowerGiftProto::has_giftlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PowerGiftProto::set_has_giftlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PowerGiftProto::clear_has_giftlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PowerGiftProto::clear_giftlevel() {
  giftlevel_ = 0;
  clear_has_giftlevel();
}
inline ::google::protobuf::int32 PowerGiftProto::giftlevel() const {
  // @@protoc_insertion_point(field_get:main.PowerGiftProto.giftLevel)
  return giftlevel_;
}
inline void PowerGiftProto::set_giftlevel(::google::protobuf::int32 value) {
  set_has_giftlevel();
  giftlevel_ = value;
  // @@protoc_insertion_point(field_set:main.PowerGiftProto.giftLevel)
}

// optional int32 giftImage = 6;
inline bool PowerGiftProto::has_giftimage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PowerGiftProto::set_has_giftimage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PowerGiftProto::clear_has_giftimage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PowerGiftProto::clear_giftimage() {
  giftimage_ = 0;
  clear_has_giftimage();
}
inline ::google::protobuf::int32 PowerGiftProto::giftimage() const {
  // @@protoc_insertion_point(field_get:main.PowerGiftProto.giftImage)
  return giftimage_;
}
inline void PowerGiftProto::set_giftimage(::google::protobuf::int32 value) {
  set_has_giftimage();
  giftimage_ = value;
  // @@protoc_insertion_point(field_set:main.PowerGiftProto.giftImage)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FriendModule_2eproto__INCLUDED
