// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SpecialBattleModule.proto

#ifndef PROTOBUF_SpecialBattleModule_2eproto__INCLUDED
#define PROTOBUF_SpecialBattleModule_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace main {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SpecialBattleModule_2eproto();
void protobuf_AssignDesc_SpecialBattleModule_2eproto();
void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

class SpecialBattleStoryListResponse;
class SpecialBattleStoryModel;
class SpecialBattleStoryListRequest;
class SpecialBattlePlotListRequest;
class SpecialBattlePlotListResponse;
class SpecialBattlePlotModel;
class SpecialBattleItemModel;
class SpecialBattleCheckFightRequest;
class SpecialBattleCheckFightResponse;
class SpecialBattleBuyCountRequest;
class SpecialBattleBuyCountResponse;
class SpecialBattleBuyCountEntryRequest;
class SpecialBattleBuyCountEntryResponse;

// ===================================================================

class SpecialBattleStoryListResponse : public ::google::protobuf::MessageLite {
 public:
  SpecialBattleStoryListResponse();
  virtual ~SpecialBattleStoryListResponse();

  SpecialBattleStoryListResponse(const SpecialBattleStoryListResponse& from);

  inline SpecialBattleStoryListResponse& operator=(const SpecialBattleStoryListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattleStoryListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattleStoryListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattleStoryListResponse* other);

  // implements Message ----------------------------------------------

  SpecialBattleStoryListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattleStoryListResponse& from);
  void MergeFrom(const SpecialBattleStoryListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.SpecialBattleStoryModel storyModel = 1;
  inline int storymodel_size() const;
  inline void clear_storymodel();
  static const int kStoryModelFieldNumber = 1;
  inline const ::main::SpecialBattleStoryModel& storymodel(int index) const;
  inline ::main::SpecialBattleStoryModel* mutable_storymodel(int index);
  inline ::main::SpecialBattleStoryModel* add_storymodel();
  inline const ::google::protobuf::RepeatedPtrField< ::main::SpecialBattleStoryModel >&
      storymodel() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::SpecialBattleStoryModel >*
      mutable_storymodel();

  // @@protoc_insertion_point(class_scope:main.SpecialBattleStoryListResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::SpecialBattleStoryModel > storymodel_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattleStoryListResponse* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattleStoryModel : public ::google::protobuf::MessageLite {
 public:
  SpecialBattleStoryModel();
  virtual ~SpecialBattleStoryModel();

  SpecialBattleStoryModel(const SpecialBattleStoryModel& from);

  inline SpecialBattleStoryModel& operator=(const SpecialBattleStoryModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattleStoryModel& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattleStoryModel* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattleStoryModel* other);

  // implements Message ----------------------------------------------

  SpecialBattleStoryModel* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattleStoryModel& from);
  void MergeFrom(const SpecialBattleStoryModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 position = 1;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 1;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);

  // optional int32 storyId = 2;
  inline bool has_storyid() const;
  inline void clear_storyid();
  static const int kStoryIdFieldNumber = 2;
  inline ::google::protobuf::int32 storyid() const;
  inline void set_storyid(::google::protobuf::int32 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 canJoinCount = 4;
  inline bool has_canjoincount() const;
  inline void clear_canjoincount();
  static const int kCanJoinCountFieldNumber = 4;
  inline ::google::protobuf::int32 canjoincount() const;
  inline void set_canjoincount(::google::protobuf::int32 value);

  // optional int32 maxCount = 5;
  inline bool has_maxcount() const;
  inline void clear_maxcount();
  static const int kMaxCountFieldNumber = 5;
  inline ::google::protobuf::int32 maxcount() const;
  inline void set_maxcount(::google::protobuf::int32 value);

  // optional string name = 6;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 6;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string description = 7;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 7;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // optional string opendesc = 8;
  inline bool has_opendesc() const;
  inline void clear_opendesc();
  static const int kOpendescFieldNumber = 8;
  inline const ::std::string& opendesc() const;
  inline void set_opendesc(const ::std::string& value);
  inline void set_opendesc(const char* value);
  inline void set_opendesc(const char* value, size_t size);
  inline ::std::string* mutable_opendesc();
  inline ::std::string* release_opendesc();
  inline void set_allocated_opendesc(::std::string* opendesc);

  // optional string closedesc = 9;
  inline bool has_closedesc() const;
  inline void clear_closedesc();
  static const int kClosedescFieldNumber = 9;
  inline const ::std::string& closedesc() const;
  inline void set_closedesc(const ::std::string& value);
  inline void set_closedesc(const char* value);
  inline void set_closedesc(const char* value, size_t size);
  inline ::std::string* mutable_closedesc();
  inline ::std::string* release_closedesc();
  inline void set_allocated_closedesc(::std::string* closedesc);

  // optional int32 iconType = 10;
  inline bool has_icontype() const;
  inline void clear_icontype();
  static const int kIconTypeFieldNumber = 10;
  inline ::google::protobuf::int32 icontype() const;
  inline void set_icontype(::google::protobuf::int32 value);

  // optional int32 iconId = 11;
  inline bool has_iconid() const;
  inline void clear_iconid();
  static const int kIconIdFieldNumber = 11;
  inline ::google::protobuf::int32 iconid() const;
  inline void set_iconid(::google::protobuf::int32 value);

  // optional int32 banaerId = 12;
  inline bool has_banaerid() const;
  inline void clear_banaerid();
  static const int kBanaerIdFieldNumber = 12;
  inline ::google::protobuf::int32 banaerid() const;
  inline void set_banaerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SpecialBattleStoryModel)
 private:
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_storyid();
  inline void clear_has_storyid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_canjoincount();
  inline void clear_has_canjoincount();
  inline void set_has_maxcount();
  inline void clear_has_maxcount();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_description();
  inline void clear_has_description();
  inline void set_has_opendesc();
  inline void clear_has_opendesc();
  inline void set_has_closedesc();
  inline void clear_has_closedesc();
  inline void set_has_icontype();
  inline void clear_has_icontype();
  inline void set_has_iconid();
  inline void clear_has_iconid();
  inline void set_has_banaerid();
  inline void clear_has_banaerid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 storyid_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 canjoincount_;
  ::std::string* name_;
  ::std::string* description_;
  ::google::protobuf::int32 maxcount_;
  ::google::protobuf::int32 icontype_;
  ::std::string* opendesc_;
  ::std::string* closedesc_;
  ::google::protobuf::int32 iconid_;
  ::google::protobuf::int32 banaerid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattleStoryModel* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattleStoryListRequest : public ::google::protobuf::MessageLite {
 public:
  SpecialBattleStoryListRequest();
  virtual ~SpecialBattleStoryListRequest();

  SpecialBattleStoryListRequest(const SpecialBattleStoryListRequest& from);

  inline SpecialBattleStoryListRequest& operator=(const SpecialBattleStoryListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattleStoryListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattleStoryListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattleStoryListRequest* other);

  // implements Message ----------------------------------------------

  SpecialBattleStoryListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattleStoryListRequest& from);
  void MergeFrom(const SpecialBattleStoryListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:main.SpecialBattleStoryListRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattleStoryListRequest* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattlePlotListRequest : public ::google::protobuf::MessageLite {
 public:
  SpecialBattlePlotListRequest();
  virtual ~SpecialBattlePlotListRequest();

  SpecialBattlePlotListRequest(const SpecialBattlePlotListRequest& from);

  inline SpecialBattlePlotListRequest& operator=(const SpecialBattlePlotListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattlePlotListRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattlePlotListRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattlePlotListRequest* other);

  // implements Message ----------------------------------------------

  SpecialBattlePlotListRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattlePlotListRequest& from);
  void MergeFrom(const SpecialBattlePlotListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 storyId = 1;
  inline bool has_storyid() const;
  inline void clear_storyid();
  static const int kStoryIdFieldNumber = 1;
  inline ::google::protobuf::int32 storyid() const;
  inline void set_storyid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SpecialBattlePlotListRequest)
 private:
  inline void set_has_storyid();
  inline void clear_has_storyid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 storyid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattlePlotListRequest* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattlePlotListResponse : public ::google::protobuf::MessageLite {
 public:
  SpecialBattlePlotListResponse();
  virtual ~SpecialBattlePlotListResponse();

  SpecialBattlePlotListResponse(const SpecialBattlePlotListResponse& from);

  inline SpecialBattlePlotListResponse& operator=(const SpecialBattlePlotListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattlePlotListResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattlePlotListResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattlePlotListResponse* other);

  // implements Message ----------------------------------------------

  SpecialBattlePlotListResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattlePlotListResponse& from);
  void MergeFrom(const SpecialBattlePlotListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.SpecialBattlePlotModel plotModel = 1;
  inline int plotmodel_size() const;
  inline void clear_plotmodel();
  static const int kPlotModelFieldNumber = 1;
  inline const ::main::SpecialBattlePlotModel& plotmodel(int index) const;
  inline ::main::SpecialBattlePlotModel* mutable_plotmodel(int index);
  inline ::main::SpecialBattlePlotModel* add_plotmodel();
  inline const ::google::protobuf::RepeatedPtrField< ::main::SpecialBattlePlotModel >&
      plotmodel() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::SpecialBattlePlotModel >*
      mutable_plotmodel();

  // optional .main.SpecialBattleStoryModel storyModel = 7;
  inline bool has_storymodel() const;
  inline void clear_storymodel();
  static const int kStoryModelFieldNumber = 7;
  inline const ::main::SpecialBattleStoryModel& storymodel() const;
  inline ::main::SpecialBattleStoryModel* mutable_storymodel();
  inline ::main::SpecialBattleStoryModel* release_storymodel();
  inline void set_allocated_storymodel(::main::SpecialBattleStoryModel* storymodel);

  // @@protoc_insertion_point(class_scope:main.SpecialBattlePlotListResponse)
 private:
  inline void set_has_storymodel();
  inline void clear_has_storymodel();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::SpecialBattlePlotModel > plotmodel_;
  ::main::SpecialBattleStoryModel* storymodel_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattlePlotListResponse* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattlePlotModel : public ::google::protobuf::MessageLite {
 public:
  SpecialBattlePlotModel();
  virtual ~SpecialBattlePlotModel();

  SpecialBattlePlotModel(const SpecialBattlePlotModel& from);

  inline SpecialBattlePlotModel& operator=(const SpecialBattlePlotModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattlePlotModel& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattlePlotModel* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattlePlotModel* other);

  // implements Message ----------------------------------------------

  SpecialBattlePlotModel* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattlePlotModel& from);
  void MergeFrom(const SpecialBattlePlotModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 plotId = 1;
  inline bool has_plotid() const;
  inline void clear_plotid();
  static const int kPlotIdFieldNumber = 1;
  inline ::google::protobuf::int32 plotid() const;
  inline void set_plotid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional string closedesc = 4;
  inline bool has_closedesc() const;
  inline void clear_closedesc();
  static const int kClosedescFieldNumber = 4;
  inline const ::std::string& closedesc() const;
  inline void set_closedesc(const ::std::string& value);
  inline void set_closedesc(const char* value);
  inline void set_closedesc(const char* value, size_t size);
  inline ::std::string* mutable_closedesc();
  inline ::std::string* release_closedesc();
  inline void set_allocated_closedesc(::std::string* closedesc);

  // optional int32 icon = 5;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 5;
  inline ::google::protobuf::int32 icon() const;
  inline void set_icon(::google::protobuf::int32 value);

  // repeated .main.SpecialBattleItemModel items = 6;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 6;
  inline const ::main::SpecialBattleItemModel& items(int index) const;
  inline ::main::SpecialBattleItemModel* mutable_items(int index);
  inline ::main::SpecialBattleItemModel* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::main::SpecialBattleItemModel >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::SpecialBattleItemModel >*
      mutable_items();

  // optional int32 combatValue = 7;
  inline bool has_combatvalue() const;
  inline void clear_combatvalue();
  static const int kCombatValueFieldNumber = 7;
  inline ::google::protobuf::int32 combatvalue() const;
  inline void set_combatvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SpecialBattlePlotModel)
 private:
  inline void set_has_plotid();
  inline void clear_has_plotid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_closedesc();
  inline void clear_has_closedesc();
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_combatvalue();
  inline void clear_has_combatvalue();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::int32 plotid_;
  ::google::protobuf::int32 state_;
  ::std::string* closedesc_;
  ::google::protobuf::RepeatedPtrField< ::main::SpecialBattleItemModel > items_;
  ::google::protobuf::int32 icon_;
  ::google::protobuf::int32 combatvalue_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattlePlotModel* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattleItemModel : public ::google::protobuf::MessageLite {
 public:
  SpecialBattleItemModel();
  virtual ~SpecialBattleItemModel();

  SpecialBattleItemModel(const SpecialBattleItemModel& from);

  inline SpecialBattleItemModel& operator=(const SpecialBattleItemModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattleItemModel& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattleItemModel* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattleItemModel* other);

  // implements Message ----------------------------------------------

  SpecialBattleItemModel* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattleItemModel& from);
  void MergeFrom(const SpecialBattleItemModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemId = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 itemType = 2;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 2;
  inline ::google::protobuf::int32 itemtype() const;
  inline void set_itemtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SpecialBattleItemModel)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemtype_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattleItemModel* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattleCheckFightRequest : public ::google::protobuf::MessageLite {
 public:
  SpecialBattleCheckFightRequest();
  virtual ~SpecialBattleCheckFightRequest();

  SpecialBattleCheckFightRequest(const SpecialBattleCheckFightRequest& from);

  inline SpecialBattleCheckFightRequest& operator=(const SpecialBattleCheckFightRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattleCheckFightRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattleCheckFightRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattleCheckFightRequest* other);

  // implements Message ----------------------------------------------

  SpecialBattleCheckFightRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattleCheckFightRequest& from);
  void MergeFrom(const SpecialBattleCheckFightRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 plotId = 1;
  inline bool has_plotid() const;
  inline void clear_plotid();
  static const int kPlotIdFieldNumber = 1;
  inline ::google::protobuf::int32 plotid() const;
  inline void set_plotid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SpecialBattleCheckFightRequest)
 private:
  inline void set_has_plotid();
  inline void clear_has_plotid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 plotid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattleCheckFightRequest* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattleCheckFightResponse : public ::google::protobuf::MessageLite {
 public:
  SpecialBattleCheckFightResponse();
  virtual ~SpecialBattleCheckFightResponse();

  SpecialBattleCheckFightResponse(const SpecialBattleCheckFightResponse& from);

  inline SpecialBattleCheckFightResponse& operator=(const SpecialBattleCheckFightResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattleCheckFightResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattleCheckFightResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattleCheckFightResponse* other);

  // implements Message ----------------------------------------------

  SpecialBattleCheckFightResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattleCheckFightResponse& from);
  void MergeFrom(const SpecialBattleCheckFightResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SpecialBattleCheckFightResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattleCheckFightResponse* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattleBuyCountRequest : public ::google::protobuf::MessageLite {
 public:
  SpecialBattleBuyCountRequest();
  virtual ~SpecialBattleBuyCountRequest();

  SpecialBattleBuyCountRequest(const SpecialBattleBuyCountRequest& from);

  inline SpecialBattleBuyCountRequest& operator=(const SpecialBattleBuyCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattleBuyCountRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattleBuyCountRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattleBuyCountRequest* other);

  // implements Message ----------------------------------------------

  SpecialBattleBuyCountRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattleBuyCountRequest& from);
  void MergeFrom(const SpecialBattleBuyCountRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 storyId = 1;
  inline bool has_storyid() const;
  inline void clear_storyid();
  static const int kStoryIdFieldNumber = 1;
  inline ::google::protobuf::int32 storyid() const;
  inline void set_storyid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SpecialBattleBuyCountRequest)
 private:
  inline void set_has_storyid();
  inline void clear_has_storyid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 storyid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattleBuyCountRequest* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattleBuyCountResponse : public ::google::protobuf::MessageLite {
 public:
  SpecialBattleBuyCountResponse();
  virtual ~SpecialBattleBuyCountResponse();

  SpecialBattleBuyCountResponse(const SpecialBattleBuyCountResponse& from);

  inline SpecialBattleBuyCountResponse& operator=(const SpecialBattleBuyCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattleBuyCountResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattleBuyCountResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattleBuyCountResponse* other);

  // implements Message ----------------------------------------------

  SpecialBattleBuyCountResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattleBuyCountResponse& from);
  void MergeFrom(const SpecialBattleBuyCountResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SpecialBattleBuyCountResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattleBuyCountResponse* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattleBuyCountEntryRequest : public ::google::protobuf::MessageLite {
 public:
  SpecialBattleBuyCountEntryRequest();
  virtual ~SpecialBattleBuyCountEntryRequest();

  SpecialBattleBuyCountEntryRequest(const SpecialBattleBuyCountEntryRequest& from);

  inline SpecialBattleBuyCountEntryRequest& operator=(const SpecialBattleBuyCountEntryRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattleBuyCountEntryRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattleBuyCountEntryRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattleBuyCountEntryRequest* other);

  // implements Message ----------------------------------------------

  SpecialBattleBuyCountEntryRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattleBuyCountEntryRequest& from);
  void MergeFrom(const SpecialBattleBuyCountEntryRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 storyId = 1;
  inline bool has_storyid() const;
  inline void clear_storyid();
  static const int kStoryIdFieldNumber = 1;
  inline ::google::protobuf::int32 storyid() const;
  inline void set_storyid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SpecialBattleBuyCountEntryRequest)
 private:
  inline void set_has_storyid();
  inline void clear_has_storyid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 storyid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattleBuyCountEntryRequest* default_instance_;
};
// -------------------------------------------------------------------

class SpecialBattleBuyCountEntryResponse : public ::google::protobuf::MessageLite {
 public:
  SpecialBattleBuyCountEntryResponse();
  virtual ~SpecialBattleBuyCountEntryResponse();

  SpecialBattleBuyCountEntryResponse(const SpecialBattleBuyCountEntryResponse& from);

  inline SpecialBattleBuyCountEntryResponse& operator=(const SpecialBattleBuyCountEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SpecialBattleBuyCountEntryResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SpecialBattleBuyCountEntryResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SpecialBattleBuyCountEntryResponse* other);

  // implements Message ----------------------------------------------

  SpecialBattleBuyCountEntryResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SpecialBattleBuyCountEntryResponse& from);
  void MergeFrom(const SpecialBattleBuyCountEntryResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 canBuyCount = 1;
  inline bool has_canbuycount() const;
  inline void clear_canbuycount();
  static const int kCanBuyCountFieldNumber = 1;
  inline ::google::protobuf::int32 canbuycount() const;
  inline void set_canbuycount(::google::protobuf::int32 value);

  // optional int32 maxBuyCount = 2;
  inline bool has_maxbuycount() const;
  inline void clear_maxbuycount();
  static const int kMaxBuyCountFieldNumber = 2;
  inline ::google::protobuf::int32 maxbuycount() const;
  inline void set_maxbuycount(::google::protobuf::int32 value);

  // optional int32 cost = 3;
  inline bool has_cost() const;
  inline void clear_cost();
  static const int kCostFieldNumber = 3;
  inline ::google::protobuf::int32 cost() const;
  inline void set_cost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.SpecialBattleBuyCountEntryResponse)
 private:
  inline void set_has_canbuycount();
  inline void clear_has_canbuycount();
  inline void set_has_maxbuycount();
  inline void clear_has_maxbuycount();
  inline void set_has_cost();
  inline void clear_has_cost();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 canbuycount_;
  ::google::protobuf::int32 maxbuycount_;
  ::google::protobuf::int32 cost_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_SpecialBattleModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_SpecialBattleModule_2eproto();
  friend void protobuf_ShutdownFile_SpecialBattleModule_2eproto();

  void InitAsDefaultInstance();
  static SpecialBattleBuyCountEntryResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// SpecialBattleStoryListResponse

// repeated .main.SpecialBattleStoryModel storyModel = 1;
inline int SpecialBattleStoryListResponse::storymodel_size() const {
  return storymodel_.size();
}
inline void SpecialBattleStoryListResponse::clear_storymodel() {
  storymodel_.Clear();
}
inline const ::main::SpecialBattleStoryModel& SpecialBattleStoryListResponse::storymodel(int index) const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryListResponse.storyModel)
  return storymodel_.Get(index);
}
inline ::main::SpecialBattleStoryModel* SpecialBattleStoryListResponse::mutable_storymodel(int index) {
  // @@protoc_insertion_point(field_mutable:main.SpecialBattleStoryListResponse.storyModel)
  return storymodel_.Mutable(index);
}
inline ::main::SpecialBattleStoryModel* SpecialBattleStoryListResponse::add_storymodel() {
  // @@protoc_insertion_point(field_add:main.SpecialBattleStoryListResponse.storyModel)
  return storymodel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::SpecialBattleStoryModel >&
SpecialBattleStoryListResponse::storymodel() const {
  // @@protoc_insertion_point(field_list:main.SpecialBattleStoryListResponse.storyModel)
  return storymodel_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::SpecialBattleStoryModel >*
SpecialBattleStoryListResponse::mutable_storymodel() {
  // @@protoc_insertion_point(field_mutable_list:main.SpecialBattleStoryListResponse.storyModel)
  return &storymodel_;
}

// -------------------------------------------------------------------

// SpecialBattleStoryModel

// optional int32 position = 1;
inline bool SpecialBattleStoryModel::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialBattleStoryModel::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialBattleStoryModel::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialBattleStoryModel::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 SpecialBattleStoryModel::position() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.position)
  return position_;
}
inline void SpecialBattleStoryModel::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.position)
}

// optional int32 storyId = 2;
inline bool SpecialBattleStoryModel::has_storyid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpecialBattleStoryModel::set_has_storyid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpecialBattleStoryModel::clear_has_storyid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpecialBattleStoryModel::clear_storyid() {
  storyid_ = 0;
  clear_has_storyid();
}
inline ::google::protobuf::int32 SpecialBattleStoryModel::storyid() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.storyId)
  return storyid_;
}
inline void SpecialBattleStoryModel::set_storyid(::google::protobuf::int32 value) {
  set_has_storyid();
  storyid_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.storyId)
}

// optional int32 state = 3;
inline bool SpecialBattleStoryModel::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpecialBattleStoryModel::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpecialBattleStoryModel::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpecialBattleStoryModel::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 SpecialBattleStoryModel::state() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.state)
  return state_;
}
inline void SpecialBattleStoryModel::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.state)
}

// optional int32 canJoinCount = 4;
inline bool SpecialBattleStoryModel::has_canjoincount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SpecialBattleStoryModel::set_has_canjoincount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SpecialBattleStoryModel::clear_has_canjoincount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SpecialBattleStoryModel::clear_canjoincount() {
  canjoincount_ = 0;
  clear_has_canjoincount();
}
inline ::google::protobuf::int32 SpecialBattleStoryModel::canjoincount() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.canJoinCount)
  return canjoincount_;
}
inline void SpecialBattleStoryModel::set_canjoincount(::google::protobuf::int32 value) {
  set_has_canjoincount();
  canjoincount_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.canJoinCount)
}

// optional int32 maxCount = 5;
inline bool SpecialBattleStoryModel::has_maxcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SpecialBattleStoryModel::set_has_maxcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SpecialBattleStoryModel::clear_has_maxcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SpecialBattleStoryModel::clear_maxcount() {
  maxcount_ = 0;
  clear_has_maxcount();
}
inline ::google::protobuf::int32 SpecialBattleStoryModel::maxcount() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.maxCount)
  return maxcount_;
}
inline void SpecialBattleStoryModel::set_maxcount(::google::protobuf::int32 value) {
  set_has_maxcount();
  maxcount_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.maxCount)
}

// optional string name = 6;
inline bool SpecialBattleStoryModel::has_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SpecialBattleStoryModel::set_has_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SpecialBattleStoryModel::clear_has_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SpecialBattleStoryModel::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SpecialBattleStoryModel::name() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.name)
  return *name_;
}
inline void SpecialBattleStoryModel::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.name)
}
inline void SpecialBattleStoryModel::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SpecialBattleStoryModel.name)
}
inline void SpecialBattleStoryModel::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SpecialBattleStoryModel.name)
}
inline ::std::string* SpecialBattleStoryModel::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SpecialBattleStoryModel.name)
  return name_;
}
inline ::std::string* SpecialBattleStoryModel::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SpecialBattleStoryModel::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SpecialBattleStoryModel.name)
}

// optional string description = 7;
inline bool SpecialBattleStoryModel::has_description() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SpecialBattleStoryModel::set_has_description() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SpecialBattleStoryModel::clear_has_description() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SpecialBattleStoryModel::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& SpecialBattleStoryModel::description() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.description)
  return *description_;
}
inline void SpecialBattleStoryModel::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.description)
}
inline void SpecialBattleStoryModel::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SpecialBattleStoryModel.description)
}
inline void SpecialBattleStoryModel::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SpecialBattleStoryModel.description)
}
inline ::std::string* SpecialBattleStoryModel::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SpecialBattleStoryModel.description)
  return description_;
}
inline ::std::string* SpecialBattleStoryModel::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SpecialBattleStoryModel::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SpecialBattleStoryModel.description)
}

// optional string opendesc = 8;
inline bool SpecialBattleStoryModel::has_opendesc() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SpecialBattleStoryModel::set_has_opendesc() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SpecialBattleStoryModel::clear_has_opendesc() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SpecialBattleStoryModel::clear_opendesc() {
  if (opendesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opendesc_->clear();
  }
  clear_has_opendesc();
}
inline const ::std::string& SpecialBattleStoryModel::opendesc() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.opendesc)
  return *opendesc_;
}
inline void SpecialBattleStoryModel::set_opendesc(const ::std::string& value) {
  set_has_opendesc();
  if (opendesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opendesc_ = new ::std::string;
  }
  opendesc_->assign(value);
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.opendesc)
}
inline void SpecialBattleStoryModel::set_opendesc(const char* value) {
  set_has_opendesc();
  if (opendesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opendesc_ = new ::std::string;
  }
  opendesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SpecialBattleStoryModel.opendesc)
}
inline void SpecialBattleStoryModel::set_opendesc(const char* value, size_t size) {
  set_has_opendesc();
  if (opendesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opendesc_ = new ::std::string;
  }
  opendesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SpecialBattleStoryModel.opendesc)
}
inline ::std::string* SpecialBattleStoryModel::mutable_opendesc() {
  set_has_opendesc();
  if (opendesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    opendesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SpecialBattleStoryModel.opendesc)
  return opendesc_;
}
inline ::std::string* SpecialBattleStoryModel::release_opendesc() {
  clear_has_opendesc();
  if (opendesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = opendesc_;
    opendesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SpecialBattleStoryModel::set_allocated_opendesc(::std::string* opendesc) {
  if (opendesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete opendesc_;
  }
  if (opendesc) {
    set_has_opendesc();
    opendesc_ = opendesc;
  } else {
    clear_has_opendesc();
    opendesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SpecialBattleStoryModel.opendesc)
}

// optional string closedesc = 9;
inline bool SpecialBattleStoryModel::has_closedesc() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SpecialBattleStoryModel::set_has_closedesc() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SpecialBattleStoryModel::clear_has_closedesc() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SpecialBattleStoryModel::clear_closedesc() {
  if (closedesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    closedesc_->clear();
  }
  clear_has_closedesc();
}
inline const ::std::string& SpecialBattleStoryModel::closedesc() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.closedesc)
  return *closedesc_;
}
inline void SpecialBattleStoryModel::set_closedesc(const ::std::string& value) {
  set_has_closedesc();
  if (closedesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    closedesc_ = new ::std::string;
  }
  closedesc_->assign(value);
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.closedesc)
}
inline void SpecialBattleStoryModel::set_closedesc(const char* value) {
  set_has_closedesc();
  if (closedesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    closedesc_ = new ::std::string;
  }
  closedesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SpecialBattleStoryModel.closedesc)
}
inline void SpecialBattleStoryModel::set_closedesc(const char* value, size_t size) {
  set_has_closedesc();
  if (closedesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    closedesc_ = new ::std::string;
  }
  closedesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SpecialBattleStoryModel.closedesc)
}
inline ::std::string* SpecialBattleStoryModel::mutable_closedesc() {
  set_has_closedesc();
  if (closedesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    closedesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SpecialBattleStoryModel.closedesc)
  return closedesc_;
}
inline ::std::string* SpecialBattleStoryModel::release_closedesc() {
  clear_has_closedesc();
  if (closedesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = closedesc_;
    closedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SpecialBattleStoryModel::set_allocated_closedesc(::std::string* closedesc) {
  if (closedesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete closedesc_;
  }
  if (closedesc) {
    set_has_closedesc();
    closedesc_ = closedesc;
  } else {
    clear_has_closedesc();
    closedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SpecialBattleStoryModel.closedesc)
}

// optional int32 iconType = 10;
inline bool SpecialBattleStoryModel::has_icontype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SpecialBattleStoryModel::set_has_icontype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SpecialBattleStoryModel::clear_has_icontype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SpecialBattleStoryModel::clear_icontype() {
  icontype_ = 0;
  clear_has_icontype();
}
inline ::google::protobuf::int32 SpecialBattleStoryModel::icontype() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.iconType)
  return icontype_;
}
inline void SpecialBattleStoryModel::set_icontype(::google::protobuf::int32 value) {
  set_has_icontype();
  icontype_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.iconType)
}

// optional int32 iconId = 11;
inline bool SpecialBattleStoryModel::has_iconid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SpecialBattleStoryModel::set_has_iconid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SpecialBattleStoryModel::clear_has_iconid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SpecialBattleStoryModel::clear_iconid() {
  iconid_ = 0;
  clear_has_iconid();
}
inline ::google::protobuf::int32 SpecialBattleStoryModel::iconid() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.iconId)
  return iconid_;
}
inline void SpecialBattleStoryModel::set_iconid(::google::protobuf::int32 value) {
  set_has_iconid();
  iconid_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.iconId)
}

// optional int32 banaerId = 12;
inline bool SpecialBattleStoryModel::has_banaerid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void SpecialBattleStoryModel::set_has_banaerid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void SpecialBattleStoryModel::clear_has_banaerid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void SpecialBattleStoryModel::clear_banaerid() {
  banaerid_ = 0;
  clear_has_banaerid();
}
inline ::google::protobuf::int32 SpecialBattleStoryModel::banaerid() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleStoryModel.banaerId)
  return banaerid_;
}
inline void SpecialBattleStoryModel::set_banaerid(::google::protobuf::int32 value) {
  set_has_banaerid();
  banaerid_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleStoryModel.banaerId)
}

// -------------------------------------------------------------------

// SpecialBattleStoryListRequest

// -------------------------------------------------------------------

// SpecialBattlePlotListRequest

// optional int32 storyId = 1;
inline bool SpecialBattlePlotListRequest::has_storyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialBattlePlotListRequest::set_has_storyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialBattlePlotListRequest::clear_has_storyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialBattlePlotListRequest::clear_storyid() {
  storyid_ = 0;
  clear_has_storyid();
}
inline ::google::protobuf::int32 SpecialBattlePlotListRequest::storyid() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattlePlotListRequest.storyId)
  return storyid_;
}
inline void SpecialBattlePlotListRequest::set_storyid(::google::protobuf::int32 value) {
  set_has_storyid();
  storyid_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattlePlotListRequest.storyId)
}

// -------------------------------------------------------------------

// SpecialBattlePlotListResponse

// repeated .main.SpecialBattlePlotModel plotModel = 1;
inline int SpecialBattlePlotListResponse::plotmodel_size() const {
  return plotmodel_.size();
}
inline void SpecialBattlePlotListResponse::clear_plotmodel() {
  plotmodel_.Clear();
}
inline const ::main::SpecialBattlePlotModel& SpecialBattlePlotListResponse::plotmodel(int index) const {
  // @@protoc_insertion_point(field_get:main.SpecialBattlePlotListResponse.plotModel)
  return plotmodel_.Get(index);
}
inline ::main::SpecialBattlePlotModel* SpecialBattlePlotListResponse::mutable_plotmodel(int index) {
  // @@protoc_insertion_point(field_mutable:main.SpecialBattlePlotListResponse.plotModel)
  return plotmodel_.Mutable(index);
}
inline ::main::SpecialBattlePlotModel* SpecialBattlePlotListResponse::add_plotmodel() {
  // @@protoc_insertion_point(field_add:main.SpecialBattlePlotListResponse.plotModel)
  return plotmodel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::SpecialBattlePlotModel >&
SpecialBattlePlotListResponse::plotmodel() const {
  // @@protoc_insertion_point(field_list:main.SpecialBattlePlotListResponse.plotModel)
  return plotmodel_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::SpecialBattlePlotModel >*
SpecialBattlePlotListResponse::mutable_plotmodel() {
  // @@protoc_insertion_point(field_mutable_list:main.SpecialBattlePlotListResponse.plotModel)
  return &plotmodel_;
}

// optional .main.SpecialBattleStoryModel storyModel = 7;
inline bool SpecialBattlePlotListResponse::has_storymodel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpecialBattlePlotListResponse::set_has_storymodel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpecialBattlePlotListResponse::clear_has_storymodel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpecialBattlePlotListResponse::clear_storymodel() {
  if (storymodel_ != NULL) storymodel_->::main::SpecialBattleStoryModel::Clear();
  clear_has_storymodel();
}
inline const ::main::SpecialBattleStoryModel& SpecialBattlePlotListResponse::storymodel() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattlePlotListResponse.storyModel)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return storymodel_ != NULL ? *storymodel_ : *default_instance().storymodel_;
#else
  return storymodel_ != NULL ? *storymodel_ : *default_instance_->storymodel_;
#endif
}
inline ::main::SpecialBattleStoryModel* SpecialBattlePlotListResponse::mutable_storymodel() {
  set_has_storymodel();
  if (storymodel_ == NULL) storymodel_ = new ::main::SpecialBattleStoryModel;
  // @@protoc_insertion_point(field_mutable:main.SpecialBattlePlotListResponse.storyModel)
  return storymodel_;
}
inline ::main::SpecialBattleStoryModel* SpecialBattlePlotListResponse::release_storymodel() {
  clear_has_storymodel();
  ::main::SpecialBattleStoryModel* temp = storymodel_;
  storymodel_ = NULL;
  return temp;
}
inline void SpecialBattlePlotListResponse::set_allocated_storymodel(::main::SpecialBattleStoryModel* storymodel) {
  delete storymodel_;
  storymodel_ = storymodel;
  if (storymodel) {
    set_has_storymodel();
  } else {
    clear_has_storymodel();
  }
  // @@protoc_insertion_point(field_set_allocated:main.SpecialBattlePlotListResponse.storyModel)
}

// -------------------------------------------------------------------

// SpecialBattlePlotModel

// optional int32 plotId = 1;
inline bool SpecialBattlePlotModel::has_plotid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialBattlePlotModel::set_has_plotid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialBattlePlotModel::clear_has_plotid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialBattlePlotModel::clear_plotid() {
  plotid_ = 0;
  clear_has_plotid();
}
inline ::google::protobuf::int32 SpecialBattlePlotModel::plotid() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattlePlotModel.plotId)
  return plotid_;
}
inline void SpecialBattlePlotModel::set_plotid(::google::protobuf::int32 value) {
  set_has_plotid();
  plotid_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattlePlotModel.plotId)
}

// optional string name = 2;
inline bool SpecialBattlePlotModel::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpecialBattlePlotModel::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpecialBattlePlotModel::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpecialBattlePlotModel::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& SpecialBattlePlotModel::name() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattlePlotModel.name)
  return *name_;
}
inline void SpecialBattlePlotModel::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:main.SpecialBattlePlotModel.name)
}
inline void SpecialBattlePlotModel::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SpecialBattlePlotModel.name)
}
inline void SpecialBattlePlotModel::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SpecialBattlePlotModel.name)
}
inline ::std::string* SpecialBattlePlotModel::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SpecialBattlePlotModel.name)
  return name_;
}
inline ::std::string* SpecialBattlePlotModel::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SpecialBattlePlotModel::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SpecialBattlePlotModel.name)
}

// optional int32 state = 3;
inline bool SpecialBattlePlotModel::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpecialBattlePlotModel::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpecialBattlePlotModel::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpecialBattlePlotModel::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 SpecialBattlePlotModel::state() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattlePlotModel.state)
  return state_;
}
inline void SpecialBattlePlotModel::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattlePlotModel.state)
}

// optional string closedesc = 4;
inline bool SpecialBattlePlotModel::has_closedesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SpecialBattlePlotModel::set_has_closedesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SpecialBattlePlotModel::clear_has_closedesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SpecialBattlePlotModel::clear_closedesc() {
  if (closedesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    closedesc_->clear();
  }
  clear_has_closedesc();
}
inline const ::std::string& SpecialBattlePlotModel::closedesc() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattlePlotModel.closedesc)
  return *closedesc_;
}
inline void SpecialBattlePlotModel::set_closedesc(const ::std::string& value) {
  set_has_closedesc();
  if (closedesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    closedesc_ = new ::std::string;
  }
  closedesc_->assign(value);
  // @@protoc_insertion_point(field_set:main.SpecialBattlePlotModel.closedesc)
}
inline void SpecialBattlePlotModel::set_closedesc(const char* value) {
  set_has_closedesc();
  if (closedesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    closedesc_ = new ::std::string;
  }
  closedesc_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SpecialBattlePlotModel.closedesc)
}
inline void SpecialBattlePlotModel::set_closedesc(const char* value, size_t size) {
  set_has_closedesc();
  if (closedesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    closedesc_ = new ::std::string;
  }
  closedesc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SpecialBattlePlotModel.closedesc)
}
inline ::std::string* SpecialBattlePlotModel::mutable_closedesc() {
  set_has_closedesc();
  if (closedesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    closedesc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SpecialBattlePlotModel.closedesc)
  return closedesc_;
}
inline ::std::string* SpecialBattlePlotModel::release_closedesc() {
  clear_has_closedesc();
  if (closedesc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = closedesc_;
    closedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SpecialBattlePlotModel::set_allocated_closedesc(::std::string* closedesc) {
  if (closedesc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete closedesc_;
  }
  if (closedesc) {
    set_has_closedesc();
    closedesc_ = closedesc;
  } else {
    clear_has_closedesc();
    closedesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SpecialBattlePlotModel.closedesc)
}

// optional int32 icon = 5;
inline bool SpecialBattlePlotModel::has_icon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SpecialBattlePlotModel::set_has_icon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SpecialBattlePlotModel::clear_has_icon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SpecialBattlePlotModel::clear_icon() {
  icon_ = 0;
  clear_has_icon();
}
inline ::google::protobuf::int32 SpecialBattlePlotModel::icon() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattlePlotModel.icon)
  return icon_;
}
inline void SpecialBattlePlotModel::set_icon(::google::protobuf::int32 value) {
  set_has_icon();
  icon_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattlePlotModel.icon)
}

// repeated .main.SpecialBattleItemModel items = 6;
inline int SpecialBattlePlotModel::items_size() const {
  return items_.size();
}
inline void SpecialBattlePlotModel::clear_items() {
  items_.Clear();
}
inline const ::main::SpecialBattleItemModel& SpecialBattlePlotModel::items(int index) const {
  // @@protoc_insertion_point(field_get:main.SpecialBattlePlotModel.items)
  return items_.Get(index);
}
inline ::main::SpecialBattleItemModel* SpecialBattlePlotModel::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:main.SpecialBattlePlotModel.items)
  return items_.Mutable(index);
}
inline ::main::SpecialBattleItemModel* SpecialBattlePlotModel::add_items() {
  // @@protoc_insertion_point(field_add:main.SpecialBattlePlotModel.items)
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::SpecialBattleItemModel >&
SpecialBattlePlotModel::items() const {
  // @@protoc_insertion_point(field_list:main.SpecialBattlePlotModel.items)
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::SpecialBattleItemModel >*
SpecialBattlePlotModel::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:main.SpecialBattlePlotModel.items)
  return &items_;
}

// optional int32 combatValue = 7;
inline bool SpecialBattlePlotModel::has_combatvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SpecialBattlePlotModel::set_has_combatvalue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SpecialBattlePlotModel::clear_has_combatvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SpecialBattlePlotModel::clear_combatvalue() {
  combatvalue_ = 0;
  clear_has_combatvalue();
}
inline ::google::protobuf::int32 SpecialBattlePlotModel::combatvalue() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattlePlotModel.combatValue)
  return combatvalue_;
}
inline void SpecialBattlePlotModel::set_combatvalue(::google::protobuf::int32 value) {
  set_has_combatvalue();
  combatvalue_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattlePlotModel.combatValue)
}

// -------------------------------------------------------------------

// SpecialBattleItemModel

// optional int32 itemId = 1;
inline bool SpecialBattleItemModel::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialBattleItemModel::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialBattleItemModel::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialBattleItemModel::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 SpecialBattleItemModel::itemid() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleItemModel.itemId)
  return itemid_;
}
inline void SpecialBattleItemModel::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleItemModel.itemId)
}

// optional int32 itemType = 2;
inline bool SpecialBattleItemModel::has_itemtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpecialBattleItemModel::set_has_itemtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpecialBattleItemModel::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpecialBattleItemModel::clear_itemtype() {
  itemtype_ = 0;
  clear_has_itemtype();
}
inline ::google::protobuf::int32 SpecialBattleItemModel::itemtype() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleItemModel.itemType)
  return itemtype_;
}
inline void SpecialBattleItemModel::set_itemtype(::google::protobuf::int32 value) {
  set_has_itemtype();
  itemtype_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleItemModel.itemType)
}

// -------------------------------------------------------------------

// SpecialBattleCheckFightRequest

// optional int32 plotId = 1;
inline bool SpecialBattleCheckFightRequest::has_plotid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialBattleCheckFightRequest::set_has_plotid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialBattleCheckFightRequest::clear_has_plotid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialBattleCheckFightRequest::clear_plotid() {
  plotid_ = 0;
  clear_has_plotid();
}
inline ::google::protobuf::int32 SpecialBattleCheckFightRequest::plotid() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleCheckFightRequest.plotId)
  return plotid_;
}
inline void SpecialBattleCheckFightRequest::set_plotid(::google::protobuf::int32 value) {
  set_has_plotid();
  plotid_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleCheckFightRequest.plotId)
}

// -------------------------------------------------------------------

// SpecialBattleCheckFightResponse

// optional int32 state = 1;
inline bool SpecialBattleCheckFightResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialBattleCheckFightResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialBattleCheckFightResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialBattleCheckFightResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 SpecialBattleCheckFightResponse::state() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleCheckFightResponse.state)
  return state_;
}
inline void SpecialBattleCheckFightResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleCheckFightResponse.state)
}

// -------------------------------------------------------------------

// SpecialBattleBuyCountRequest

// optional int32 storyId = 1;
inline bool SpecialBattleBuyCountRequest::has_storyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialBattleBuyCountRequest::set_has_storyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialBattleBuyCountRequest::clear_has_storyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialBattleBuyCountRequest::clear_storyid() {
  storyid_ = 0;
  clear_has_storyid();
}
inline ::google::protobuf::int32 SpecialBattleBuyCountRequest::storyid() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleBuyCountRequest.storyId)
  return storyid_;
}
inline void SpecialBattleBuyCountRequest::set_storyid(::google::protobuf::int32 value) {
  set_has_storyid();
  storyid_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleBuyCountRequest.storyId)
}

// -------------------------------------------------------------------

// SpecialBattleBuyCountResponse

// optional int32 state = 1;
inline bool SpecialBattleBuyCountResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialBattleBuyCountResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialBattleBuyCountResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialBattleBuyCountResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 SpecialBattleBuyCountResponse::state() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleBuyCountResponse.state)
  return state_;
}
inline void SpecialBattleBuyCountResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleBuyCountResponse.state)
}

// -------------------------------------------------------------------

// SpecialBattleBuyCountEntryRequest

// optional int32 storyId = 1;
inline bool SpecialBattleBuyCountEntryRequest::has_storyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialBattleBuyCountEntryRequest::set_has_storyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialBattleBuyCountEntryRequest::clear_has_storyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialBattleBuyCountEntryRequest::clear_storyid() {
  storyid_ = 0;
  clear_has_storyid();
}
inline ::google::protobuf::int32 SpecialBattleBuyCountEntryRequest::storyid() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleBuyCountEntryRequest.storyId)
  return storyid_;
}
inline void SpecialBattleBuyCountEntryRequest::set_storyid(::google::protobuf::int32 value) {
  set_has_storyid();
  storyid_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleBuyCountEntryRequest.storyId)
}

// -------------------------------------------------------------------

// SpecialBattleBuyCountEntryResponse

// optional int32 canBuyCount = 1;
inline bool SpecialBattleBuyCountEntryResponse::has_canbuycount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpecialBattleBuyCountEntryResponse::set_has_canbuycount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpecialBattleBuyCountEntryResponse::clear_has_canbuycount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpecialBattleBuyCountEntryResponse::clear_canbuycount() {
  canbuycount_ = 0;
  clear_has_canbuycount();
}
inline ::google::protobuf::int32 SpecialBattleBuyCountEntryResponse::canbuycount() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleBuyCountEntryResponse.canBuyCount)
  return canbuycount_;
}
inline void SpecialBattleBuyCountEntryResponse::set_canbuycount(::google::protobuf::int32 value) {
  set_has_canbuycount();
  canbuycount_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleBuyCountEntryResponse.canBuyCount)
}

// optional int32 maxBuyCount = 2;
inline bool SpecialBattleBuyCountEntryResponse::has_maxbuycount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpecialBattleBuyCountEntryResponse::set_has_maxbuycount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpecialBattleBuyCountEntryResponse::clear_has_maxbuycount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpecialBattleBuyCountEntryResponse::clear_maxbuycount() {
  maxbuycount_ = 0;
  clear_has_maxbuycount();
}
inline ::google::protobuf::int32 SpecialBattleBuyCountEntryResponse::maxbuycount() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleBuyCountEntryResponse.maxBuyCount)
  return maxbuycount_;
}
inline void SpecialBattleBuyCountEntryResponse::set_maxbuycount(::google::protobuf::int32 value) {
  set_has_maxbuycount();
  maxbuycount_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleBuyCountEntryResponse.maxBuyCount)
}

// optional int32 cost = 3;
inline bool SpecialBattleBuyCountEntryResponse::has_cost() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpecialBattleBuyCountEntryResponse::set_has_cost() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpecialBattleBuyCountEntryResponse::clear_has_cost() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpecialBattleBuyCountEntryResponse::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
inline ::google::protobuf::int32 SpecialBattleBuyCountEntryResponse::cost() const {
  // @@protoc_insertion_point(field_get:main.SpecialBattleBuyCountEntryResponse.cost)
  return cost_;
}
inline void SpecialBattleBuyCountEntryResponse::set_cost(::google::protobuf::int32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:main.SpecialBattleBuyCountEntryResponse.cost)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SpecialBattleModule_2eproto__INCLUDED
