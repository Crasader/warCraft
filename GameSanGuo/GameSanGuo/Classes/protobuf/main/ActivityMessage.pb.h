// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityMessage.proto

#ifndef PROTOBUF_ActivityMessage_2eproto__INCLUDED
#define PROTOBUF_ActivityMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace main {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ActivityMessage_2eproto();
void protobuf_AssignDesc_ActivityMessage_2eproto();
void protobuf_ShutdownFile_ActivityMessage_2eproto();

class ContentProto;
class StyleInfoProto;
class ActivityMessageInfosResponse;
class ActivityMessageInfoProto;

// ===================================================================

class ContentProto : public ::google::protobuf::MessageLite {
 public:
  ContentProto();
  virtual ~ContentProto();

  ContentProto(const ContentProto& from);

  inline ContentProto& operator=(const ContentProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ContentProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ContentProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ContentProto* other);

  // implements Message ----------------------------------------------

  ContentProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ContentProto& from);
  void MergeFrom(const ContentProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content = 1;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 1;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional string Style = 2;
  inline bool has_style() const;
  inline void clear_style();
  static const int kStyleFieldNumber = 2;
  inline const ::std::string& style() const;
  inline void set_style(const ::std::string& value);
  inline void set_style(const char* value);
  inline void set_style(const char* value, size_t size);
  inline ::std::string* mutable_style();
  inline ::std::string* release_style();
  inline void set_allocated_style(::std::string* style);

  // @@protoc_insertion_point(class_scope:main.ContentProto)
 private:
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_style();
  inline void clear_has_style();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* content_;
  ::std::string* style_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ActivityMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ActivityMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_ActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static ContentProto* default_instance_;
};
// -------------------------------------------------------------------

class StyleInfoProto : public ::google::protobuf::MessageLite {
 public:
  StyleInfoProto();
  virtual ~StyleInfoProto();

  StyleInfoProto(const StyleInfoProto& from);

  inline StyleInfoProto& operator=(const StyleInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const StyleInfoProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const StyleInfoProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(StyleInfoProto* other);

  // implements Message ----------------------------------------------

  StyleInfoProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const StyleInfoProto& from);
  void MergeFrom(const StyleInfoProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string styleKsy = 1;
  inline bool has_styleksy() const;
  inline void clear_styleksy();
  static const int kStyleKsyFieldNumber = 1;
  inline const ::std::string& styleksy() const;
  inline void set_styleksy(const ::std::string& value);
  inline void set_styleksy(const char* value);
  inline void set_styleksy(const char* value, size_t size);
  inline ::std::string* mutable_styleksy();
  inline ::std::string* release_styleksy();
  inline void set_allocated_styleksy(::std::string* styleksy);

  // optional string styleValue = 2;
  inline bool has_stylevalue() const;
  inline void clear_stylevalue();
  static const int kStyleValueFieldNumber = 2;
  inline const ::std::string& stylevalue() const;
  inline void set_stylevalue(const ::std::string& value);
  inline void set_stylevalue(const char* value);
  inline void set_stylevalue(const char* value, size_t size);
  inline ::std::string* mutable_stylevalue();
  inline ::std::string* release_stylevalue();
  inline void set_allocated_stylevalue(::std::string* stylevalue);

  // @@protoc_insertion_point(class_scope:main.StyleInfoProto)
 private:
  inline void set_has_styleksy();
  inline void clear_has_styleksy();
  inline void set_has_stylevalue();
  inline void clear_has_stylevalue();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* styleksy_;
  ::std::string* stylevalue_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ActivityMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ActivityMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_ActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static StyleInfoProto* default_instance_;
};
// -------------------------------------------------------------------

class ActivityMessageInfosResponse : public ::google::protobuf::MessageLite {
 public:
  ActivityMessageInfosResponse();
  virtual ~ActivityMessageInfosResponse();

  ActivityMessageInfosResponse(const ActivityMessageInfosResponse& from);

  inline ActivityMessageInfosResponse& operator=(const ActivityMessageInfosResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ActivityMessageInfosResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ActivityMessageInfosResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ActivityMessageInfosResponse* other);

  // implements Message ----------------------------------------------

  ActivityMessageInfosResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ActivityMessageInfosResponse& from);
  void MergeFrom(const ActivityMessageInfosResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.ActivityMessageInfoProto activityMessageInfoList = 1;
  inline int activitymessageinfolist_size() const;
  inline void clear_activitymessageinfolist();
  static const int kActivityMessageInfoListFieldNumber = 1;
  inline const ::main::ActivityMessageInfoProto& activitymessageinfolist(int index) const;
  inline ::main::ActivityMessageInfoProto* mutable_activitymessageinfolist(int index);
  inline ::main::ActivityMessageInfoProto* add_activitymessageinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::main::ActivityMessageInfoProto >&
      activitymessageinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::ActivityMessageInfoProto >*
      mutable_activitymessageinfolist();

  // @@protoc_insertion_point(class_scope:main.ActivityMessageInfosResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::ActivityMessageInfoProto > activitymessageinfolist_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ActivityMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ActivityMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_ActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static ActivityMessageInfosResponse* default_instance_;
};
// -------------------------------------------------------------------

class ActivityMessageInfoProto : public ::google::protobuf::MessageLite {
 public:
  ActivityMessageInfoProto();
  virtual ~ActivityMessageInfoProto();

  ActivityMessageInfoProto(const ActivityMessageInfoProto& from);

  inline ActivityMessageInfoProto& operator=(const ActivityMessageInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ActivityMessageInfoProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ActivityMessageInfoProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ActivityMessageInfoProto* other);

  // implements Message ----------------------------------------------

  ActivityMessageInfoProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ActivityMessageInfoProto& from);
  void MergeFrom(const ActivityMessageInfoProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 1;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 1;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // repeated .main.StyleInfoProto styleInfoList = 2;
  inline int styleinfolist_size() const;
  inline void clear_styleinfolist();
  static const int kStyleInfoListFieldNumber = 2;
  inline const ::main::StyleInfoProto& styleinfolist(int index) const;
  inline ::main::StyleInfoProto* mutable_styleinfolist(int index);
  inline ::main::StyleInfoProto* add_styleinfolist();
  inline const ::google::protobuf::RepeatedPtrField< ::main::StyleInfoProto >&
      styleinfolist() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::StyleInfoProto >*
      mutable_styleinfolist();

  // repeated .main.ContentProto contentList = 3;
  inline int contentlist_size() const;
  inline void clear_contentlist();
  static const int kContentListFieldNumber = 3;
  inline const ::main::ContentProto& contentlist(int index) const;
  inline ::main::ContentProto* mutable_contentlist(int index);
  inline ::main::ContentProto* add_contentlist();
  inline const ::google::protobuf::RepeatedPtrField< ::main::ContentProto >&
      contentlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::ContentProto >*
      mutable_contentlist();

  // optional int32 typeStatus = 4;
  inline bool has_typestatus() const;
  inline void clear_typestatus();
  static const int kTypeStatusFieldNumber = 4;
  inline ::google::protobuf::int32 typestatus() const;
  inline void set_typestatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ActivityMessageInfoProto)
 private:
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_typestatus();
  inline void clear_has_typestatus();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* title_;
  ::google::protobuf::RepeatedPtrField< ::main::StyleInfoProto > styleinfolist_;
  ::google::protobuf::RepeatedPtrField< ::main::ContentProto > contentlist_;
  ::google::protobuf::int32 typestatus_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_ActivityMessage_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_ActivityMessage_2eproto();
  #endif
  friend void protobuf_AssignDesc_ActivityMessage_2eproto();
  friend void protobuf_ShutdownFile_ActivityMessage_2eproto();

  void InitAsDefaultInstance();
  static ActivityMessageInfoProto* default_instance_;
};
// ===================================================================


// ===================================================================

// ContentProto

// optional string content = 1;
inline bool ContentProto::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContentProto::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContentProto::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContentProto::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& ContentProto::content() const {
  // @@protoc_insertion_point(field_get:main.ContentProto.content)
  return *content_;
}
inline void ContentProto::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:main.ContentProto.content)
}
inline void ContentProto::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.ContentProto.content)
}
inline void ContentProto::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.ContentProto.content)
}
inline ::std::string* ContentProto::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.ContentProto.content)
  return content_;
}
inline ::std::string* ContentProto::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ContentProto::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.ContentProto.content)
}

// optional string Style = 2;
inline bool ContentProto::has_style() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContentProto::set_has_style() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContentProto::clear_has_style() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContentProto::clear_style() {
  if (style_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    style_->clear();
  }
  clear_has_style();
}
inline const ::std::string& ContentProto::style() const {
  // @@protoc_insertion_point(field_get:main.ContentProto.Style)
  return *style_;
}
inline void ContentProto::set_style(const ::std::string& value) {
  set_has_style();
  if (style_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    style_ = new ::std::string;
  }
  style_->assign(value);
  // @@protoc_insertion_point(field_set:main.ContentProto.Style)
}
inline void ContentProto::set_style(const char* value) {
  set_has_style();
  if (style_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    style_ = new ::std::string;
  }
  style_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.ContentProto.Style)
}
inline void ContentProto::set_style(const char* value, size_t size) {
  set_has_style();
  if (style_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    style_ = new ::std::string;
  }
  style_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.ContentProto.Style)
}
inline ::std::string* ContentProto::mutable_style() {
  set_has_style();
  if (style_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    style_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.ContentProto.Style)
  return style_;
}
inline ::std::string* ContentProto::release_style() {
  clear_has_style();
  if (style_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = style_;
    style_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ContentProto::set_allocated_style(::std::string* style) {
  if (style_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete style_;
  }
  if (style) {
    set_has_style();
    style_ = style;
  } else {
    clear_has_style();
    style_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.ContentProto.Style)
}

// -------------------------------------------------------------------

// StyleInfoProto

// optional string styleKsy = 1;
inline bool StyleInfoProto::has_styleksy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StyleInfoProto::set_has_styleksy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StyleInfoProto::clear_has_styleksy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StyleInfoProto::clear_styleksy() {
  if (styleksy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    styleksy_->clear();
  }
  clear_has_styleksy();
}
inline const ::std::string& StyleInfoProto::styleksy() const {
  // @@protoc_insertion_point(field_get:main.StyleInfoProto.styleKsy)
  return *styleksy_;
}
inline void StyleInfoProto::set_styleksy(const ::std::string& value) {
  set_has_styleksy();
  if (styleksy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    styleksy_ = new ::std::string;
  }
  styleksy_->assign(value);
  // @@protoc_insertion_point(field_set:main.StyleInfoProto.styleKsy)
}
inline void StyleInfoProto::set_styleksy(const char* value) {
  set_has_styleksy();
  if (styleksy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    styleksy_ = new ::std::string;
  }
  styleksy_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.StyleInfoProto.styleKsy)
}
inline void StyleInfoProto::set_styleksy(const char* value, size_t size) {
  set_has_styleksy();
  if (styleksy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    styleksy_ = new ::std::string;
  }
  styleksy_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.StyleInfoProto.styleKsy)
}
inline ::std::string* StyleInfoProto::mutable_styleksy() {
  set_has_styleksy();
  if (styleksy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    styleksy_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.StyleInfoProto.styleKsy)
  return styleksy_;
}
inline ::std::string* StyleInfoProto::release_styleksy() {
  clear_has_styleksy();
  if (styleksy_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = styleksy_;
    styleksy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StyleInfoProto::set_allocated_styleksy(::std::string* styleksy) {
  if (styleksy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete styleksy_;
  }
  if (styleksy) {
    set_has_styleksy();
    styleksy_ = styleksy;
  } else {
    clear_has_styleksy();
    styleksy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.StyleInfoProto.styleKsy)
}

// optional string styleValue = 2;
inline bool StyleInfoProto::has_stylevalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StyleInfoProto::set_has_stylevalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StyleInfoProto::clear_has_stylevalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StyleInfoProto::clear_stylevalue() {
  if (stylevalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stylevalue_->clear();
  }
  clear_has_stylevalue();
}
inline const ::std::string& StyleInfoProto::stylevalue() const {
  // @@protoc_insertion_point(field_get:main.StyleInfoProto.styleValue)
  return *stylevalue_;
}
inline void StyleInfoProto::set_stylevalue(const ::std::string& value) {
  set_has_stylevalue();
  if (stylevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stylevalue_ = new ::std::string;
  }
  stylevalue_->assign(value);
  // @@protoc_insertion_point(field_set:main.StyleInfoProto.styleValue)
}
inline void StyleInfoProto::set_stylevalue(const char* value) {
  set_has_stylevalue();
  if (stylevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stylevalue_ = new ::std::string;
  }
  stylevalue_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.StyleInfoProto.styleValue)
}
inline void StyleInfoProto::set_stylevalue(const char* value, size_t size) {
  set_has_stylevalue();
  if (stylevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stylevalue_ = new ::std::string;
  }
  stylevalue_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.StyleInfoProto.styleValue)
}
inline ::std::string* StyleInfoProto::mutable_stylevalue() {
  set_has_stylevalue();
  if (stylevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    stylevalue_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.StyleInfoProto.styleValue)
  return stylevalue_;
}
inline ::std::string* StyleInfoProto::release_stylevalue() {
  clear_has_stylevalue();
  if (stylevalue_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = stylevalue_;
    stylevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void StyleInfoProto::set_allocated_stylevalue(::std::string* stylevalue) {
  if (stylevalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stylevalue_;
  }
  if (stylevalue) {
    set_has_stylevalue();
    stylevalue_ = stylevalue;
  } else {
    clear_has_stylevalue();
    stylevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.StyleInfoProto.styleValue)
}

// -------------------------------------------------------------------

// ActivityMessageInfosResponse

// repeated .main.ActivityMessageInfoProto activityMessageInfoList = 1;
inline int ActivityMessageInfosResponse::activitymessageinfolist_size() const {
  return activitymessageinfolist_.size();
}
inline void ActivityMessageInfosResponse::clear_activitymessageinfolist() {
  activitymessageinfolist_.Clear();
}
inline const ::main::ActivityMessageInfoProto& ActivityMessageInfosResponse::activitymessageinfolist(int index) const {
  // @@protoc_insertion_point(field_get:main.ActivityMessageInfosResponse.activityMessageInfoList)
  return activitymessageinfolist_.Get(index);
}
inline ::main::ActivityMessageInfoProto* ActivityMessageInfosResponse::mutable_activitymessageinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:main.ActivityMessageInfosResponse.activityMessageInfoList)
  return activitymessageinfolist_.Mutable(index);
}
inline ::main::ActivityMessageInfoProto* ActivityMessageInfosResponse::add_activitymessageinfolist() {
  // @@protoc_insertion_point(field_add:main.ActivityMessageInfosResponse.activityMessageInfoList)
  return activitymessageinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::ActivityMessageInfoProto >&
ActivityMessageInfosResponse::activitymessageinfolist() const {
  // @@protoc_insertion_point(field_list:main.ActivityMessageInfosResponse.activityMessageInfoList)
  return activitymessageinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::ActivityMessageInfoProto >*
ActivityMessageInfosResponse::mutable_activitymessageinfolist() {
  // @@protoc_insertion_point(field_mutable_list:main.ActivityMessageInfosResponse.activityMessageInfoList)
  return &activitymessageinfolist_;
}

// -------------------------------------------------------------------

// ActivityMessageInfoProto

// optional string title = 1;
inline bool ActivityMessageInfoProto::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivityMessageInfoProto::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivityMessageInfoProto::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivityMessageInfoProto::clear_title() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& ActivityMessageInfoProto::title() const {
  // @@protoc_insertion_point(field_get:main.ActivityMessageInfoProto.title)
  return *title_;
}
inline void ActivityMessageInfoProto::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set:main.ActivityMessageInfoProto.title)
}
inline void ActivityMessageInfoProto::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.ActivityMessageInfoProto.title)
}
inline void ActivityMessageInfoProto::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.ActivityMessageInfoProto.title)
}
inline ::std::string* ActivityMessageInfoProto::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    title_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.ActivityMessageInfoProto.title)
  return title_;
}
inline ::std::string* ActivityMessageInfoProto::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActivityMessageInfoProto::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.ActivityMessageInfoProto.title)
}

// repeated .main.StyleInfoProto styleInfoList = 2;
inline int ActivityMessageInfoProto::styleinfolist_size() const {
  return styleinfolist_.size();
}
inline void ActivityMessageInfoProto::clear_styleinfolist() {
  styleinfolist_.Clear();
}
inline const ::main::StyleInfoProto& ActivityMessageInfoProto::styleinfolist(int index) const {
  // @@protoc_insertion_point(field_get:main.ActivityMessageInfoProto.styleInfoList)
  return styleinfolist_.Get(index);
}
inline ::main::StyleInfoProto* ActivityMessageInfoProto::mutable_styleinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:main.ActivityMessageInfoProto.styleInfoList)
  return styleinfolist_.Mutable(index);
}
inline ::main::StyleInfoProto* ActivityMessageInfoProto::add_styleinfolist() {
  // @@protoc_insertion_point(field_add:main.ActivityMessageInfoProto.styleInfoList)
  return styleinfolist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::StyleInfoProto >&
ActivityMessageInfoProto::styleinfolist() const {
  // @@protoc_insertion_point(field_list:main.ActivityMessageInfoProto.styleInfoList)
  return styleinfolist_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::StyleInfoProto >*
ActivityMessageInfoProto::mutable_styleinfolist() {
  // @@protoc_insertion_point(field_mutable_list:main.ActivityMessageInfoProto.styleInfoList)
  return &styleinfolist_;
}

// repeated .main.ContentProto contentList = 3;
inline int ActivityMessageInfoProto::contentlist_size() const {
  return contentlist_.size();
}
inline void ActivityMessageInfoProto::clear_contentlist() {
  contentlist_.Clear();
}
inline const ::main::ContentProto& ActivityMessageInfoProto::contentlist(int index) const {
  // @@protoc_insertion_point(field_get:main.ActivityMessageInfoProto.contentList)
  return contentlist_.Get(index);
}
inline ::main::ContentProto* ActivityMessageInfoProto::mutable_contentlist(int index) {
  // @@protoc_insertion_point(field_mutable:main.ActivityMessageInfoProto.contentList)
  return contentlist_.Mutable(index);
}
inline ::main::ContentProto* ActivityMessageInfoProto::add_contentlist() {
  // @@protoc_insertion_point(field_add:main.ActivityMessageInfoProto.contentList)
  return contentlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::ContentProto >&
ActivityMessageInfoProto::contentlist() const {
  // @@protoc_insertion_point(field_list:main.ActivityMessageInfoProto.contentList)
  return contentlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::ContentProto >*
ActivityMessageInfoProto::mutable_contentlist() {
  // @@protoc_insertion_point(field_mutable_list:main.ActivityMessageInfoProto.contentList)
  return &contentlist_;
}

// optional int32 typeStatus = 4;
inline bool ActivityMessageInfoProto::has_typestatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActivityMessageInfoProto::set_has_typestatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActivityMessageInfoProto::clear_has_typestatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActivityMessageInfoProto::clear_typestatus() {
  typestatus_ = 0;
  clear_has_typestatus();
}
inline ::google::protobuf::int32 ActivityMessageInfoProto::typestatus() const {
  // @@protoc_insertion_point(field_get:main.ActivityMessageInfoProto.typeStatus)
  return typestatus_;
}
inline void ActivityMessageInfoProto::set_typestatus(::google::protobuf::int32 value) {
  set_has_typestatus();
  typestatus_ = value;
  // @@protoc_insertion_point(field_set:main.ActivityMessageInfoProto.typeStatus)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ActivityMessage_2eproto__INCLUDED
