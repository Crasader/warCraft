// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ActivityMessage.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ActivityMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace main {

void protobuf_ShutdownFile_ActivityMessage_2eproto() {
  delete ContentProto::default_instance_;
  delete StyleInfoProto::default_instance_;
  delete ActivityMessageInfosResponse::default_instance_;
  delete ActivityMessageInfoProto::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_ActivityMessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_ActivityMessage_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ContentProto::default_instance_ = new ContentProto();
  StyleInfoProto::default_instance_ = new StyleInfoProto();
  ActivityMessageInfosResponse::default_instance_ = new ActivityMessageInfosResponse();
  ActivityMessageInfoProto::default_instance_ = new ActivityMessageInfoProto();
  ContentProto::default_instance_->InitAsDefaultInstance();
  StyleInfoProto::default_instance_->InitAsDefaultInstance();
  ActivityMessageInfosResponse::default_instance_->InitAsDefaultInstance();
  ActivityMessageInfoProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ActivityMessage_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_ActivityMessage_2eproto_once_);
void protobuf_AddDesc_ActivityMessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_ActivityMessage_2eproto_once_,
                 &protobuf_AddDesc_ActivityMessage_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ActivityMessage_2eproto {
  StaticDescriptorInitializer_ActivityMessage_2eproto() {
    protobuf_AddDesc_ActivityMessage_2eproto();
  }
} static_descriptor_initializer_ActivityMessage_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int ContentProto::kContentFieldNumber;
const int ContentProto::kStyleFieldNumber;
#endif  // !_MSC_VER

ContentProto::ContentProto()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.ContentProto)
}

void ContentProto::InitAsDefaultInstance() {
}

ContentProto::ContentProto(const ContentProto& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.ContentProto)
}

void ContentProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  style_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ContentProto::~ContentProto() {
  // @@protoc_insertion_point(destructor:main.ContentProto)
  SharedDtor();
}

void ContentProto::SharedDtor() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (style_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete style_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ContentProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ContentProto& ContentProto::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ActivityMessage_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ActivityMessage_2eproto();
#endif
  return *default_instance_;
}

ContentProto* ContentProto::default_instance_ = NULL;

ContentProto* ContentProto::New() const {
  return new ContentProto;
}

void ContentProto::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        content_->clear();
      }
    }
    if (has_style()) {
      if (style_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        style_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool ContentProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:main.ContentProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string content = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Style;
        break;
      }

      // optional string Style = 2;
      case 2: {
        if (tag == 18) {
         parse_Style:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_style()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.ContentProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.ContentProto)
  return false;
#undef DO_
}

void ContentProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.ContentProto)
  // optional string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  // optional string Style = 2;
  if (has_style()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->style(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:main.ContentProto)
}

int ContentProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string content = 1;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string Style = 2;
    if (has_style()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->style());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContentProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ContentProto*>(&from));
}

void ContentProto::MergeFrom(const ContentProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_style()) {
      set_style(from.style());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ContentProto::CopyFrom(const ContentProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContentProto::IsInitialized() const {

  return true;
}

void ContentProto::Swap(ContentProto* other) {
  if (other != this) {
    std::swap(content_, other->content_);
    std::swap(style_, other->style_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ContentProto::GetTypeName() const {
  return "main.ContentProto";
}


// ===================================================================

#ifndef _MSC_VER
const int StyleInfoProto::kStyleKsyFieldNumber;
const int StyleInfoProto::kStyleValueFieldNumber;
#endif  // !_MSC_VER

StyleInfoProto::StyleInfoProto()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.StyleInfoProto)
}

void StyleInfoProto::InitAsDefaultInstance() {
}

StyleInfoProto::StyleInfoProto(const StyleInfoProto& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.StyleInfoProto)
}

void StyleInfoProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  styleksy_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stylevalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StyleInfoProto::~StyleInfoProto() {
  // @@protoc_insertion_point(destructor:main.StyleInfoProto)
  SharedDtor();
}

void StyleInfoProto::SharedDtor() {
  if (styleksy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete styleksy_;
  }
  if (stylevalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete stylevalue_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void StyleInfoProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const StyleInfoProto& StyleInfoProto::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ActivityMessage_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ActivityMessage_2eproto();
#endif
  return *default_instance_;
}

StyleInfoProto* StyleInfoProto::default_instance_ = NULL;

StyleInfoProto* StyleInfoProto::New() const {
  return new StyleInfoProto;
}

void StyleInfoProto::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_styleksy()) {
      if (styleksy_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        styleksy_->clear();
      }
    }
    if (has_stylevalue()) {
      if (stylevalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        stylevalue_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool StyleInfoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:main.StyleInfoProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string styleKsy = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_styleksy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_styleValue;
        break;
      }

      // optional string styleValue = 2;
      case 2: {
        if (tag == 18) {
         parse_styleValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stylevalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.StyleInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.StyleInfoProto)
  return false;
#undef DO_
}

void StyleInfoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.StyleInfoProto)
  // optional string styleKsy = 1;
  if (has_styleksy()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->styleksy(), output);
  }

  // optional string styleValue = 2;
  if (has_stylevalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stylevalue(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:main.StyleInfoProto)
}

int StyleInfoProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string styleKsy = 1;
    if (has_styleksy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->styleksy());
    }

    // optional string styleValue = 2;
    if (has_stylevalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stylevalue());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StyleInfoProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const StyleInfoProto*>(&from));
}

void StyleInfoProto::MergeFrom(const StyleInfoProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_styleksy()) {
      set_styleksy(from.styleksy());
    }
    if (from.has_stylevalue()) {
      set_stylevalue(from.stylevalue());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void StyleInfoProto::CopyFrom(const StyleInfoProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StyleInfoProto::IsInitialized() const {

  return true;
}

void StyleInfoProto::Swap(StyleInfoProto* other) {
  if (other != this) {
    std::swap(styleksy_, other->styleksy_);
    std::swap(stylevalue_, other->stylevalue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string StyleInfoProto::GetTypeName() const {
  return "main.StyleInfoProto";
}


// ===================================================================

#ifndef _MSC_VER
const int ActivityMessageInfosResponse::kActivityMessageInfoListFieldNumber;
#endif  // !_MSC_VER

ActivityMessageInfosResponse::ActivityMessageInfosResponse()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.ActivityMessageInfosResponse)
}

void ActivityMessageInfosResponse::InitAsDefaultInstance() {
}

ActivityMessageInfosResponse::ActivityMessageInfosResponse(const ActivityMessageInfosResponse& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.ActivityMessageInfosResponse)
}

void ActivityMessageInfosResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActivityMessageInfosResponse::~ActivityMessageInfosResponse() {
  // @@protoc_insertion_point(destructor:main.ActivityMessageInfosResponse)
  SharedDtor();
}

void ActivityMessageInfosResponse::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ActivityMessageInfosResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ActivityMessageInfosResponse& ActivityMessageInfosResponse::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ActivityMessage_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ActivityMessage_2eproto();
#endif
  return *default_instance_;
}

ActivityMessageInfosResponse* ActivityMessageInfosResponse::default_instance_ = NULL;

ActivityMessageInfosResponse* ActivityMessageInfosResponse::New() const {
  return new ActivityMessageInfosResponse;
}

void ActivityMessageInfosResponse::Clear() {
  activitymessageinfolist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool ActivityMessageInfosResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:main.ActivityMessageInfosResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .main.ActivityMessageInfoProto activityMessageInfoList = 1;
      case 1: {
        if (tag == 10) {
         parse_activityMessageInfoList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_activitymessageinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_activityMessageInfoList;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.ActivityMessageInfosResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.ActivityMessageInfosResponse)
  return false;
#undef DO_
}

void ActivityMessageInfosResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.ActivityMessageInfosResponse)
  // repeated .main.ActivityMessageInfoProto activityMessageInfoList = 1;
  for (int i = 0; i < this->activitymessageinfolist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->activitymessageinfolist(i), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:main.ActivityMessageInfosResponse)
}

int ActivityMessageInfosResponse::ByteSize() const {
  int total_size = 0;

  // repeated .main.ActivityMessageInfoProto activityMessageInfoList = 1;
  total_size += 1 * this->activitymessageinfolist_size();
  for (int i = 0; i < this->activitymessageinfolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->activitymessageinfolist(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityMessageInfosResponse::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ActivityMessageInfosResponse*>(&from));
}

void ActivityMessageInfosResponse::MergeFrom(const ActivityMessageInfosResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  activitymessageinfolist_.MergeFrom(from.activitymessageinfolist_);
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ActivityMessageInfosResponse::CopyFrom(const ActivityMessageInfosResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityMessageInfosResponse::IsInitialized() const {

  return true;
}

void ActivityMessageInfosResponse::Swap(ActivityMessageInfosResponse* other) {
  if (other != this) {
    activitymessageinfolist_.Swap(&other->activitymessageinfolist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ActivityMessageInfosResponse::GetTypeName() const {
  return "main.ActivityMessageInfosResponse";
}


// ===================================================================

#ifndef _MSC_VER
const int ActivityMessageInfoProto::kTitleFieldNumber;
const int ActivityMessageInfoProto::kStyleInfoListFieldNumber;
const int ActivityMessageInfoProto::kContentListFieldNumber;
const int ActivityMessageInfoProto::kTypeStatusFieldNumber;
#endif  // !_MSC_VER

ActivityMessageInfoProto::ActivityMessageInfoProto()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.ActivityMessageInfoProto)
}

void ActivityMessageInfoProto::InitAsDefaultInstance() {
}

ActivityMessageInfoProto::ActivityMessageInfoProto(const ActivityMessageInfoProto& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.ActivityMessageInfoProto)
}

void ActivityMessageInfoProto::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  typestatus_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActivityMessageInfoProto::~ActivityMessageInfoProto() {
  // @@protoc_insertion_point(destructor:main.ActivityMessageInfoProto)
  SharedDtor();
}

void ActivityMessageInfoProto::SharedDtor() {
  if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete title_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ActivityMessageInfoProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ActivityMessageInfoProto& ActivityMessageInfoProto::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_ActivityMessage_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_ActivityMessage_2eproto();
#endif
  return *default_instance_;
}

ActivityMessageInfoProto* ActivityMessageInfoProto::default_instance_ = NULL;

ActivityMessageInfoProto* ActivityMessageInfoProto::New() const {
  return new ActivityMessageInfoProto;
}

void ActivityMessageInfoProto::Clear() {
  if (_has_bits_[0 / 32] & 9) {
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        title_->clear();
      }
    }
    typestatus_ = 0;
  }
  styleinfolist_.Clear();
  contentlist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool ActivityMessageInfoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:main.ActivityMessageInfoProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string title = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_styleInfoList;
        break;
      }

      // repeated .main.StyleInfoProto styleInfoList = 2;
      case 2: {
        if (tag == 18) {
         parse_styleInfoList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_styleinfolist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_styleInfoList;
        if (input->ExpectTag(26)) goto parse_contentList;
        break;
      }

      // repeated .main.ContentProto contentList = 3;
      case 3: {
        if (tag == 26) {
         parse_contentList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_contentlist()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_contentList;
        if (input->ExpectTag(32)) goto parse_typeStatus;
        break;
      }

      // optional int32 typeStatus = 4;
      case 4: {
        if (tag == 32) {
         parse_typeStatus:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &typestatus_)));
          set_has_typestatus();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.ActivityMessageInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.ActivityMessageInfoProto)
  return false;
#undef DO_
}

void ActivityMessageInfoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.ActivityMessageInfoProto)
  // optional string title = 1;
  if (has_title()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // repeated .main.StyleInfoProto styleInfoList = 2;
  for (int i = 0; i < this->styleinfolist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->styleinfolist(i), output);
  }

  // repeated .main.ContentProto contentList = 3;
  for (int i = 0; i < this->contentlist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      3, this->contentlist(i), output);
  }

  // optional int32 typeStatus = 4;
  if (has_typestatus()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->typestatus(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:main.ActivityMessageInfoProto)
}

int ActivityMessageInfoProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string title = 1;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional int32 typeStatus = 4;
    if (has_typestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->typestatus());
    }

  }
  // repeated .main.StyleInfoProto styleInfoList = 2;
  total_size += 1 * this->styleinfolist_size();
  for (int i = 0; i < this->styleinfolist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->styleinfolist(i));
  }

  // repeated .main.ContentProto contentList = 3;
  total_size += 1 * this->contentlist_size();
  for (int i = 0; i < this->contentlist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->contentlist(i));
  }

  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivityMessageInfoProto::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ActivityMessageInfoProto*>(&from));
}

void ActivityMessageInfoProto::MergeFrom(const ActivityMessageInfoProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  styleinfolist_.MergeFrom(from.styleinfolist_);
  contentlist_.MergeFrom(from.contentlist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_typestatus()) {
      set_typestatus(from.typestatus());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ActivityMessageInfoProto::CopyFrom(const ActivityMessageInfoProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivityMessageInfoProto::IsInitialized() const {

  return true;
}

void ActivityMessageInfoProto::Swap(ActivityMessageInfoProto* other) {
  if (other != this) {
    std::swap(title_, other->title_);
    styleinfolist_.Swap(&other->styleinfolist_);
    contentlist_.Swap(&other->contentlist_);
    std::swap(typestatus_, other->typestatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ActivityMessageInfoProto::GetTypeName() const {
  return "main.ActivityMessageInfoProto";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)
