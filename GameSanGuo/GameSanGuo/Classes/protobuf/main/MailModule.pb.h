// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MailModule.proto

#ifndef PROTOBUF_MailModule_2eproto__INCLUDED
#define PROTOBUF_MailModule_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include "ItemModule.pb.h"
// @@protoc_insertion_point(includes)

namespace main {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MailModule_2eproto();
void protobuf_AssignDesc_MailModule_2eproto();
void protobuf_ShutdownFile_MailModule_2eproto();

class SendMailRequest;
class SendMailResponse;
class DeleteMailRequest;
class DeleteMailResponse;
class ShowMailRequest;
class ShowMailResponse;
class ShowSystemMailRequest;
class ShowSystemMailResponse;
class ReceiveAttachmentRequest;
class ReceiveAttachmentResponse;
class DeleteSystemMailRequest;
class DeleteSystemMailResponse;
class MailProto;
class MailDetailsProto;
class SystemMailProto;
class AttachmentProto;
class UpdateRoleMailResponse;

// ===================================================================

class SendMailRequest : public ::google::protobuf::MessageLite {
 public:
  SendMailRequest();
  virtual ~SendMailRequest();

  SendMailRequest(const SendMailRequest& from);

  inline SendMailRequest& operator=(const SendMailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SendMailRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SendMailRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SendMailRequest* other);

  // implements Message ----------------------------------------------

  SendMailRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SendMailRequest& from);
  void MergeFrom(const SendMailRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 receiverId = 1;
  inline bool has_receiverid() const;
  inline void clear_receiverid();
  static const int kReceiverIdFieldNumber = 1;
  inline ::google::protobuf::int32 receiverid() const;
  inline void set_receiverid(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional string content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:main.SendMailRequest)
 private:
  inline void set_has_receiverid();
  inline void clear_has_receiverid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_content();
  inline void clear_has_content();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 receiverid_;
  ::google::protobuf::int32 type_;
  ::std::string* content_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static SendMailRequest* default_instance_;
};
// -------------------------------------------------------------------

class SendMailResponse : public ::google::protobuf::MessageLite {
 public:
  SendMailResponse();
  virtual ~SendMailResponse();

  SendMailResponse(const SendMailResponse& from);

  inline SendMailResponse& operator=(const SendMailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SendMailResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SendMailResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SendMailResponse* other);

  // implements Message ----------------------------------------------

  SendMailResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SendMailResponse& from);
  void MergeFrom(const SendMailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .main.MailProto mailProto = 1;
  inline bool has_mailproto() const;
  inline void clear_mailproto();
  static const int kMailProtoFieldNumber = 1;
  inline const ::main::MailProto& mailproto() const;
  inline ::main::MailProto* mutable_mailproto();
  inline ::main::MailProto* release_mailproto();
  inline void set_allocated_mailproto(::main::MailProto* mailproto);

  // @@protoc_insertion_point(class_scope:main.SendMailResponse)
 private:
  inline void set_has_mailproto();
  inline void clear_has_mailproto();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::MailProto* mailproto_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static SendMailResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteMailRequest : public ::google::protobuf::MessageLite {
 public:
  DeleteMailRequest();
  virtual ~DeleteMailRequest();

  DeleteMailRequest(const DeleteMailRequest& from);

  inline DeleteMailRequest& operator=(const DeleteMailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteMailRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteMailRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteMailRequest* other);

  // implements Message ----------------------------------------------

  DeleteMailRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteMailRequest& from);
  void MergeFrom(const DeleteMailRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.DeleteMailRequest)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mailid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static DeleteMailRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteMailResponse : public ::google::protobuf::MessageLite {
 public:
  DeleteMailResponse();
  virtual ~DeleteMailResponse();

  DeleteMailResponse(const DeleteMailResponse& from);

  inline DeleteMailResponse& operator=(const DeleteMailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteMailResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteMailResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteMailResponse* other);

  // implements Message ----------------------------------------------

  DeleteMailResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteMailResponse& from);
  void MergeFrom(const DeleteMailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.DeleteMailResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static DeleteMailResponse* default_instance_;
};
// -------------------------------------------------------------------

class ShowMailRequest : public ::google::protobuf::MessageLite {
 public:
  ShowMailRequest();
  virtual ~ShowMailRequest();

  ShowMailRequest(const ShowMailRequest& from);

  inline ShowMailRequest& operator=(const ShowMailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ShowMailRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ShowMailRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ShowMailRequest* other);

  // implements Message ----------------------------------------------

  ShowMailRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ShowMailRequest& from);
  void MergeFrom(const ShowMailRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ShowMailRequest)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mailid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static ShowMailRequest* default_instance_;
};
// -------------------------------------------------------------------

class ShowMailResponse : public ::google::protobuf::MessageLite {
 public:
  ShowMailResponse();
  virtual ~ShowMailResponse();

  ShowMailResponse(const ShowMailResponse& from);

  inline ShowMailResponse& operator=(const ShowMailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ShowMailResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ShowMailResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ShowMailResponse* other);

  // implements Message ----------------------------------------------

  ShowMailResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ShowMailResponse& from);
  void MergeFrom(const ShowMailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ShowMailResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static ShowMailResponse* default_instance_;
};
// -------------------------------------------------------------------

class ShowSystemMailRequest : public ::google::protobuf::MessageLite {
 public:
  ShowSystemMailRequest();
  virtual ~ShowSystemMailRequest();

  ShowSystemMailRequest(const ShowSystemMailRequest& from);

  inline ShowSystemMailRequest& operator=(const ShowSystemMailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ShowSystemMailRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ShowSystemMailRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ShowSystemMailRequest* other);

  // implements Message ----------------------------------------------

  ShowSystemMailRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ShowSystemMailRequest& from);
  void MergeFrom(const ShowSystemMailRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ShowSystemMailRequest)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mailid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static ShowSystemMailRequest* default_instance_;
};
// -------------------------------------------------------------------

class ShowSystemMailResponse : public ::google::protobuf::MessageLite {
 public:
  ShowSystemMailResponse();
  virtual ~ShowSystemMailResponse();

  ShowSystemMailResponse(const ShowSystemMailResponse& from);

  inline ShowSystemMailResponse& operator=(const ShowSystemMailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ShowSystemMailResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ShowSystemMailResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ShowSystemMailResponse* other);

  // implements Message ----------------------------------------------

  ShowSystemMailResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ShowSystemMailResponse& from);
  void MergeFrom(const ShowSystemMailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ShowSystemMailResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static ShowSystemMailResponse* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveAttachmentRequest : public ::google::protobuf::MessageLite {
 public:
  ReceiveAttachmentRequest();
  virtual ~ReceiveAttachmentRequest();

  ReceiveAttachmentRequest(const ReceiveAttachmentRequest& from);

  inline ReceiveAttachmentRequest& operator=(const ReceiveAttachmentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ReceiveAttachmentRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ReceiveAttachmentRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ReceiveAttachmentRequest* other);

  // implements Message ----------------------------------------------

  ReceiveAttachmentRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ReceiveAttachmentRequest& from);
  void MergeFrom(const ReceiveAttachmentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ReceiveAttachmentRequest)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mailid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static ReceiveAttachmentRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReceiveAttachmentResponse : public ::google::protobuf::MessageLite {
 public:
  ReceiveAttachmentResponse();
  virtual ~ReceiveAttachmentResponse();

  ReceiveAttachmentResponse(const ReceiveAttachmentResponse& from);

  inline ReceiveAttachmentResponse& operator=(const ReceiveAttachmentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ReceiveAttachmentResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const ReceiveAttachmentResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(ReceiveAttachmentResponse* other);

  // implements Message ----------------------------------------------

  ReceiveAttachmentResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const ReceiveAttachmentResponse& from);
  void MergeFrom(const ReceiveAttachmentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.ReceiveAttachmentResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static ReceiveAttachmentResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeleteSystemMailRequest : public ::google::protobuf::MessageLite {
 public:
  DeleteSystemMailRequest();
  virtual ~DeleteSystemMailRequest();

  DeleteSystemMailRequest(const DeleteSystemMailRequest& from);

  inline DeleteSystemMailRequest& operator=(const DeleteSystemMailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteSystemMailRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteSystemMailRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteSystemMailRequest* other);

  // implements Message ----------------------------------------------

  DeleteSystemMailRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteSystemMailRequest& from);
  void MergeFrom(const DeleteSystemMailRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.DeleteSystemMailRequest)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mailid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static DeleteSystemMailRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeleteSystemMailResponse : public ::google::protobuf::MessageLite {
 public:
  DeleteSystemMailResponse();
  virtual ~DeleteSystemMailResponse();

  DeleteSystemMailResponse(const DeleteSystemMailResponse& from);

  inline DeleteSystemMailResponse& operator=(const DeleteSystemMailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const DeleteSystemMailResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const DeleteSystemMailResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(DeleteSystemMailResponse* other);

  // implements Message ----------------------------------------------

  DeleteSystemMailResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const DeleteSystemMailResponse& from);
  void MergeFrom(const DeleteSystemMailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // repeated .main.AttachmentProto attachmentProto = 2;
  inline int attachmentproto_size() const;
  inline void clear_attachmentproto();
  static const int kAttachmentProtoFieldNumber = 2;
  inline const ::main::AttachmentProto& attachmentproto(int index) const;
  inline ::main::AttachmentProto* mutable_attachmentproto(int index);
  inline ::main::AttachmentProto* add_attachmentproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::AttachmentProto >&
      attachmentproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::AttachmentProto >*
      mutable_attachmentproto();

  // @@protoc_insertion_point(class_scope:main.DeleteSystemMailResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::AttachmentProto > attachmentproto_;
  ::google::protobuf::int32 state_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static DeleteSystemMailResponse* default_instance_;
};
// -------------------------------------------------------------------

class MailProto : public ::google::protobuf::MessageLite {
 public:
  MailProto();
  virtual ~MailProto();

  MailProto(const MailProto& from);

  inline MailProto& operator=(const MailProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const MailProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MailProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MailProto* other);

  // implements Message ----------------------------------------------

  MailProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MailProto& from);
  void MergeFrom(const MailProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ssid = 1;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 1;
  inline ::google::protobuf::int32 ssid() const;
  inline void set_ssid(::google::protobuf::int32 value);

  // optional int32 oneselfId = 2;
  inline bool has_oneselfid() const;
  inline void clear_oneselfid();
  static const int kOneselfIdFieldNumber = 2;
  inline ::google::protobuf::int32 oneselfid() const;
  inline void set_oneselfid(::google::protobuf::int32 value);

  // optional string oneselfNickname = 3;
  inline bool has_oneselfnickname() const;
  inline void clear_oneselfnickname();
  static const int kOneselfNicknameFieldNumber = 3;
  inline const ::std::string& oneselfnickname() const;
  inline void set_oneselfnickname(const ::std::string& value);
  inline void set_oneselfnickname(const char* value);
  inline void set_oneselfnickname(const char* value, size_t size);
  inline ::std::string* mutable_oneselfnickname();
  inline ::std::string* release_oneselfnickname();
  inline void set_allocated_oneselfnickname(::std::string* oneselfnickname);

  // optional int32 otherId = 4;
  inline bool has_otherid() const;
  inline void clear_otherid();
  static const int kOtherIdFieldNumber = 4;
  inline ::google::protobuf::int32 otherid() const;
  inline void set_otherid(::google::protobuf::int32 value);

  // optional string otherNickname = 5;
  inline bool has_othernickname() const;
  inline void clear_othernickname();
  static const int kOtherNicknameFieldNumber = 5;
  inline const ::std::string& othernickname() const;
  inline void set_othernickname(const ::std::string& value);
  inline void set_othernickname(const char* value);
  inline void set_othernickname(const char* value, size_t size);
  inline ::std::string* mutable_othernickname();
  inline ::std::string* release_othernickname();
  inline void set_allocated_othernickname(::std::string* othernickname);

  // optional int32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional bool isRead = 7;
  inline bool has_isread() const;
  inline void clear_isread();
  static const int kIsReadFieldNumber = 7;
  inline bool isread() const;
  inline void set_isread(bool value);

  // repeated .main.MailDetailsProto mailDetailsProto = 8;
  inline int maildetailsproto_size() const;
  inline void clear_maildetailsproto();
  static const int kMailDetailsProtoFieldNumber = 8;
  inline const ::main::MailDetailsProto& maildetailsproto(int index) const;
  inline ::main::MailDetailsProto* mutable_maildetailsproto(int index);
  inline ::main::MailDetailsProto* add_maildetailsproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::MailDetailsProto >&
      maildetailsproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::MailDetailsProto >*
      mutable_maildetailsproto();

  // optional int32 image = 9;
  inline bool has_image() const;
  inline void clear_image();
  static const int kImageFieldNumber = 9;
  inline ::google::protobuf::int32 image() const;
  inline void set_image(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.MailProto)
 private:
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_oneselfid();
  inline void clear_has_oneselfid();
  inline void set_has_oneselfnickname();
  inline void clear_has_oneselfnickname();
  inline void set_has_otherid();
  inline void clear_has_otherid();
  inline void set_has_othernickname();
  inline void clear_has_othernickname();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_isread();
  inline void clear_has_isread();
  inline void set_has_image();
  inline void clear_has_image();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ssid_;
  ::google::protobuf::int32 oneselfid_;
  ::std::string* oneselfnickname_;
  ::std::string* othernickname_;
  ::google::protobuf::int32 otherid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::RepeatedPtrField< ::main::MailDetailsProto > maildetailsproto_;
  bool isread_;
  ::google::protobuf::int32 image_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static MailProto* default_instance_;
};
// -------------------------------------------------------------------

class MailDetailsProto : public ::google::protobuf::MessageLite {
 public:
  MailDetailsProto();
  virtual ~MailDetailsProto();

  MailDetailsProto(const MailDetailsProto& from);

  inline MailDetailsProto& operator=(const MailDetailsProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const MailDetailsProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MailDetailsProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MailDetailsProto* other);

  // implements Message ----------------------------------------------

  MailDetailsProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MailDetailsProto& from);
  void MergeFrom(const MailDetailsProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 mailId = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIdFieldNumber = 1;
  inline ::google::protobuf::int32 mailid() const;
  inline void set_mailid(::google::protobuf::int32 value);

  // optional int32 receiverId = 2;
  inline bool has_receiverid() const;
  inline void clear_receiverid();
  static const int kReceiverIdFieldNumber = 2;
  inline ::google::protobuf::int32 receiverid() const;
  inline void set_receiverid(::google::protobuf::int32 value);

  // optional string receiverNickName = 3;
  inline bool has_receivernickname() const;
  inline void clear_receivernickname();
  static const int kReceiverNickNameFieldNumber = 3;
  inline const ::std::string& receivernickname() const;
  inline void set_receivernickname(const ::std::string& value);
  inline void set_receivernickname(const char* value);
  inline void set_receivernickname(const char* value, size_t size);
  inline ::std::string* mutable_receivernickname();
  inline ::std::string* release_receivernickname();
  inline void set_allocated_receivernickname(::std::string* receivernickname);

  // optional int32 senderId = 4;
  inline bool has_senderid() const;
  inline void clear_senderid();
  static const int kSenderIdFieldNumber = 4;
  inline ::google::protobuf::int32 senderid() const;
  inline void set_senderid(::google::protobuf::int32 value);

  // optional string senderNickName = 5;
  inline bool has_sendernickname() const;
  inline void clear_sendernickname();
  static const int kSenderNickNameFieldNumber = 5;
  inline const ::std::string& sendernickname() const;
  inline void set_sendernickname(const ::std::string& value);
  inline void set_sendernickname(const char* value);
  inline void set_sendernickname(const char* value, size_t size);
  inline ::std::string* mutable_sendernickname();
  inline ::std::string* release_sendernickname();
  inline void set_allocated_sendernickname(::std::string* sendernickname);

  // optional string content = 6;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 6;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional int64 sendDate = 7;
  inline bool has_senddate() const;
  inline void clear_senddate();
  static const int kSendDateFieldNumber = 7;
  inline ::google::protobuf::int64 senddate() const;
  inline void set_senddate(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:main.MailDetailsProto)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_receiverid();
  inline void clear_has_receiverid();
  inline void set_has_receivernickname();
  inline void clear_has_receivernickname();
  inline void set_has_senderid();
  inline void clear_has_senderid();
  inline void set_has_sendernickname();
  inline void clear_has_sendernickname();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_senddate();
  inline void clear_has_senddate();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 mailid_;
  ::google::protobuf::int32 receiverid_;
  ::std::string* receivernickname_;
  ::std::string* sendernickname_;
  ::std::string* content_;
  ::google::protobuf::int64 senddate_;
  ::google::protobuf::int32 senderid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static MailDetailsProto* default_instance_;
};
// -------------------------------------------------------------------

class SystemMailProto : public ::google::protobuf::MessageLite {
 public:
  SystemMailProto();
  virtual ~SystemMailProto();

  SystemMailProto(const SystemMailProto& from);

  inline SystemMailProto& operator=(const SystemMailProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const SystemMailProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const SystemMailProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(SystemMailProto* other);

  // implements Message ----------------------------------------------

  SystemMailProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const SystemMailProto& from);
  void MergeFrom(const SystemMailProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ssid = 1;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 1;
  inline ::google::protobuf::int32 ssid() const;
  inline void set_ssid(::google::protobuf::int32 value);

  // optional int32 roleId = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // optional string content = 3;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 3;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  inline void set_allocated_content(::std::string* content);

  // optional int32 isRead = 4;
  inline bool has_isread() const;
  inline void clear_isread();
  static const int kIsReadFieldNumber = 4;
  inline ::google::protobuf::int32 isread() const;
  inline void set_isread(::google::protobuf::int32 value);

  // optional int32 isReceive = 5;
  inline bool has_isreceive() const;
  inline void clear_isreceive();
  static const int kIsReceiveFieldNumber = 5;
  inline ::google::protobuf::int32 isreceive() const;
  inline void set_isreceive(::google::protobuf::int32 value);

  // optional int64 sendDate = 6;
  inline bool has_senddate() const;
  inline void clear_senddate();
  static const int kSendDateFieldNumber = 6;
  inline ::google::protobuf::int64 senddate() const;
  inline void set_senddate(::google::protobuf::int64 value);

  // repeated .main.AttachmentProto attachmentProto = 7;
  inline int attachmentproto_size() const;
  inline void clear_attachmentproto();
  static const int kAttachmentProtoFieldNumber = 7;
  inline const ::main::AttachmentProto& attachmentproto(int index) const;
  inline ::main::AttachmentProto* mutable_attachmentproto(int index);
  inline ::main::AttachmentProto* add_attachmentproto();
  inline const ::google::protobuf::RepeatedPtrField< ::main::AttachmentProto >&
      attachmentproto() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::AttachmentProto >*
      mutable_attachmentproto();

  // @@protoc_insertion_point(class_scope:main.SystemMailProto)
 private:
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_isread();
  inline void clear_has_isread();
  inline void set_has_isreceive();
  inline void clear_has_isreceive();
  inline void set_has_senddate();
  inline void clear_has_senddate();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ssid_;
  ::google::protobuf::int32 roleid_;
  ::std::string* content_;
  ::google::protobuf::int32 isread_;
  ::google::protobuf::int32 isreceive_;
  ::google::protobuf::int64 senddate_;
  ::google::protobuf::RepeatedPtrField< ::main::AttachmentProto > attachmentproto_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static SystemMailProto* default_instance_;
};
// -------------------------------------------------------------------

class AttachmentProto : public ::google::protobuf::MessageLite {
 public:
  AttachmentProto();
  virtual ~AttachmentProto();

  AttachmentProto(const AttachmentProto& from);

  inline AttachmentProto& operator=(const AttachmentProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const AttachmentProto& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const AttachmentProto* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(AttachmentProto* other);

  // implements Message ----------------------------------------------

  AttachmentProto* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const AttachmentProto& from);
  void MergeFrom(const AttachmentProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ssid = 1;
  inline bool has_ssid() const;
  inline void clear_ssid();
  static const int kSsidFieldNumber = 1;
  inline ::google::protobuf::int32 ssid() const;
  inline void set_ssid(::google::protobuf::int32 value);

  // optional int32 systemMailId = 2;
  inline bool has_systemmailid() const;
  inline void clear_systemmailid();
  static const int kSystemMailIdFieldNumber = 2;
  inline ::google::protobuf::int32 systemmailid() const;
  inline void set_systemmailid(::google::protobuf::int32 value);

  // optional int32 itemId = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional int32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional .main.OfficerCardItemProto officerCardItemProto = 7;
  inline bool has_officercarditemproto() const;
  inline void clear_officercarditemproto();
  static const int kOfficerCardItemProtoFieldNumber = 7;
  inline const ::main::OfficerCardItemProto& officercarditemproto() const;
  inline ::main::OfficerCardItemProto* mutable_officercarditemproto();
  inline ::main::OfficerCardItemProto* release_officercarditemproto();
  inline void set_allocated_officercarditemproto(::main::OfficerCardItemProto* officercarditemproto);

  // optional .main.EquipmentCardItemProto equipmentCardItemProto = 8;
  inline bool has_equipmentcarditemproto() const;
  inline void clear_equipmentcarditemproto();
  static const int kEquipmentCardItemProtoFieldNumber = 8;
  inline const ::main::EquipmentCardItemProto& equipmentcarditemproto() const;
  inline ::main::EquipmentCardItemProto* mutable_equipmentcarditemproto();
  inline ::main::EquipmentCardItemProto* release_equipmentcarditemproto();
  inline void set_allocated_equipmentcarditemproto(::main::EquipmentCardItemProto* equipmentcarditemproto);

  // optional .main.SoldierCardItemProto soldierCardItemProto = 9;
  inline bool has_soldiercarditemproto() const;
  inline void clear_soldiercarditemproto();
  static const int kSoldierCardItemProtoFieldNumber = 9;
  inline const ::main::SoldierCardItemProto& soldiercarditemproto() const;
  inline ::main::SoldierCardItemProto* mutable_soldiercarditemproto();
  inline ::main::SoldierCardItemProto* release_soldiercarditemproto();
  inline void set_allocated_soldiercarditemproto(::main::SoldierCardItemProto* soldiercarditemproto);

  // optional .main.PropsCardItemProto propsCardItemProto = 10;
  inline bool has_propscarditemproto() const;
  inline void clear_propscarditemproto();
  static const int kPropsCardItemProtoFieldNumber = 10;
  inline const ::main::PropsCardItemProto& propscarditemproto() const;
  inline ::main::PropsCardItemProto* mutable_propscarditemproto();
  inline ::main::PropsCardItemProto* release_propscarditemproto();
  inline void set_allocated_propscarditemproto(::main::PropsCardItemProto* propscarditemproto);

  // @@protoc_insertion_point(class_scope:main.AttachmentProto)
 private:
  inline void set_has_ssid();
  inline void clear_has_ssid();
  inline void set_has_systemmailid();
  inline void clear_has_systemmailid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_officercarditemproto();
  inline void clear_has_officercarditemproto();
  inline void set_has_equipmentcarditemproto();
  inline void clear_has_equipmentcarditemproto();
  inline void set_has_soldiercarditemproto();
  inline void clear_has_soldiercarditemproto();
  inline void set_has_propscarditemproto();
  inline void clear_has_propscarditemproto();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ssid_;
  ::google::protobuf::int32 systemmailid_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 type_;
  ::main::OfficerCardItemProto* officercarditemproto_;
  ::main::EquipmentCardItemProto* equipmentcarditemproto_;
  ::main::SoldierCardItemProto* soldiercarditemproto_;
  ::main::PropsCardItemProto* propscarditemproto_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static AttachmentProto* default_instance_;
};
// -------------------------------------------------------------------

class UpdateRoleMailResponse : public ::google::protobuf::MessageLite {
 public:
  UpdateRoleMailResponse();
  virtual ~UpdateRoleMailResponse();

  UpdateRoleMailResponse(const UpdateRoleMailResponse& from);

  inline UpdateRoleMailResponse& operator=(const UpdateRoleMailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const UpdateRoleMailResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const UpdateRoleMailResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(UpdateRoleMailResponse* other);

  // implements Message ----------------------------------------------

  UpdateRoleMailResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const UpdateRoleMailResponse& from);
  void MergeFrom(const UpdateRoleMailResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .main.MailProto mainMails = 1;
  inline bool has_mainmails() const;
  inline void clear_mainmails();
  static const int kMainMailsFieldNumber = 1;
  inline const ::main::MailProto& mainmails() const;
  inline ::main::MailProto* mutable_mainmails();
  inline ::main::MailProto* release_mainmails();
  inline void set_allocated_mainmails(::main::MailProto* mainmails);

  // optional .main.SystemMailProto systemMails = 2;
  inline bool has_systemmails() const;
  inline void clear_systemmails();
  static const int kSystemMailsFieldNumber = 2;
  inline const ::main::SystemMailProto& systemmails() const;
  inline ::main::SystemMailProto* mutable_systemmails();
  inline ::main::SystemMailProto* release_systemmails();
  inline void set_allocated_systemmails(::main::SystemMailProto* systemmails);

  // optional .main.MailProto gmMails = 3;
  inline bool has_gmmails() const;
  inline void clear_gmmails();
  static const int kGmMailsFieldNumber = 3;
  inline const ::main::MailProto& gmmails() const;
  inline ::main::MailProto* mutable_gmmails();
  inline ::main::MailProto* release_gmmails();
  inline void set_allocated_gmmails(::main::MailProto* gmmails);

  // @@protoc_insertion_point(class_scope:main.UpdateRoleMailResponse)
 private:
  inline void set_has_mainmails();
  inline void clear_has_mainmails();
  inline void set_has_systemmails();
  inline void clear_has_systemmails();
  inline void set_has_gmmails();
  inline void clear_has_gmmails();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::main::MailProto* mainmails_;
  ::main::SystemMailProto* systemmails_;
  ::main::MailProto* gmmails_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MailModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MailModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MailModule_2eproto();
  friend void protobuf_ShutdownFile_MailModule_2eproto();

  void InitAsDefaultInstance();
  static UpdateRoleMailResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// SendMailRequest

// optional int32 receiverId = 1;
inline bool SendMailRequest::has_receiverid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMailRequest::set_has_receiverid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMailRequest::clear_has_receiverid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMailRequest::clear_receiverid() {
  receiverid_ = 0;
  clear_has_receiverid();
}
inline ::google::protobuf::int32 SendMailRequest::receiverid() const {
  // @@protoc_insertion_point(field_get:main.SendMailRequest.receiverId)
  return receiverid_;
}
inline void SendMailRequest::set_receiverid(::google::protobuf::int32 value) {
  set_has_receiverid();
  receiverid_ = value;
  // @@protoc_insertion_point(field_set:main.SendMailRequest.receiverId)
}

// optional int32 type = 2;
inline bool SendMailRequest::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendMailRequest::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendMailRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendMailRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SendMailRequest::type() const {
  // @@protoc_insertion_point(field_get:main.SendMailRequest.type)
  return type_;
}
inline void SendMailRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:main.SendMailRequest.type)
}

// optional string content = 3;
inline bool SendMailRequest::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendMailRequest::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendMailRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendMailRequest::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& SendMailRequest::content() const {
  // @@protoc_insertion_point(field_get:main.SendMailRequest.content)
  return *content_;
}
inline void SendMailRequest::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:main.SendMailRequest.content)
}
inline void SendMailRequest::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SendMailRequest.content)
}
inline void SendMailRequest::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SendMailRequest.content)
}
inline ::std::string* SendMailRequest::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SendMailRequest.content)
  return content_;
}
inline ::std::string* SendMailRequest::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SendMailRequest::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SendMailRequest.content)
}

// -------------------------------------------------------------------

// SendMailResponse

// optional .main.MailProto mailProto = 1;
inline bool SendMailResponse::has_mailproto() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMailResponse::set_has_mailproto() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMailResponse::clear_has_mailproto() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMailResponse::clear_mailproto() {
  if (mailproto_ != NULL) mailproto_->::main::MailProto::Clear();
  clear_has_mailproto();
}
inline const ::main::MailProto& SendMailResponse::mailproto() const {
  // @@protoc_insertion_point(field_get:main.SendMailResponse.mailProto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return mailproto_ != NULL ? *mailproto_ : *default_instance().mailproto_;
#else
  return mailproto_ != NULL ? *mailproto_ : *default_instance_->mailproto_;
#endif
}
inline ::main::MailProto* SendMailResponse::mutable_mailproto() {
  set_has_mailproto();
  if (mailproto_ == NULL) mailproto_ = new ::main::MailProto;
  // @@protoc_insertion_point(field_mutable:main.SendMailResponse.mailProto)
  return mailproto_;
}
inline ::main::MailProto* SendMailResponse::release_mailproto() {
  clear_has_mailproto();
  ::main::MailProto* temp = mailproto_;
  mailproto_ = NULL;
  return temp;
}
inline void SendMailResponse::set_allocated_mailproto(::main::MailProto* mailproto) {
  delete mailproto_;
  mailproto_ = mailproto;
  if (mailproto) {
    set_has_mailproto();
  } else {
    clear_has_mailproto();
  }
  // @@protoc_insertion_point(field_set_allocated:main.SendMailResponse.mailProto)
}

// -------------------------------------------------------------------

// DeleteMailRequest

// optional int32 mailId = 1;
inline bool DeleteMailRequest::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteMailRequest::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteMailRequest::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteMailRequest::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 DeleteMailRequest::mailid() const {
  // @@protoc_insertion_point(field_get:main.DeleteMailRequest.mailId)
  return mailid_;
}
inline void DeleteMailRequest::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:main.DeleteMailRequest.mailId)
}

// -------------------------------------------------------------------

// DeleteMailResponse

// optional int32 state = 1;
inline bool DeleteMailResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteMailResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteMailResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteMailResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DeleteMailResponse::state() const {
  // @@protoc_insertion_point(field_get:main.DeleteMailResponse.state)
  return state_;
}
inline void DeleteMailResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.DeleteMailResponse.state)
}

// -------------------------------------------------------------------

// ShowMailRequest

// optional int32 mailId = 1;
inline bool ShowMailRequest::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowMailRequest::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowMailRequest::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowMailRequest::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 ShowMailRequest::mailid() const {
  // @@protoc_insertion_point(field_get:main.ShowMailRequest.mailId)
  return mailid_;
}
inline void ShowMailRequest::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:main.ShowMailRequest.mailId)
}

// -------------------------------------------------------------------

// ShowMailResponse

// optional int32 state = 1;
inline bool ShowMailResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowMailResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowMailResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowMailResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ShowMailResponse::state() const {
  // @@protoc_insertion_point(field_get:main.ShowMailResponse.state)
  return state_;
}
inline void ShowMailResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.ShowMailResponse.state)
}

// -------------------------------------------------------------------

// ShowSystemMailRequest

// optional int32 mailId = 1;
inline bool ShowSystemMailRequest::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowSystemMailRequest::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowSystemMailRequest::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowSystemMailRequest::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 ShowSystemMailRequest::mailid() const {
  // @@protoc_insertion_point(field_get:main.ShowSystemMailRequest.mailId)
  return mailid_;
}
inline void ShowSystemMailRequest::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:main.ShowSystemMailRequest.mailId)
}

// -------------------------------------------------------------------

// ShowSystemMailResponse

// optional int32 state = 1;
inline bool ShowSystemMailResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShowSystemMailResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShowSystemMailResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShowSystemMailResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ShowSystemMailResponse::state() const {
  // @@protoc_insertion_point(field_get:main.ShowSystemMailResponse.state)
  return state_;
}
inline void ShowSystemMailResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.ShowSystemMailResponse.state)
}

// -------------------------------------------------------------------

// ReceiveAttachmentRequest

// optional int32 mailId = 1;
inline bool ReceiveAttachmentRequest::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveAttachmentRequest::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveAttachmentRequest::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveAttachmentRequest::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 ReceiveAttachmentRequest::mailid() const {
  // @@protoc_insertion_point(field_get:main.ReceiveAttachmentRequest.mailId)
  return mailid_;
}
inline void ReceiveAttachmentRequest::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:main.ReceiveAttachmentRequest.mailId)
}

// -------------------------------------------------------------------

// ReceiveAttachmentResponse

// optional int32 state = 1;
inline bool ReceiveAttachmentResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReceiveAttachmentResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReceiveAttachmentResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReceiveAttachmentResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 ReceiveAttachmentResponse::state() const {
  // @@protoc_insertion_point(field_get:main.ReceiveAttachmentResponse.state)
  return state_;
}
inline void ReceiveAttachmentResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.ReceiveAttachmentResponse.state)
}

// -------------------------------------------------------------------

// DeleteSystemMailRequest

// optional int32 mailId = 1;
inline bool DeleteSystemMailRequest::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteSystemMailRequest::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteSystemMailRequest::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteSystemMailRequest::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 DeleteSystemMailRequest::mailid() const {
  // @@protoc_insertion_point(field_get:main.DeleteSystemMailRequest.mailId)
  return mailid_;
}
inline void DeleteSystemMailRequest::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:main.DeleteSystemMailRequest.mailId)
}

// -------------------------------------------------------------------

// DeleteSystemMailResponse

// optional int32 state = 1;
inline bool DeleteSystemMailResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeleteSystemMailResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeleteSystemMailResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeleteSystemMailResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 DeleteSystemMailResponse::state() const {
  // @@protoc_insertion_point(field_get:main.DeleteSystemMailResponse.state)
  return state_;
}
inline void DeleteSystemMailResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.DeleteSystemMailResponse.state)
}

// repeated .main.AttachmentProto attachmentProto = 2;
inline int DeleteSystemMailResponse::attachmentproto_size() const {
  return attachmentproto_.size();
}
inline void DeleteSystemMailResponse::clear_attachmentproto() {
  attachmentproto_.Clear();
}
inline const ::main::AttachmentProto& DeleteSystemMailResponse::attachmentproto(int index) const {
  // @@protoc_insertion_point(field_get:main.DeleteSystemMailResponse.attachmentProto)
  return attachmentproto_.Get(index);
}
inline ::main::AttachmentProto* DeleteSystemMailResponse::mutable_attachmentproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.DeleteSystemMailResponse.attachmentProto)
  return attachmentproto_.Mutable(index);
}
inline ::main::AttachmentProto* DeleteSystemMailResponse::add_attachmentproto() {
  // @@protoc_insertion_point(field_add:main.DeleteSystemMailResponse.attachmentProto)
  return attachmentproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::AttachmentProto >&
DeleteSystemMailResponse::attachmentproto() const {
  // @@protoc_insertion_point(field_list:main.DeleteSystemMailResponse.attachmentProto)
  return attachmentproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::AttachmentProto >*
DeleteSystemMailResponse::mutable_attachmentproto() {
  // @@protoc_insertion_point(field_mutable_list:main.DeleteSystemMailResponse.attachmentProto)
  return &attachmentproto_;
}

// -------------------------------------------------------------------

// MailProto

// optional int32 ssid = 1;
inline bool MailProto::has_ssid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailProto::set_has_ssid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailProto::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailProto::clear_ssid() {
  ssid_ = 0;
  clear_has_ssid();
}
inline ::google::protobuf::int32 MailProto::ssid() const {
  // @@protoc_insertion_point(field_get:main.MailProto.ssid)
  return ssid_;
}
inline void MailProto::set_ssid(::google::protobuf::int32 value) {
  set_has_ssid();
  ssid_ = value;
  // @@protoc_insertion_point(field_set:main.MailProto.ssid)
}

// optional int32 oneselfId = 2;
inline bool MailProto::has_oneselfid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailProto::set_has_oneselfid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailProto::clear_has_oneselfid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailProto::clear_oneselfid() {
  oneselfid_ = 0;
  clear_has_oneselfid();
}
inline ::google::protobuf::int32 MailProto::oneselfid() const {
  // @@protoc_insertion_point(field_get:main.MailProto.oneselfId)
  return oneselfid_;
}
inline void MailProto::set_oneselfid(::google::protobuf::int32 value) {
  set_has_oneselfid();
  oneselfid_ = value;
  // @@protoc_insertion_point(field_set:main.MailProto.oneselfId)
}

// optional string oneselfNickname = 3;
inline bool MailProto::has_oneselfnickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailProto::set_has_oneselfnickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailProto::clear_has_oneselfnickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailProto::clear_oneselfnickname() {
  if (oneselfnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oneselfnickname_->clear();
  }
  clear_has_oneselfnickname();
}
inline const ::std::string& MailProto::oneselfnickname() const {
  // @@protoc_insertion_point(field_get:main.MailProto.oneselfNickname)
  return *oneselfnickname_;
}
inline void MailProto::set_oneselfnickname(const ::std::string& value) {
  set_has_oneselfnickname();
  if (oneselfnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oneselfnickname_ = new ::std::string;
  }
  oneselfnickname_->assign(value);
  // @@protoc_insertion_point(field_set:main.MailProto.oneselfNickname)
}
inline void MailProto::set_oneselfnickname(const char* value) {
  set_has_oneselfnickname();
  if (oneselfnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oneselfnickname_ = new ::std::string;
  }
  oneselfnickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.MailProto.oneselfNickname)
}
inline void MailProto::set_oneselfnickname(const char* value, size_t size) {
  set_has_oneselfnickname();
  if (oneselfnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oneselfnickname_ = new ::std::string;
  }
  oneselfnickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.MailProto.oneselfNickname)
}
inline ::std::string* MailProto::mutable_oneselfnickname() {
  set_has_oneselfnickname();
  if (oneselfnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    oneselfnickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.MailProto.oneselfNickname)
  return oneselfnickname_;
}
inline ::std::string* MailProto::release_oneselfnickname() {
  clear_has_oneselfnickname();
  if (oneselfnickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = oneselfnickname_;
    oneselfnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailProto::set_allocated_oneselfnickname(::std::string* oneselfnickname) {
  if (oneselfnickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete oneselfnickname_;
  }
  if (oneselfnickname) {
    set_has_oneselfnickname();
    oneselfnickname_ = oneselfnickname;
  } else {
    clear_has_oneselfnickname();
    oneselfnickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.MailProto.oneselfNickname)
}

// optional int32 otherId = 4;
inline bool MailProto::has_otherid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailProto::set_has_otherid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailProto::clear_has_otherid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailProto::clear_otherid() {
  otherid_ = 0;
  clear_has_otherid();
}
inline ::google::protobuf::int32 MailProto::otherid() const {
  // @@protoc_insertion_point(field_get:main.MailProto.otherId)
  return otherid_;
}
inline void MailProto::set_otherid(::google::protobuf::int32 value) {
  set_has_otherid();
  otherid_ = value;
  // @@protoc_insertion_point(field_set:main.MailProto.otherId)
}

// optional string otherNickname = 5;
inline bool MailProto::has_othernickname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailProto::set_has_othernickname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailProto::clear_has_othernickname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailProto::clear_othernickname() {
  if (othernickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othernickname_->clear();
  }
  clear_has_othernickname();
}
inline const ::std::string& MailProto::othernickname() const {
  // @@protoc_insertion_point(field_get:main.MailProto.otherNickname)
  return *othernickname_;
}
inline void MailProto::set_othernickname(const ::std::string& value) {
  set_has_othernickname();
  if (othernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othernickname_ = new ::std::string;
  }
  othernickname_->assign(value);
  // @@protoc_insertion_point(field_set:main.MailProto.otherNickname)
}
inline void MailProto::set_othernickname(const char* value) {
  set_has_othernickname();
  if (othernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othernickname_ = new ::std::string;
  }
  othernickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.MailProto.otherNickname)
}
inline void MailProto::set_othernickname(const char* value, size_t size) {
  set_has_othernickname();
  if (othernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othernickname_ = new ::std::string;
  }
  othernickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.MailProto.otherNickname)
}
inline ::std::string* MailProto::mutable_othernickname() {
  set_has_othernickname();
  if (othernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    othernickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.MailProto.otherNickname)
  return othernickname_;
}
inline ::std::string* MailProto::release_othernickname() {
  clear_has_othernickname();
  if (othernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = othernickname_;
    othernickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailProto::set_allocated_othernickname(::std::string* othernickname) {
  if (othernickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete othernickname_;
  }
  if (othernickname) {
    set_has_othernickname();
    othernickname_ = othernickname;
  } else {
    clear_has_othernickname();
    othernickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.MailProto.otherNickname)
}

// optional int32 type = 6;
inline bool MailProto::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailProto::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailProto::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MailProto::type() const {
  // @@protoc_insertion_point(field_get:main.MailProto.type)
  return type_;
}
inline void MailProto::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:main.MailProto.type)
}

// optional bool isRead = 7;
inline bool MailProto::has_isread() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailProto::set_has_isread() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailProto::clear_has_isread() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailProto::clear_isread() {
  isread_ = false;
  clear_has_isread();
}
inline bool MailProto::isread() const {
  // @@protoc_insertion_point(field_get:main.MailProto.isRead)
  return isread_;
}
inline void MailProto::set_isread(bool value) {
  set_has_isread();
  isread_ = value;
  // @@protoc_insertion_point(field_set:main.MailProto.isRead)
}

// repeated .main.MailDetailsProto mailDetailsProto = 8;
inline int MailProto::maildetailsproto_size() const {
  return maildetailsproto_.size();
}
inline void MailProto::clear_maildetailsproto() {
  maildetailsproto_.Clear();
}
inline const ::main::MailDetailsProto& MailProto::maildetailsproto(int index) const {
  // @@protoc_insertion_point(field_get:main.MailProto.mailDetailsProto)
  return maildetailsproto_.Get(index);
}
inline ::main::MailDetailsProto* MailProto::mutable_maildetailsproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.MailProto.mailDetailsProto)
  return maildetailsproto_.Mutable(index);
}
inline ::main::MailDetailsProto* MailProto::add_maildetailsproto() {
  // @@protoc_insertion_point(field_add:main.MailProto.mailDetailsProto)
  return maildetailsproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::MailDetailsProto >&
MailProto::maildetailsproto() const {
  // @@protoc_insertion_point(field_list:main.MailProto.mailDetailsProto)
  return maildetailsproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::MailDetailsProto >*
MailProto::mutable_maildetailsproto() {
  // @@protoc_insertion_point(field_mutable_list:main.MailProto.mailDetailsProto)
  return &maildetailsproto_;
}

// optional int32 image = 9;
inline bool MailProto::has_image() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailProto::set_has_image() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailProto::clear_has_image() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailProto::clear_image() {
  image_ = 0;
  clear_has_image();
}
inline ::google::protobuf::int32 MailProto::image() const {
  // @@protoc_insertion_point(field_get:main.MailProto.image)
  return image_;
}
inline void MailProto::set_image(::google::protobuf::int32 value) {
  set_has_image();
  image_ = value;
  // @@protoc_insertion_point(field_set:main.MailProto.image)
}

// -------------------------------------------------------------------

// MailDetailsProto

// optional int32 mailId = 1;
inline bool MailDetailsProto::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailDetailsProto::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailDetailsProto::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailDetailsProto::clear_mailid() {
  mailid_ = 0;
  clear_has_mailid();
}
inline ::google::protobuf::int32 MailDetailsProto::mailid() const {
  // @@protoc_insertion_point(field_get:main.MailDetailsProto.mailId)
  return mailid_;
}
inline void MailDetailsProto::set_mailid(::google::protobuf::int32 value) {
  set_has_mailid();
  mailid_ = value;
  // @@protoc_insertion_point(field_set:main.MailDetailsProto.mailId)
}

// optional int32 receiverId = 2;
inline bool MailDetailsProto::has_receiverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailDetailsProto::set_has_receiverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailDetailsProto::clear_has_receiverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailDetailsProto::clear_receiverid() {
  receiverid_ = 0;
  clear_has_receiverid();
}
inline ::google::protobuf::int32 MailDetailsProto::receiverid() const {
  // @@protoc_insertion_point(field_get:main.MailDetailsProto.receiverId)
  return receiverid_;
}
inline void MailDetailsProto::set_receiverid(::google::protobuf::int32 value) {
  set_has_receiverid();
  receiverid_ = value;
  // @@protoc_insertion_point(field_set:main.MailDetailsProto.receiverId)
}

// optional string receiverNickName = 3;
inline bool MailDetailsProto::has_receivernickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailDetailsProto::set_has_receivernickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailDetailsProto::clear_has_receivernickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailDetailsProto::clear_receivernickname() {
  if (receivernickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receivernickname_->clear();
  }
  clear_has_receivernickname();
}
inline const ::std::string& MailDetailsProto::receivernickname() const {
  // @@protoc_insertion_point(field_get:main.MailDetailsProto.receiverNickName)
  return *receivernickname_;
}
inline void MailDetailsProto::set_receivernickname(const ::std::string& value) {
  set_has_receivernickname();
  if (receivernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receivernickname_ = new ::std::string;
  }
  receivernickname_->assign(value);
  // @@protoc_insertion_point(field_set:main.MailDetailsProto.receiverNickName)
}
inline void MailDetailsProto::set_receivernickname(const char* value) {
  set_has_receivernickname();
  if (receivernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receivernickname_ = new ::std::string;
  }
  receivernickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.MailDetailsProto.receiverNickName)
}
inline void MailDetailsProto::set_receivernickname(const char* value, size_t size) {
  set_has_receivernickname();
  if (receivernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receivernickname_ = new ::std::string;
  }
  receivernickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.MailDetailsProto.receiverNickName)
}
inline ::std::string* MailDetailsProto::mutable_receivernickname() {
  set_has_receivernickname();
  if (receivernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    receivernickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.MailDetailsProto.receiverNickName)
  return receivernickname_;
}
inline ::std::string* MailDetailsProto::release_receivernickname() {
  clear_has_receivernickname();
  if (receivernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = receivernickname_;
    receivernickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailDetailsProto::set_allocated_receivernickname(::std::string* receivernickname) {
  if (receivernickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete receivernickname_;
  }
  if (receivernickname) {
    set_has_receivernickname();
    receivernickname_ = receivernickname;
  } else {
    clear_has_receivernickname();
    receivernickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.MailDetailsProto.receiverNickName)
}

// optional int32 senderId = 4;
inline bool MailDetailsProto::has_senderid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailDetailsProto::set_has_senderid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailDetailsProto::clear_has_senderid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailDetailsProto::clear_senderid() {
  senderid_ = 0;
  clear_has_senderid();
}
inline ::google::protobuf::int32 MailDetailsProto::senderid() const {
  // @@protoc_insertion_point(field_get:main.MailDetailsProto.senderId)
  return senderid_;
}
inline void MailDetailsProto::set_senderid(::google::protobuf::int32 value) {
  set_has_senderid();
  senderid_ = value;
  // @@protoc_insertion_point(field_set:main.MailDetailsProto.senderId)
}

// optional string senderNickName = 5;
inline bool MailDetailsProto::has_sendernickname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailDetailsProto::set_has_sendernickname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailDetailsProto::clear_has_sendernickname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailDetailsProto::clear_sendernickname() {
  if (sendernickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendernickname_->clear();
  }
  clear_has_sendernickname();
}
inline const ::std::string& MailDetailsProto::sendernickname() const {
  // @@protoc_insertion_point(field_get:main.MailDetailsProto.senderNickName)
  return *sendernickname_;
}
inline void MailDetailsProto::set_sendernickname(const ::std::string& value) {
  set_has_sendernickname();
  if (sendernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendernickname_ = new ::std::string;
  }
  sendernickname_->assign(value);
  // @@protoc_insertion_point(field_set:main.MailDetailsProto.senderNickName)
}
inline void MailDetailsProto::set_sendernickname(const char* value) {
  set_has_sendernickname();
  if (sendernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendernickname_ = new ::std::string;
  }
  sendernickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.MailDetailsProto.senderNickName)
}
inline void MailDetailsProto::set_sendernickname(const char* value, size_t size) {
  set_has_sendernickname();
  if (sendernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendernickname_ = new ::std::string;
  }
  sendernickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.MailDetailsProto.senderNickName)
}
inline ::std::string* MailDetailsProto::mutable_sendernickname() {
  set_has_sendernickname();
  if (sendernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    sendernickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.MailDetailsProto.senderNickName)
  return sendernickname_;
}
inline ::std::string* MailDetailsProto::release_sendernickname() {
  clear_has_sendernickname();
  if (sendernickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = sendernickname_;
    sendernickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailDetailsProto::set_allocated_sendernickname(::std::string* sendernickname) {
  if (sendernickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sendernickname_;
  }
  if (sendernickname) {
    set_has_sendernickname();
    sendernickname_ = sendernickname;
  } else {
    clear_has_sendernickname();
    sendernickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.MailDetailsProto.senderNickName)
}

// optional string content = 6;
inline bool MailDetailsProto::has_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailDetailsProto::set_has_content() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailDetailsProto::clear_has_content() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailDetailsProto::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& MailDetailsProto::content() const {
  // @@protoc_insertion_point(field_get:main.MailDetailsProto.content)
  return *content_;
}
inline void MailDetailsProto::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:main.MailDetailsProto.content)
}
inline void MailDetailsProto::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.MailDetailsProto.content)
}
inline void MailDetailsProto::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.MailDetailsProto.content)
}
inline ::std::string* MailDetailsProto::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.MailDetailsProto.content)
  return content_;
}
inline ::std::string* MailDetailsProto::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MailDetailsProto::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.MailDetailsProto.content)
}

// optional int64 sendDate = 7;
inline bool MailDetailsProto::has_senddate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailDetailsProto::set_has_senddate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailDetailsProto::clear_has_senddate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailDetailsProto::clear_senddate() {
  senddate_ = GOOGLE_LONGLONG(0);
  clear_has_senddate();
}
inline ::google::protobuf::int64 MailDetailsProto::senddate() const {
  // @@protoc_insertion_point(field_get:main.MailDetailsProto.sendDate)
  return senddate_;
}
inline void MailDetailsProto::set_senddate(::google::protobuf::int64 value) {
  set_has_senddate();
  senddate_ = value;
  // @@protoc_insertion_point(field_set:main.MailDetailsProto.sendDate)
}

// -------------------------------------------------------------------

// SystemMailProto

// optional int32 ssid = 1;
inline bool SystemMailProto::has_ssid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SystemMailProto::set_has_ssid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SystemMailProto::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SystemMailProto::clear_ssid() {
  ssid_ = 0;
  clear_has_ssid();
}
inline ::google::protobuf::int32 SystemMailProto::ssid() const {
  // @@protoc_insertion_point(field_get:main.SystemMailProto.ssid)
  return ssid_;
}
inline void SystemMailProto::set_ssid(::google::protobuf::int32 value) {
  set_has_ssid();
  ssid_ = value;
  // @@protoc_insertion_point(field_set:main.SystemMailProto.ssid)
}

// optional int32 roleId = 2;
inline bool SystemMailProto::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SystemMailProto::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SystemMailProto::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SystemMailProto::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 SystemMailProto::roleid() const {
  // @@protoc_insertion_point(field_get:main.SystemMailProto.roleId)
  return roleid_;
}
inline void SystemMailProto::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:main.SystemMailProto.roleId)
}

// optional string content = 3;
inline bool SystemMailProto::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SystemMailProto::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SystemMailProto::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SystemMailProto::clear_content() {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_->clear();
  }
  clear_has_content();
}
inline const ::std::string& SystemMailProto::content() const {
  // @@protoc_insertion_point(field_get:main.SystemMailProto.content)
  return *content_;
}
inline void SystemMailProto::set_content(const ::std::string& value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set:main.SystemMailProto.content)
}
inline void SystemMailProto::set_content(const char* value) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(value);
  // @@protoc_insertion_point(field_set_char:main.SystemMailProto.content)
}
inline void SystemMailProto::set_content(const char* value, size_t size) {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  content_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:main.SystemMailProto.content)
}
inline ::std::string* SystemMailProto::mutable_content() {
  set_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    content_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:main.SystemMailProto.content)
  return content_;
}
inline ::std::string* SystemMailProto::release_content() {
  clear_has_content();
  if (content_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = content_;
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SystemMailProto::set_allocated_content(::std::string* content) {
  if (content_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete content_;
  }
  if (content) {
    set_has_content();
    content_ = content;
  } else {
    clear_has_content();
    content_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:main.SystemMailProto.content)
}

// optional int32 isRead = 4;
inline bool SystemMailProto::has_isread() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SystemMailProto::set_has_isread() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SystemMailProto::clear_has_isread() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SystemMailProto::clear_isread() {
  isread_ = 0;
  clear_has_isread();
}
inline ::google::protobuf::int32 SystemMailProto::isread() const {
  // @@protoc_insertion_point(field_get:main.SystemMailProto.isRead)
  return isread_;
}
inline void SystemMailProto::set_isread(::google::protobuf::int32 value) {
  set_has_isread();
  isread_ = value;
  // @@protoc_insertion_point(field_set:main.SystemMailProto.isRead)
}

// optional int32 isReceive = 5;
inline bool SystemMailProto::has_isreceive() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SystemMailProto::set_has_isreceive() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SystemMailProto::clear_has_isreceive() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SystemMailProto::clear_isreceive() {
  isreceive_ = 0;
  clear_has_isreceive();
}
inline ::google::protobuf::int32 SystemMailProto::isreceive() const {
  // @@protoc_insertion_point(field_get:main.SystemMailProto.isReceive)
  return isreceive_;
}
inline void SystemMailProto::set_isreceive(::google::protobuf::int32 value) {
  set_has_isreceive();
  isreceive_ = value;
  // @@protoc_insertion_point(field_set:main.SystemMailProto.isReceive)
}

// optional int64 sendDate = 6;
inline bool SystemMailProto::has_senddate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SystemMailProto::set_has_senddate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SystemMailProto::clear_has_senddate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SystemMailProto::clear_senddate() {
  senddate_ = GOOGLE_LONGLONG(0);
  clear_has_senddate();
}
inline ::google::protobuf::int64 SystemMailProto::senddate() const {
  // @@protoc_insertion_point(field_get:main.SystemMailProto.sendDate)
  return senddate_;
}
inline void SystemMailProto::set_senddate(::google::protobuf::int64 value) {
  set_has_senddate();
  senddate_ = value;
  // @@protoc_insertion_point(field_set:main.SystemMailProto.sendDate)
}

// repeated .main.AttachmentProto attachmentProto = 7;
inline int SystemMailProto::attachmentproto_size() const {
  return attachmentproto_.size();
}
inline void SystemMailProto::clear_attachmentproto() {
  attachmentproto_.Clear();
}
inline const ::main::AttachmentProto& SystemMailProto::attachmentproto(int index) const {
  // @@protoc_insertion_point(field_get:main.SystemMailProto.attachmentProto)
  return attachmentproto_.Get(index);
}
inline ::main::AttachmentProto* SystemMailProto::mutable_attachmentproto(int index) {
  // @@protoc_insertion_point(field_mutable:main.SystemMailProto.attachmentProto)
  return attachmentproto_.Mutable(index);
}
inline ::main::AttachmentProto* SystemMailProto::add_attachmentproto() {
  // @@protoc_insertion_point(field_add:main.SystemMailProto.attachmentProto)
  return attachmentproto_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::AttachmentProto >&
SystemMailProto::attachmentproto() const {
  // @@protoc_insertion_point(field_list:main.SystemMailProto.attachmentProto)
  return attachmentproto_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::AttachmentProto >*
SystemMailProto::mutable_attachmentproto() {
  // @@protoc_insertion_point(field_mutable_list:main.SystemMailProto.attachmentProto)
  return &attachmentproto_;
}

// -------------------------------------------------------------------

// AttachmentProto

// optional int32 ssid = 1;
inline bool AttachmentProto::has_ssid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttachmentProto::set_has_ssid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttachmentProto::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttachmentProto::clear_ssid() {
  ssid_ = 0;
  clear_has_ssid();
}
inline ::google::protobuf::int32 AttachmentProto::ssid() const {
  // @@protoc_insertion_point(field_get:main.AttachmentProto.ssid)
  return ssid_;
}
inline void AttachmentProto::set_ssid(::google::protobuf::int32 value) {
  set_has_ssid();
  ssid_ = value;
  // @@protoc_insertion_point(field_set:main.AttachmentProto.ssid)
}

// optional int32 systemMailId = 2;
inline bool AttachmentProto::has_systemmailid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttachmentProto::set_has_systemmailid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttachmentProto::clear_has_systemmailid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttachmentProto::clear_systemmailid() {
  systemmailid_ = 0;
  clear_has_systemmailid();
}
inline ::google::protobuf::int32 AttachmentProto::systemmailid() const {
  // @@protoc_insertion_point(field_get:main.AttachmentProto.systemMailId)
  return systemmailid_;
}
inline void AttachmentProto::set_systemmailid(::google::protobuf::int32 value) {
  set_has_systemmailid();
  systemmailid_ = value;
  // @@protoc_insertion_point(field_set:main.AttachmentProto.systemMailId)
}

// optional int32 itemId = 3;
inline bool AttachmentProto::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttachmentProto::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttachmentProto::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttachmentProto::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 AttachmentProto::itemid() const {
  // @@protoc_insertion_point(field_get:main.AttachmentProto.itemId)
  return itemid_;
}
inline void AttachmentProto::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:main.AttachmentProto.itemId)
}

// optional int32 count = 4;
inline bool AttachmentProto::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AttachmentProto::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AttachmentProto::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AttachmentProto::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 AttachmentProto::count() const {
  // @@protoc_insertion_point(field_get:main.AttachmentProto.count)
  return count_;
}
inline void AttachmentProto::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:main.AttachmentProto.count)
}

// optional int32 level = 5;
inline bool AttachmentProto::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AttachmentProto::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AttachmentProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AttachmentProto::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 AttachmentProto::level() const {
  // @@protoc_insertion_point(field_get:main.AttachmentProto.level)
  return level_;
}
inline void AttachmentProto::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:main.AttachmentProto.level)
}

// optional int32 type = 6;
inline bool AttachmentProto::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AttachmentProto::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AttachmentProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AttachmentProto::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AttachmentProto::type() const {
  // @@protoc_insertion_point(field_get:main.AttachmentProto.type)
  return type_;
}
inline void AttachmentProto::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:main.AttachmentProto.type)
}

// optional .main.OfficerCardItemProto officerCardItemProto = 7;
inline bool AttachmentProto::has_officercarditemproto() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AttachmentProto::set_has_officercarditemproto() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AttachmentProto::clear_has_officercarditemproto() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AttachmentProto::clear_officercarditemproto() {
  if (officercarditemproto_ != NULL) officercarditemproto_->::main::OfficerCardItemProto::Clear();
  clear_has_officercarditemproto();
}
inline const ::main::OfficerCardItemProto& AttachmentProto::officercarditemproto() const {
  // @@protoc_insertion_point(field_get:main.AttachmentProto.officerCardItemProto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return officercarditemproto_ != NULL ? *officercarditemproto_ : *default_instance().officercarditemproto_;
#else
  return officercarditemproto_ != NULL ? *officercarditemproto_ : *default_instance_->officercarditemproto_;
#endif
}
inline ::main::OfficerCardItemProto* AttachmentProto::mutable_officercarditemproto() {
  set_has_officercarditemproto();
  if (officercarditemproto_ == NULL) officercarditemproto_ = new ::main::OfficerCardItemProto;
  // @@protoc_insertion_point(field_mutable:main.AttachmentProto.officerCardItemProto)
  return officercarditemproto_;
}
inline ::main::OfficerCardItemProto* AttachmentProto::release_officercarditemproto() {
  clear_has_officercarditemproto();
  ::main::OfficerCardItemProto* temp = officercarditemproto_;
  officercarditemproto_ = NULL;
  return temp;
}
inline void AttachmentProto::set_allocated_officercarditemproto(::main::OfficerCardItemProto* officercarditemproto) {
  delete officercarditemproto_;
  officercarditemproto_ = officercarditemproto;
  if (officercarditemproto) {
    set_has_officercarditemproto();
  } else {
    clear_has_officercarditemproto();
  }
  // @@protoc_insertion_point(field_set_allocated:main.AttachmentProto.officerCardItemProto)
}

// optional .main.EquipmentCardItemProto equipmentCardItemProto = 8;
inline bool AttachmentProto::has_equipmentcarditemproto() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AttachmentProto::set_has_equipmentcarditemproto() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AttachmentProto::clear_has_equipmentcarditemproto() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AttachmentProto::clear_equipmentcarditemproto() {
  if (equipmentcarditemproto_ != NULL) equipmentcarditemproto_->::main::EquipmentCardItemProto::Clear();
  clear_has_equipmentcarditemproto();
}
inline const ::main::EquipmentCardItemProto& AttachmentProto::equipmentcarditemproto() const {
  // @@protoc_insertion_point(field_get:main.AttachmentProto.equipmentCardItemProto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return equipmentcarditemproto_ != NULL ? *equipmentcarditemproto_ : *default_instance().equipmentcarditemproto_;
#else
  return equipmentcarditemproto_ != NULL ? *equipmentcarditemproto_ : *default_instance_->equipmentcarditemproto_;
#endif
}
inline ::main::EquipmentCardItemProto* AttachmentProto::mutable_equipmentcarditemproto() {
  set_has_equipmentcarditemproto();
  if (equipmentcarditemproto_ == NULL) equipmentcarditemproto_ = new ::main::EquipmentCardItemProto;
  // @@protoc_insertion_point(field_mutable:main.AttachmentProto.equipmentCardItemProto)
  return equipmentcarditemproto_;
}
inline ::main::EquipmentCardItemProto* AttachmentProto::release_equipmentcarditemproto() {
  clear_has_equipmentcarditemproto();
  ::main::EquipmentCardItemProto* temp = equipmentcarditemproto_;
  equipmentcarditemproto_ = NULL;
  return temp;
}
inline void AttachmentProto::set_allocated_equipmentcarditemproto(::main::EquipmentCardItemProto* equipmentcarditemproto) {
  delete equipmentcarditemproto_;
  equipmentcarditemproto_ = equipmentcarditemproto;
  if (equipmentcarditemproto) {
    set_has_equipmentcarditemproto();
  } else {
    clear_has_equipmentcarditemproto();
  }
  // @@protoc_insertion_point(field_set_allocated:main.AttachmentProto.equipmentCardItemProto)
}

// optional .main.SoldierCardItemProto soldierCardItemProto = 9;
inline bool AttachmentProto::has_soldiercarditemproto() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AttachmentProto::set_has_soldiercarditemproto() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AttachmentProto::clear_has_soldiercarditemproto() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AttachmentProto::clear_soldiercarditemproto() {
  if (soldiercarditemproto_ != NULL) soldiercarditemproto_->::main::SoldierCardItemProto::Clear();
  clear_has_soldiercarditemproto();
}
inline const ::main::SoldierCardItemProto& AttachmentProto::soldiercarditemproto() const {
  // @@protoc_insertion_point(field_get:main.AttachmentProto.soldierCardItemProto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return soldiercarditemproto_ != NULL ? *soldiercarditemproto_ : *default_instance().soldiercarditemproto_;
#else
  return soldiercarditemproto_ != NULL ? *soldiercarditemproto_ : *default_instance_->soldiercarditemproto_;
#endif
}
inline ::main::SoldierCardItemProto* AttachmentProto::mutable_soldiercarditemproto() {
  set_has_soldiercarditemproto();
  if (soldiercarditemproto_ == NULL) soldiercarditemproto_ = new ::main::SoldierCardItemProto;
  // @@protoc_insertion_point(field_mutable:main.AttachmentProto.soldierCardItemProto)
  return soldiercarditemproto_;
}
inline ::main::SoldierCardItemProto* AttachmentProto::release_soldiercarditemproto() {
  clear_has_soldiercarditemproto();
  ::main::SoldierCardItemProto* temp = soldiercarditemproto_;
  soldiercarditemproto_ = NULL;
  return temp;
}
inline void AttachmentProto::set_allocated_soldiercarditemproto(::main::SoldierCardItemProto* soldiercarditemproto) {
  delete soldiercarditemproto_;
  soldiercarditemproto_ = soldiercarditemproto;
  if (soldiercarditemproto) {
    set_has_soldiercarditemproto();
  } else {
    clear_has_soldiercarditemproto();
  }
  // @@protoc_insertion_point(field_set_allocated:main.AttachmentProto.soldierCardItemProto)
}

// optional .main.PropsCardItemProto propsCardItemProto = 10;
inline bool AttachmentProto::has_propscarditemproto() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AttachmentProto::set_has_propscarditemproto() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AttachmentProto::clear_has_propscarditemproto() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AttachmentProto::clear_propscarditemproto() {
  if (propscarditemproto_ != NULL) propscarditemproto_->::main::PropsCardItemProto::Clear();
  clear_has_propscarditemproto();
}
inline const ::main::PropsCardItemProto& AttachmentProto::propscarditemproto() const {
  // @@protoc_insertion_point(field_get:main.AttachmentProto.propsCardItemProto)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return propscarditemproto_ != NULL ? *propscarditemproto_ : *default_instance().propscarditemproto_;
#else
  return propscarditemproto_ != NULL ? *propscarditemproto_ : *default_instance_->propscarditemproto_;
#endif
}
inline ::main::PropsCardItemProto* AttachmentProto::mutable_propscarditemproto() {
  set_has_propscarditemproto();
  if (propscarditemproto_ == NULL) propscarditemproto_ = new ::main::PropsCardItemProto;
  // @@protoc_insertion_point(field_mutable:main.AttachmentProto.propsCardItemProto)
  return propscarditemproto_;
}
inline ::main::PropsCardItemProto* AttachmentProto::release_propscarditemproto() {
  clear_has_propscarditemproto();
  ::main::PropsCardItemProto* temp = propscarditemproto_;
  propscarditemproto_ = NULL;
  return temp;
}
inline void AttachmentProto::set_allocated_propscarditemproto(::main::PropsCardItemProto* propscarditemproto) {
  delete propscarditemproto_;
  propscarditemproto_ = propscarditemproto;
  if (propscarditemproto) {
    set_has_propscarditemproto();
  } else {
    clear_has_propscarditemproto();
  }
  // @@protoc_insertion_point(field_set_allocated:main.AttachmentProto.propsCardItemProto)
}

// -------------------------------------------------------------------

// UpdateRoleMailResponse

// optional .main.MailProto mainMails = 1;
inline bool UpdateRoleMailResponse::has_mainmails() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateRoleMailResponse::set_has_mainmails() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateRoleMailResponse::clear_has_mainmails() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateRoleMailResponse::clear_mainmails() {
  if (mainmails_ != NULL) mainmails_->::main::MailProto::Clear();
  clear_has_mainmails();
}
inline const ::main::MailProto& UpdateRoleMailResponse::mainmails() const {
  // @@protoc_insertion_point(field_get:main.UpdateRoleMailResponse.mainMails)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return mainmails_ != NULL ? *mainmails_ : *default_instance().mainmails_;
#else
  return mainmails_ != NULL ? *mainmails_ : *default_instance_->mainmails_;
#endif
}
inline ::main::MailProto* UpdateRoleMailResponse::mutable_mainmails() {
  set_has_mainmails();
  if (mainmails_ == NULL) mainmails_ = new ::main::MailProto;
  // @@protoc_insertion_point(field_mutable:main.UpdateRoleMailResponse.mainMails)
  return mainmails_;
}
inline ::main::MailProto* UpdateRoleMailResponse::release_mainmails() {
  clear_has_mainmails();
  ::main::MailProto* temp = mainmails_;
  mainmails_ = NULL;
  return temp;
}
inline void UpdateRoleMailResponse::set_allocated_mainmails(::main::MailProto* mainmails) {
  delete mainmails_;
  mainmails_ = mainmails;
  if (mainmails) {
    set_has_mainmails();
  } else {
    clear_has_mainmails();
  }
  // @@protoc_insertion_point(field_set_allocated:main.UpdateRoleMailResponse.mainMails)
}

// optional .main.SystemMailProto systemMails = 2;
inline bool UpdateRoleMailResponse::has_systemmails() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateRoleMailResponse::set_has_systemmails() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateRoleMailResponse::clear_has_systemmails() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateRoleMailResponse::clear_systemmails() {
  if (systemmails_ != NULL) systemmails_->::main::SystemMailProto::Clear();
  clear_has_systemmails();
}
inline const ::main::SystemMailProto& UpdateRoleMailResponse::systemmails() const {
  // @@protoc_insertion_point(field_get:main.UpdateRoleMailResponse.systemMails)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return systemmails_ != NULL ? *systemmails_ : *default_instance().systemmails_;
#else
  return systemmails_ != NULL ? *systemmails_ : *default_instance_->systemmails_;
#endif
}
inline ::main::SystemMailProto* UpdateRoleMailResponse::mutable_systemmails() {
  set_has_systemmails();
  if (systemmails_ == NULL) systemmails_ = new ::main::SystemMailProto;
  // @@protoc_insertion_point(field_mutable:main.UpdateRoleMailResponse.systemMails)
  return systemmails_;
}
inline ::main::SystemMailProto* UpdateRoleMailResponse::release_systemmails() {
  clear_has_systemmails();
  ::main::SystemMailProto* temp = systemmails_;
  systemmails_ = NULL;
  return temp;
}
inline void UpdateRoleMailResponse::set_allocated_systemmails(::main::SystemMailProto* systemmails) {
  delete systemmails_;
  systemmails_ = systemmails;
  if (systemmails) {
    set_has_systemmails();
  } else {
    clear_has_systemmails();
  }
  // @@protoc_insertion_point(field_set_allocated:main.UpdateRoleMailResponse.systemMails)
}

// optional .main.MailProto gmMails = 3;
inline bool UpdateRoleMailResponse::has_gmmails() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateRoleMailResponse::set_has_gmmails() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateRoleMailResponse::clear_has_gmmails() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateRoleMailResponse::clear_gmmails() {
  if (gmmails_ != NULL) gmmails_->::main::MailProto::Clear();
  clear_has_gmmails();
}
inline const ::main::MailProto& UpdateRoleMailResponse::gmmails() const {
  // @@protoc_insertion_point(field_get:main.UpdateRoleMailResponse.gmMails)
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  return gmmails_ != NULL ? *gmmails_ : *default_instance().gmmails_;
#else
  return gmmails_ != NULL ? *gmmails_ : *default_instance_->gmmails_;
#endif
}
inline ::main::MailProto* UpdateRoleMailResponse::mutable_gmmails() {
  set_has_gmmails();
  if (gmmails_ == NULL) gmmails_ = new ::main::MailProto;
  // @@protoc_insertion_point(field_mutable:main.UpdateRoleMailResponse.gmMails)
  return gmmails_;
}
inline ::main::MailProto* UpdateRoleMailResponse::release_gmmails() {
  clear_has_gmmails();
  ::main::MailProto* temp = gmmails_;
  gmmails_ = NULL;
  return temp;
}
inline void UpdateRoleMailResponse::set_allocated_gmmails(::main::MailProto* gmmails) {
  delete gmmails_;
  gmmails_ = gmmails;
  if (gmmails) {
    set_has_gmmails();
  } else {
    clear_has_gmmails();
  }
  // @@protoc_insertion_point(field_set_allocated:main.UpdateRoleMailResponse.gmMails)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MailModule_2eproto__INCLUDED
