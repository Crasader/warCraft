// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MonthlyCardModule.proto

#ifndef PROTOBUF_MonthlyCardModule_2eproto__INCLUDED
#define PROTOBUF_MonthlyCardModule_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace main {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_MonthlyCardModule_2eproto();
void protobuf_AssignDesc_MonthlyCardModule_2eproto();
void protobuf_ShutdownFile_MonthlyCardModule_2eproto();

class MonthlyCardShowRequest;
class MonthlyCardShowResponse;
class MonthlyCardShowInfo;
class MonthlyCardRewardRequest;
class MonthlyCardRewardResponse;

// ===================================================================

class MonthlyCardShowRequest : public ::google::protobuf::MessageLite {
 public:
  MonthlyCardShowRequest();
  virtual ~MonthlyCardShowRequest();

  MonthlyCardShowRequest(const MonthlyCardShowRequest& from);

  inline MonthlyCardShowRequest& operator=(const MonthlyCardShowRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const MonthlyCardShowRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MonthlyCardShowRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MonthlyCardShowRequest* other);

  // implements Message ----------------------------------------------

  MonthlyCardShowRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MonthlyCardShowRequest& from);
  void MergeFrom(const MonthlyCardShowRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:main.MonthlyCardShowRequest)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MonthlyCardModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MonthlyCardModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MonthlyCardModule_2eproto();
  friend void protobuf_ShutdownFile_MonthlyCardModule_2eproto();

  void InitAsDefaultInstance();
  static MonthlyCardShowRequest* default_instance_;
};
// -------------------------------------------------------------------

class MonthlyCardShowResponse : public ::google::protobuf::MessageLite {
 public:
  MonthlyCardShowResponse();
  virtual ~MonthlyCardShowResponse();

  MonthlyCardShowResponse(const MonthlyCardShowResponse& from);

  inline MonthlyCardShowResponse& operator=(const MonthlyCardShowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const MonthlyCardShowResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MonthlyCardShowResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MonthlyCardShowResponse* other);

  // implements Message ----------------------------------------------

  MonthlyCardShowResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MonthlyCardShowResponse& from);
  void MergeFrom(const MonthlyCardShowResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.MonthlyCardShowInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::main::MonthlyCardShowInfo& info(int index) const;
  inline ::main::MonthlyCardShowInfo* mutable_info(int index);
  inline ::main::MonthlyCardShowInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::main::MonthlyCardShowInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::main::MonthlyCardShowInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:main.MonthlyCardShowResponse)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::main::MonthlyCardShowInfo > info_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MonthlyCardModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MonthlyCardModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MonthlyCardModule_2eproto();
  friend void protobuf_ShutdownFile_MonthlyCardModule_2eproto();

  void InitAsDefaultInstance();
  static MonthlyCardShowResponse* default_instance_;
};
// -------------------------------------------------------------------

class MonthlyCardShowInfo : public ::google::protobuf::MessageLite {
 public:
  MonthlyCardShowInfo();
  virtual ~MonthlyCardShowInfo();

  MonthlyCardShowInfo(const MonthlyCardShowInfo& from);

  inline MonthlyCardShowInfo& operator=(const MonthlyCardShowInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const MonthlyCardShowInfo& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MonthlyCardShowInfo* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MonthlyCardShowInfo* other);

  // implements Message ----------------------------------------------

  MonthlyCardShowInfo* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MonthlyCardShowInfo& from);
  void MergeFrom(const MonthlyCardShowInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 invalid = 4;
  inline bool has_invalid() const;
  inline void clear_invalid();
  static const int kInvalidFieldNumber = 4;
  inline ::google::protobuf::int32 invalid() const;
  inline void set_invalid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.MonthlyCardShowInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_invalid();
  inline void clear_has_invalid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 invalid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MonthlyCardModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MonthlyCardModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MonthlyCardModule_2eproto();
  friend void protobuf_ShutdownFile_MonthlyCardModule_2eproto();

  void InitAsDefaultInstance();
  static MonthlyCardShowInfo* default_instance_;
};
// -------------------------------------------------------------------

class MonthlyCardRewardRequest : public ::google::protobuf::MessageLite {
 public:
  MonthlyCardRewardRequest();
  virtual ~MonthlyCardRewardRequest();

  MonthlyCardRewardRequest(const MonthlyCardRewardRequest& from);

  inline MonthlyCardRewardRequest& operator=(const MonthlyCardRewardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const MonthlyCardRewardRequest& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MonthlyCardRewardRequest* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MonthlyCardRewardRequest* other);

  // implements Message ----------------------------------------------

  MonthlyCardRewardRequest* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MonthlyCardRewardRequest& from);
  void MergeFrom(const MonthlyCardRewardRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.MonthlyCardRewardRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MonthlyCardModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MonthlyCardModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MonthlyCardModule_2eproto();
  friend void protobuf_ShutdownFile_MonthlyCardModule_2eproto();

  void InitAsDefaultInstance();
  static MonthlyCardRewardRequest* default_instance_;
};
// -------------------------------------------------------------------

class MonthlyCardRewardResponse : public ::google::protobuf::MessageLite {
 public:
  MonthlyCardRewardResponse();
  virtual ~MonthlyCardRewardResponse();

  MonthlyCardRewardResponse(const MonthlyCardRewardResponse& from);

  inline MonthlyCardRewardResponse& operator=(const MonthlyCardRewardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const MonthlyCardRewardResponse& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const MonthlyCardRewardResponse* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(MonthlyCardRewardResponse* other);

  // implements Message ----------------------------------------------

  MonthlyCardRewardResponse* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const MonthlyCardRewardResponse& from);
  void MergeFrom(const MonthlyCardRewardResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);

  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:main.MonthlyCardRewardResponse)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_type();
  inline void clear_has_type();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 type_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_MonthlyCardModule_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_MonthlyCardModule_2eproto();
  #endif
  friend void protobuf_AssignDesc_MonthlyCardModule_2eproto();
  friend void protobuf_ShutdownFile_MonthlyCardModule_2eproto();

  void InitAsDefaultInstance();
  static MonthlyCardRewardResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// MonthlyCardShowRequest

// -------------------------------------------------------------------

// MonthlyCardShowResponse

// repeated .main.MonthlyCardShowInfo info = 1;
inline int MonthlyCardShowResponse::info_size() const {
  return info_.size();
}
inline void MonthlyCardShowResponse::clear_info() {
  info_.Clear();
}
inline const ::main::MonthlyCardShowInfo& MonthlyCardShowResponse::info(int index) const {
  // @@protoc_insertion_point(field_get:main.MonthlyCardShowResponse.info)
  return info_.Get(index);
}
inline ::main::MonthlyCardShowInfo* MonthlyCardShowResponse::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:main.MonthlyCardShowResponse.info)
  return info_.Mutable(index);
}
inline ::main::MonthlyCardShowInfo* MonthlyCardShowResponse::add_info() {
  // @@protoc_insertion_point(field_add:main.MonthlyCardShowResponse.info)
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::main::MonthlyCardShowInfo >&
MonthlyCardShowResponse::info() const {
  // @@protoc_insertion_point(field_list:main.MonthlyCardShowResponse.info)
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::main::MonthlyCardShowInfo >*
MonthlyCardShowResponse::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:main.MonthlyCardShowResponse.info)
  return &info_;
}

// -------------------------------------------------------------------

// MonthlyCardShowInfo

// optional int32 type = 1;
inline bool MonthlyCardShowInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonthlyCardShowInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonthlyCardShowInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonthlyCardShowInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MonthlyCardShowInfo::type() const {
  // @@protoc_insertion_point(field_get:main.MonthlyCardShowInfo.type)
  return type_;
}
inline void MonthlyCardShowInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:main.MonthlyCardShowInfo.type)
}

// optional int32 gold = 2;
inline bool MonthlyCardShowInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonthlyCardShowInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonthlyCardShowInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonthlyCardShowInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 MonthlyCardShowInfo::gold() const {
  // @@protoc_insertion_point(field_get:main.MonthlyCardShowInfo.gold)
  return gold_;
}
inline void MonthlyCardShowInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
  // @@protoc_insertion_point(field_set:main.MonthlyCardShowInfo.gold)
}

// optional int32 state = 3;
inline bool MonthlyCardShowInfo::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MonthlyCardShowInfo::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MonthlyCardShowInfo::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MonthlyCardShowInfo::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 MonthlyCardShowInfo::state() const {
  // @@protoc_insertion_point(field_get:main.MonthlyCardShowInfo.state)
  return state_;
}
inline void MonthlyCardShowInfo::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.MonthlyCardShowInfo.state)
}

// optional int32 invalid = 4;
inline bool MonthlyCardShowInfo::has_invalid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MonthlyCardShowInfo::set_has_invalid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MonthlyCardShowInfo::clear_has_invalid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MonthlyCardShowInfo::clear_invalid() {
  invalid_ = 0;
  clear_has_invalid();
}
inline ::google::protobuf::int32 MonthlyCardShowInfo::invalid() const {
  // @@protoc_insertion_point(field_get:main.MonthlyCardShowInfo.invalid)
  return invalid_;
}
inline void MonthlyCardShowInfo::set_invalid(::google::protobuf::int32 value) {
  set_has_invalid();
  invalid_ = value;
  // @@protoc_insertion_point(field_set:main.MonthlyCardShowInfo.invalid)
}

// -------------------------------------------------------------------

// MonthlyCardRewardRequest

// optional int32 type = 1;
inline bool MonthlyCardRewardRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonthlyCardRewardRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonthlyCardRewardRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonthlyCardRewardRequest::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MonthlyCardRewardRequest::type() const {
  // @@protoc_insertion_point(field_get:main.MonthlyCardRewardRequest.type)
  return type_;
}
inline void MonthlyCardRewardRequest::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:main.MonthlyCardRewardRequest.type)
}

// -------------------------------------------------------------------

// MonthlyCardRewardResponse

// optional int32 state = 1;
inline bool MonthlyCardRewardResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MonthlyCardRewardResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MonthlyCardRewardResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MonthlyCardRewardResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 MonthlyCardRewardResponse::state() const {
  // @@protoc_insertion_point(field_get:main.MonthlyCardRewardResponse.state)
  return state_;
}
inline void MonthlyCardRewardResponse::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:main.MonthlyCardRewardResponse.state)
}

// optional int32 type = 2;
inline bool MonthlyCardRewardResponse::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MonthlyCardRewardResponse::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MonthlyCardRewardResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MonthlyCardRewardResponse::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 MonthlyCardRewardResponse::type() const {
  // @@protoc_insertion_point(field_get:main.MonthlyCardRewardResponse.type)
  return type_;
}
inline void MonthlyCardRewardResponse::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:main.MonthlyCardRewardResponse.type)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MonthlyCardModule_2eproto__INCLUDED
